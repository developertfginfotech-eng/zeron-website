@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 99%;

  --foreground: 220 20% 20%;

  --border: 220 15% 94%;

  --card: 0 0% 100%;

  --card-foreground: 220 20% 20%;

  --card-border: 220 15% 95%;

  --sidebar: 220 8% 98%;

  --sidebar-foreground: 220 20% 20%;

  --sidebar-border: 220 15% 94%;

  --sidebar-primary: 220 100% 50%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 10% 96%;

  --sidebar-accent-foreground: 220 20% 25%;

  --sidebar-ring: 220 100% 50%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 20% 20%;

  --popover-border: 220 15% 92%;

  --primary: 220 100% 50%;

  --primary-foreground: 0 0% 100%;

  --secondary: 220 8% 96%;

  --secondary-foreground: 220 20% 25%;

  --muted: 220 8% 97%;

  --muted-foreground: 220 20% 45%;

  --accent: 220 12% 96%;

  --accent-foreground: 220 20% 25%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 15% 94%;
  --ring: 220 85% 25%;
  --chart-1: 220 85% 25%;
  --chart-2: 142 76% 36%;
  --chart-3: 38 92% 50%;
  --chart-4: 271 81% 56%;
  --chart-5: 262 83% 58%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 43% 11% / 0.05);
  --shadow-xs: 0px 1px 2px 0px hsl(220 43% 11% / 0.05);
  --shadow-sm: 0px 1px 3px 0px hsl(220 43% 11% / 0.1), 0px 1px 2px -1px hsl(220 43% 11% / 0.1);
  --shadow: 0px 1px 3px 0px hsl(220 43% 11% / 0.1), 0px 1px 2px -1px hsl(220 43% 11% / 0.1);
  --shadow-md: 0px 4px 6px -1px hsl(220 43% 11% / 0.1), 0px 2px 4px -2px hsl(220 43% 11% / 0.1);
  --shadow-lg: 0px 10px 15px -3px hsl(220 43% 11% / 0.1), 0px 4px 6px -4px hsl(220 43% 11% / 0.1);
  --shadow-xl: 0px 20px 25px -5px hsl(220 43% 11% / 0.1), 0px 8px 10px -6px hsl(220 43% 11% / 0.1);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 43% 11% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 15% 8%;

  --foreground: 0 0% 95%;

  --border: 220 15% 15%;

  --card: 220 12% 12%;

  --card-foreground: 0 0% 95%;

  --card-border: 220 15% 18%;

  --sidebar: 220 12% 10%;

  --sidebar-foreground: 0 0% 95%;

  --sidebar-border: 220 15% 16%;

  --sidebar-primary: 220 85% 25%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 10% 16%;

  --sidebar-accent-foreground: 0 0% 90%;

  --sidebar-ring: 220 85% 25%;

  --popover: 220 12% 12%;

  --popover-foreground: 0 0% 95%;

  --popover-border: 220 15% 18%;

  --primary: 220 85% 25%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 10% 16%;

  --secondary-foreground: 0 0% 90%;

  --muted: 220 10% 14%;

  --muted-foreground: 0 0% 65%;

  --accent: 220 10% 15%;

  --accent-foreground: 0 0% 90%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 15% 20%;
  --ring: 220 85% 25%;
  --chart-1: 220 85% 45%;
  --chart-2: 142 76% 56%;
  --chart-3: 38 92% 70%;
  --chart-4: 271 81% 76%;
  --chart-5: 262 83% 78%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.1);
  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.1);
  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.2), 0px 1px 2px -1px hsl(0 0% 0% / 0.2);
  --shadow: 0px 1px 3px 0px hsl(0 0% 0% / 0.2), 0px 1px 2px -1px hsl(0 0% 0% / 0.2);
  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.2), 0px 2px 4px -2px hsl(0 0% 0% / 0.2);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.2), 0px 4px 6px -4px hsl(0 0% 0% / 0.2);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.2), 0px 8px 10px -6px hsl(0 0% 0% / 0.2);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.35);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* Modern glassmorphism effects */
  .glass-card {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  }

  .dark .glass-card {
    background: rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
  }

  /* Enhanced shadows */
  .modern-shadow {
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1), 0 4px 25px rgba(0, 0, 0, 0.07);
  }

  .dark .modern-shadow {
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4), 0 4px 25px rgba(0, 0, 0, 0.2);
  }

  /* Gradient backgrounds */
  .gradient-bg {
    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary)) 100%);
  }

  .gradient-card {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);
  }

  .dark .gradient-card {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);
  }

  /* Interactive animations */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }

  .animate-pulse-slow {
    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .animate-scale-up {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .animate-scale-up:hover {
    transform: scale(1.02);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);
  }

  .dark .animate-scale-up:hover {
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  }

  /* Modern borders */
  .border-gradient {
    border: 1px solid transparent;
    background-clip: padding-box;
    position: relative;
  }

  .border-gradient::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask-composite: xor;
    z-index: -1;
  }

  /* Neon glow effects */
  .neon-glow {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
    transition: box-shadow 0.3s ease;
  }

  .neon-glow:hover {
    box-shadow: 0 0 30px hsl(var(--primary) / 0.5);
  }

  /* Shimmer effect */
  .shimmer {
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    background-size: 200% 100%;
    animation: shimmer 2s infinite;
  }

  @keyframes shimmer {
    0% { background-position: -200% 0; }
    100% { background-position: 200% 0; }
  }

  /* Enhanced card effects */
  .enhanced-card {
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .dark .enhanced-card {
    background: rgba(0, 0, 0, 0.4);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .enhanced-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
  }

  .dark .enhanced-card:hover {
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
  }

  /* Modern scrollbars */
  .modern-scrollbar::-webkit-scrollbar {
    width: 6px;
  }

  .modern-scrollbar::-webkit-scrollbar-track {
    background: transparent;
  }

  .modern-scrollbar::-webkit-scrollbar-thumb {
    background: hsl(var(--muted));
    border-radius: 3px;
  }

  .modern-scrollbar::-webkit-scrollbar-thumb:hover {
    background: hsl(var(--muted-foreground));
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* RTL Support */
.rtl {
  direction: rtl;
}

.ltr {
  direction: ltr;
}

/* RTL-specific adjustments */
.rtl .text-left {
  text-align: right;
}

.rtl .text-right {
  text-align: left;
}

.rtl .ml-auto {
  margin-left: auto;
  margin-right: 0;
}

.rtl .mr-auto {
  margin-right: auto;
  margin-left: 0;
}

.rtl .flex-row-reverse {
  flex-direction: row;
}

.rtl .rounded-l-lg {
  border-radius: 0 0.5rem 0.5rem 0;
}

.rtl .rounded-r-lg {
  border-radius: 0.5rem 0 0 0.5rem;
}

/* Mobile Interactive Animations */
@keyframes mobile-bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -8px, 0);
  }
  70% {
    transform: translate3d(0, -4px, 0);
  }
  90% {
    transform: translate3d(0, -2px, 0);
  }
}

@keyframes mobile-scale-in {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes mobile-fade-in-up {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes mobile-slide-in {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes mobile-pulse-glow {
  0%, 100% {
    box-shadow: 0 0 0 0 hsl(var(--primary) / 0.4);
  }
  50% {
    box-shadow: 0 0 0 8px hsl(var(--primary) / 0);
  }
}

/* Enhanced Mobile Animation Classes */
.mobile-bounce {
  animation: mobile-bounce 1s ease-in-out;
}

.mobile-scale-in {
  animation: mobile-scale-in 0.6s ease-out;
}

.mobile-fade-in-up {
  animation: mobile-fade-in-up 0.8s ease-out;
}

.mobile-slide-in {
  animation: mobile-slide-in 0.7s ease-out;
}

.mobile-pulse {
  animation: mobile-pulse 2s infinite;
}

.mobile-pulse-glow {
  animation: mobile-pulse-glow 2s infinite;
}

/* Beautiful Interactive Enhancements */
.interactive-bounce {
  animation: bounceIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.wave-animation {
  animation: wave 2s ease-in-out infinite;
}

.glow-effect {
  animation: glow 2s ease-in-out infinite alternate;
}

/* New Keyframes for Enhanced Animations */
@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3) translateY(50px);
  }
  50% {
    opacity: 1;
    transform: scale(1.05) translateY(-10px);
  }
  70% {
    transform: scale(0.95) translateY(5px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0px);
  }
}

@keyframes wave {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes glow {
  0%, 100% {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  }
  50% {
    box-shadow: 0 0 40px hsl(var(--primary) / 0.6), 0 0 60px hsl(var(--primary) / 0.3);
  }
}

@keyframes shimmer {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes float-particle {
  0% {
    transform: translateY(100vh) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    transform: translateY(-100px) rotate(360deg);
    opacity: 0;
  }
}

/* Particle Animation Background Classes */
.particle-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
}

.particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: hsl(var(--primary) / 0.3);
  border-radius: 50%;
  animation: float-particle 6s infinite linear;
  will-change: transform;
  pointer-events: none;
}

.particle:nth-child(1) { animation-delay: 0s; left: 10%; }
.particle:nth-child(2) { animation-delay: 1s; left: 20%; }
.particle:nth-child(3) { animation-delay: 2s; left: 30%; }
.particle:nth-child(4) { animation-delay: 3s; left: 40%; }
.particle:nth-child(5) { animation-delay: 4s; left: 50%; }

.animate-delay-100 {
  animation-delay: 100ms;
}

.animate-delay-200 {
  animation-delay: 200ms;
}

.animate-delay-300 {
  animation-delay: 300ms;
}

.animate-delay-400 {
  animation-delay: 400ms;
}

.animate-delay-500 {
  animation-delay: 500ms;
}

.animate-delay-600 {
  animation-delay: 600ms;
}

/* Morphing Button Animation */
.morph-button {
  position: relative;
  overflow: hidden;
  transform-style: preserve-3d;
  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.morph-button:hover {
  transform: translateY(-2px) rotateX(5deg);
}

.morph-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
  transition: left 0.5s ease;
  pointer-events: none;
}

.morph-button:hover::before {
  left: 100%;
}

/* Touch Feedback Effect */
.touch-feedback {
  position: relative;
  overflow: hidden;
}

.touch-feedback::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: hsl(var(--primary) / 0.3);
  transform: translate(-50%, -50%);
  transition: all 0.5s ease;
  pointer-events: none;
}

.touch-feedback:active::after {
  width: 200px;
  height: 200px;
  transition: all 0.2s ease;
}

/* Progress Bar Animation */
.progress-bar-animated {
  position: relative;
  overflow: hidden;
}

.progress-bar-animated::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background-image: linear-gradient(
    -45deg,
    rgba(255, 255, 255, 0.2) 25%,
    transparent 25%,
    transparent 50%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0.2) 75%,
    transparent 75%,
    transparent
  );
  background-size: 30px 30px;
  animation: progress-shimmer 2s infinite linear;
}

@keyframes progress-shimmer {
  0% { transform: translateX(-30px); }
  100% { transform: translateX(100%); }
}

/* Enhanced Mobile Background */
.mobile-enhanced {
  background: linear-gradient(135deg, 
    hsl(var(--background)) 0%, 
    hsl(220 15% 99%) 25%,
    hsl(var(--muted)) 100%);
  min-height: 100vh;
}

/* Enhanced Mobile Cards - Beautiful & Interactive */
.mobile-grid .mobile-card {
  transform: translateY(0);
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.98), rgba(255, 255, 255, 0.92));
  backdrop-filter: blur(12px);
  border: 1px solid hsl(var(--primary) / 0.1);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  position: relative;
  overflow: hidden;
}

.mobile-grid .mobile-card::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, 
    transparent, 
    hsl(var(--primary) / 0.1), 
    transparent, 
    hsl(var(--accent) / 0.1), 
    transparent
  );
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.mobile-grid .mobile-card:hover::before {
  opacity: 1;
  animation: shimmer 2s infinite;
}

.mobile-grid .mobile-card:hover {
  transform: translateY(-6px) rotate(1deg);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12);
}

.mobile-card {
  border: 1px solid hsl(var(--border));
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);
  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.9));
  backdrop-filter: blur(10px);
  position: relative;
  overflow: hidden;
}

.mobile-card::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: radial-gradient(circle, hsl(var(--primary) / 0.2) 0%, transparent 70%);
  transform: translate(-50%, -50%);
  transition: all 0.4s ease;
  pointer-events: none;
}

.mobile-card:hover {
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);
  border-color: hsl(var(--primary) / 0.3);
  transform: translateY(-4px) scale(1.02);
}

.mobile-card:active::after {
  width: 300px;
  height: 300px;
}

/* Enhanced Interactive Elements */
.mobile-interactive {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.mobile-interactive:hover {
  transform: scale(1.02);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
}

.mobile-interactive:active {
  transform: scale(0.98);
}

/* Glass effect - Optimized */
.mobile-glass {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(255, 255, 255, 0.3);
}

/* Enhanced Property Cards */
.property-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.property-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transition: left 0.6s;
}

.property-card:hover::before {
  left: 100%;
}

.property-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
}

.mobile-button {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
  transform: translateZ(0);
}

.mobile-button::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width 0.3s, height 0.3s;
}

.mobile-button:hover::before {
  width: 300px;
  height: 300px;
}

.mobile-button:active {
  transform: scale(0.95) translateZ(0);
  transition: all 0.1s ease-out;
}

/* Enhanced Mobile Navigation */
.mobile-nav-item {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.mobile-nav-item::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  width: 0;
  height: 2px;
  background: hsl(var(--primary));
  transition: all 0.3s ease;
  transform: translateX(-50%);
}

.mobile-nav-item.active::before {
  width: 80%;
}

.mobile-nav-item:active {
  transform: scale(0.95);
}

/* Enhanced Property Cards */
.property-card {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.property-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s ease;
}

.property-card:hover::before {
  left: 100%;
}

.property-card:active {
  transform: scale(0.98);
}

/* Staggered Animation Delays */
.animate-delay-100 {
  animation-delay: 0.1s;
}

.animate-delay-200 {
  animation-delay: 0.2s;
}

.animate-delay-300 {
  animation-delay: 0.3s;
}

.animate-delay-400 {
  animation-delay: 0.4s;
}

/* Mobile Responsive Enhancements */
@media (max-width: 768px) {
  .mobile-enhanced {
    padding: 1rem;
  }
  
  .mobile-grid {
    gap: 0.75rem;
  }
  
  .mobile-text {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
  
  .mobile-button-large {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
    min-height: 3rem;
  }
}

/* Touch-friendly Interactive Areas */
.touch-target {
  min-height: 44px;
  min-width: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Glass Morphism Effect for Mobile */
.glass-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.dark .glass-card {
  background: rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* RTL language-specific text direction for specific elements */
.rtl .language-text {
  direction: rtl;
  text-align: right;
}

.rtl .number-text {
  direction: ltr;
  text-align: left;
}

/* Currency display always LTR */
.currency {
  direction: ltr;
  display: inline-block;
}

.rtl .currency {
  direction: ltr;
}

/* Mobile specific RTL adjustments */
@media (max-width: 768px) {
  .rtl .mobile-card {
    text-align: right;
  }
  
  .rtl .mobile-flex {
    flex-direction: row-reverse;
  }
  
  .rtl .mobile-grid {
    direction: rtl;
  }
}