{"file_contents":{"design_guidelines.md":{"content":"# Zaron Real Estate Investment Platform - Design Guidelines\n\n## Design Approach\n**Reference-Based Approach**: Drawing inspiration from modern fintech platforms like Robinhood and real estate platforms like Airbnb, with emphasis on trust, professionalism, and data visualization clarity.\n\n## Core Design Elements\n\n### Color Palette\n**Primary Colors:**\n- Brand Primary: 220 85% 25% (Deep professional blue)\n- Brand Secondary: 220 60% 95% (Light blue for backgrounds)\n\n**Dark Mode:**\n- Background: 220 15% 8% (Dark blue-gray)\n- Surface: 220 12% 12% (Elevated surfaces)\n- Text Primary: 0 0% 95% (Near white)\n\n**Light Mode:**\n- Background: 0 0% 98% (Off-white)\n- Surface: 0 0% 100% (Pure white)\n- Text Primary: 220 15% 15% (Dark gray)\n\n**Accent Colors:**\n- Success: 142 76% 36% (Green for gains/profits)\n- Warning: 38 92% 50% (Orange for pending states)\n- Error: 0 84% 60% (Red for losses/errors)\n\n### Typography\n- **Primary Font**: Inter (Google Fonts) - Modern, professional\n- **Secondary Font**: JetBrains Mono (for financial data/codes)\n- **Hierarchy**: \n  - Headlines: 32px/28px/24px (Bold)\n  - Body: 16px/14px (Regular/Medium)\n  - Captions: 12px (Medium)\n\n### Layout System\n**Spacing Units**: Tailwind 2, 4, 6, 8, 12, 16\n- Consistent 8px grid system\n- Card padding: p-6\n- Section spacing: space-y-8\n- Component margins: m-4\n\n### Component Library\n\n**Navigation:**\n- Mobile: Bottom tab bar with 5 icons (Home, Explore, Portfolio, Documents, Profile)\n- Admin: Collapsible sidebar with grouped menu items\n- Clean typography hierarchy with subtle icons\n\n**Cards & Data Display:**\n- Property cards: Image thumbnail, price, location, ROI percentage\n- Investment summary cards: Large numbers with trend indicators\n- Chart containers: Clean backgrounds with subtle borders\n\n**Forms & Inputs:**\n- Rounded corners (rounded-lg)\n- Focus states with brand color outline\n- File upload areas with drag-and-drop styling\n- Multi-language input support\n\n**Buttons:**\n- Primary: Solid brand color with white text\n- Secondary: Outline with brand color border\n- Floating Action: For quick investment actions\n\n## Platform-Specific Guidelines\n\n### Mobile App (React Native)\n- **Visual Style**: Clean, card-based interface with generous whitespace\n- **Navigation**: Bottom tabs with subtle animations\n- **Investment Flow**: Progressive disclosure with clear CTAs\n- **Charts**: Simplified mobile-friendly visualizations\n\n### Admin Panel (React.js)\n- **Layout**: Sidebar + main content area\n- **Dashboard**: Grid-based with data cards and charts\n- **Tables**: Sortable columns with pagination\n- **Dark/Light Toggle**: Smooth transition between themes\n\n## Multi-Language Considerations\n- **RTL Support**: Proper Arabic text alignment and layout mirroring\n- **Language Toggle**: Prominent switch in navigation\n- **Typography**: Adjusted line heights for Arabic text\n\n## Images\n- **Property Thumbnails**: 16:9 aspect ratio, high-quality architectural photography\n- **User Avatars**: Circular, 40px default size\n- **Document Previews**: PDF/image thumbnails with file type indicators\n- **No Large Hero Images**: Focus on content and functionality over marketing visuals\n\n## Animations\n- **Minimal Use**: Subtle transitions for navigation and state changes\n- **Loading States**: Clean skeleton screens and progress indicators\n- **Success Feedback**: Brief confirmation animations for completed actions\n\nThis design system prioritizes trust, clarity, and professional presentation suitable for financial services while maintaining modern aesthetics and excellent usability across both mobile and web platforms.","size_bytes":3579},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nZaron is a real estate investment platform designed for the Saudi Arabian market, featuring both an admin web panel and mobile application. The platform facilitates property investment management, KYC verification processes, and portfolio tracking. Built as a demo version, it uses mock data flows without external payment or banking integrations. The mobile app now features comprehensive multi-language support with English (default), Arabic (RTL), and Hindi languages, along with enhanced interactivity and modern mobile UI/UX.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **React.js** with TypeScript for the admin web panel\n- **Vite** as the build tool and development server\n- **Wouter** for client-side routing instead of React Router\n- **Tailwind CSS** with custom design system inspired by fintech platforms like Robinhood\n- **shadcn/ui** component library with Radix UI primitives for accessible UI components\n- **Framer Motion** for animations and micro-interactions\n- **TanStack Query** for server state management and API data fetching\n\n## Backend Architecture\n- **Node.js** with Express.js server using ESM modules\n- **TypeScript** throughout the entire stack for type safety\n- **RESTful API** design with endpoints for investors, properties, transactions, and documents\n- **Zod** schemas for runtime data validation and type inference\n- **In-memory storage** implementation with interface-based design for easy database swapping\n\n## Database Design\n- **Drizzle ORM** configured for PostgreSQL with schema definitions\n- **Database schema** includes tables for users, admin users, properties, investors, transactions, chat messages, AI insights, notifications, and KYC documents\n- **Schema validation** using drizzle-zod for consistent data types between frontend and backend\n\n## UI/UX Design System\n- **Design approach** referencing modern fintech and real estate platforms\n- **Color palette** featuring professional blues with dark/light mode support\n- **Typography** using Inter as primary font and JetBrains Mono for financial data\n- **Component hierarchy** with enhanced cards, tables, forms, and specialized real estate components\n- **Responsive design** with mobile-first approach and consistent 8px grid spacing\n\n## Key Features Architecture\n- **KYC Management**: Document upload, review workflows, and status tracking\n- **Property Management**: Listings, investment calculations, and ownership tracking\n- **Transaction Processing**: Investment flows, payouts, and withdrawal handling\n- **AI Integration**: Chat widget, insights panel, and smart analytics\n- **Admin Dashboard**: Comprehensive analytics, user management, and system settings\n- **Multi-language Support**: Full internationalization with English (default), Arabic (RTL), and Hindi\n- **Mobile App Features**: Interactive dashboard, properties display, portfolio tracking, and language switching\n- **Mobile Interactivity**: Touch-friendly animations, hover effects, and responsive design optimized for mobile devices\n\n## Development Patterns\n- **Mock Data Strategy**: Comprehensive mock data throughout for demo functionality\n- **Component-based Architecture**: Reusable UI components with consistent prop interfaces\n- **Type-safe Development**: Shared TypeScript types between client and server\n- **Error Handling**: Toast notifications and user-friendly error states\n- **State Management**: React Query for server state, React hooks for local state\n\n# External Dependencies\n\n## Core Framework Dependencies\n- **@neondatabase/serverless**: PostgreSQL database connectivity (configured but using in-memory storage for demo)\n- **drizzle-orm** and **drizzle-kit**: Database ORM and migration tools\n- **@tanstack/react-query**: Server state management and caching\n- **wouter**: Lightweight client-side routing\n\n## UI Component Libraries\n- **@radix-ui/react-***: Comprehensive set of accessible UI primitives (dialog, dropdown, select, etc.)\n- **framer-motion**: Animation library for enhanced user interactions\n- **recharts**: Chart and data visualization components\n- **cmdk**: Command menu component for search functionality\n\n## Development Tools\n- **vite**: Fast development server and build tool with React plugin\n- **tailwindcss**: Utility-first CSS framework with custom configuration\n- **typescript**: Type checking and enhanced developer experience\n- **eslint** and **prettier**: Code quality and formatting tools\n\n## Utility Libraries\n- **date-fns**: Date manipulation and formatting\n- **zod**: Runtime type validation and schema definition\n- **clsx** and **tailwind-merge**: CSS class name utilities\n- **nanoid**: Unique ID generation\n\n## Form and Validation\n- **react-hook-form**: Form state management\n- **@hookform/resolvers**: Form validation resolvers for Zod schemas\n\n## Session Management\n- **connect-pg-simple**: PostgreSQL session store for Express sessions (configured for future use)\n\nNote: The application is configured to work with PostgreSQL through Neon Database but currently uses in-memory storage for the demo version. Database migrations and full persistence can be enabled by setting up the DATABASE_URL environment variable.","size_bytes":5231},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { ChatWebSocketServer } from \"./websocket\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  // Initialize WebSocket server\n  const wsServer = new ChatWebSocketServer(server);\n  console.log('WebSocket server initialized');\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2250},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { \n  insertInvestorSchema, \n  insertPropertySchema, \n  insertTransactionSchema, \n  insertChatMessageSchema, \n  insertAiInsightSchema \n} from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Investors endpoints\n  app.get(\"/api/investors\", async (req, res) => {\n    try {\n      const investors = await storage.getAllInvestors();\n      res.json(investors);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch investors\" });\n    }\n  });\n\n  app.get(\"/api/investors/:id\", async (req, res) => {\n    try {\n      const investor = await storage.getInvestor(req.params.id);\n      if (!investor) {\n        return res.status(404).json({ error: \"Investor not found\" });\n      }\n      res.json(investor);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch investor\" });\n    }\n  });\n\n  app.post(\"/api/investors\", async (req, res) => {\n    try {\n      const validatedData = insertInvestorSchema.parse(req.body);\n      const investor = await storage.createInvestor(validatedData);\n      res.status(201).json(investor);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid investor data\" });\n    }\n  });\n\n  app.put(\"/api/investors/:id\", async (req, res) => {\n    try {\n      const validatedData = insertInvestorSchema.partial().parse(req.body);\n      const investor = await storage.updateInvestor(req.params.id, validatedData);\n      if (!investor) {\n        return res.status(404).json({ error: \"Investor not found\" });\n      }\n      res.json(investor);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid investor data\" });\n    }\n  });\n\n  // Properties endpoints\n  app.get(\"/api/properties\", async (req, res) => {\n    try {\n      const properties = await storage.getAllProperties();\n      res.json(properties);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch properties\" });\n    }\n  });\n\n  app.get(\"/api/properties/:id\", async (req, res) => {\n    try {\n      const property = await storage.getProperty(req.params.id);\n      if (!property) {\n        return res.status(404).json({ error: \"Property not found\" });\n      }\n      res.json(property);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch property\" });\n    }\n  });\n\n  app.post(\"/api/properties\", async (req, res) => {\n    try {\n      const validatedData = insertPropertySchema.parse(req.body);\n      const property = await storage.createProperty(validatedData);\n      res.status(201).json(property);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid property data\" });\n    }\n  });\n\n  // Transactions endpoints\n  app.get(\"/api/transactions\", async (req, res) => {\n    try {\n      const transactions = await storage.getAllTransactions();\n      res.json(transactions);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch transactions\" });\n    }\n  });\n\n  app.get(\"/api/transactions/investor/:investorId\", async (req, res) => {\n    try {\n      const transactions = await storage.getTransactionsByInvestor(req.params.investorId);\n      res.json(transactions);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch transactions\" });\n    }\n  });\n\n  app.post(\"/api/transactions\", async (req, res) => {\n    try {\n      const validatedData = insertTransactionSchema.parse(req.body);\n      const transaction = await storage.createTransaction(validatedData);\n      res.status(201).json(transaction);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid transaction data\" });\n    }\n  });\n\n  // Chat messages endpoints\n  app.get(\"/api/chat/messages\", async (req, res) => {\n    try {\n      const userId = req.query.userId as string | undefined;\n      const messages = await storage.getChatMessagesByUser(userId);\n      res.json(messages);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch chat messages\" });\n    }\n  });\n\n  app.post(\"/api/chat/messages\", async (req, res) => {\n    try {\n      const validatedData = insertChatMessageSchema.parse(req.body);\n      const message = await storage.createChatMessage(validatedData);\n      res.status(201).json(message);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid message data\" });\n    }\n  });\n\n  // AI Insights endpoints\n  app.get(\"/api/ai/insights\", async (req, res) => {\n    try {\n      const type = req.query.type as string | undefined;\n      const insights = type \n        ? await storage.getAiInsightsByType(type)\n        : await storage.getAllAiInsights();\n      res.json(insights);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to fetch AI insights\" });\n    }\n  });\n\n  app.post(\"/api/ai/insights\", async (req, res) => {\n    try {\n      const validatedData = insertAiInsightSchema.parse(req.body);\n      const insight = await storage.createAiInsight(validatedData);\n      res.status(201).json(insight);\n    } catch (error) {\n      res.status(400).json({ error: \"Invalid insight data\" });\n    }\n  });\n\n  // AI Chat completion endpoint (will integrate with OpenAI)\n  app.post(\"/api/ai/chat\", async (req, res) => {\n    try {\n      const { message, userId, language } = req.body;\n      \n      if (!message) {\n        return res.status(400).json({ error: \"Message is required\" });\n      }\n\n      // Store user message\n      await storage.createChatMessage({\n        userId: userId || null,\n        message,\n        sender: \"user\",\n        aiContext: null\n      });\n\n      // Generate AI response (for now, mock response)\n      const aiResponse = generateMockAiResponse(message, language);\n      \n      // Store AI response\n      const aiMessage = await storage.createChatMessage({\n        userId: userId || null,\n        message: aiResponse,\n        sender: \"ai\",\n        aiContext: \"response\"\n      });\n\n      res.json(aiMessage);\n    } catch (error) {\n      res.status(500).json({ error: \"Failed to process chat message\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n\n// Mock AI response function (will be replaced with OpenAI integration)\nfunction generateMockAiResponse(userMessage: string, language?: string): string {\n  const lowerMessage = userMessage.toLowerCase();\n  \n  if (lowerMessage.includes('dashboard') || lowerMessage.includes('overview')) {\n    return language === 'ar' \n      ? 'أرى أنك تسأل عن لوحة التحكم. حالياً لديك مستخدمون نشطون وعقارات متاحة للاستثمار.'\n      : 'I see you\\'re asking about the dashboard. Currently you have active users and properties available for investment.';\n  } else if (lowerMessage.includes('property') || lowerMessage.includes('عقار')) {\n    return language === 'ar'\n      ? 'بخصوص العقارات، لدينا فرص استثمارية ممتازة في الرياض وجدة.'\n      : 'Regarding properties, we have excellent investment opportunities in Riyadh and Jeddah.';\n  } else if (lowerMessage.includes('kyc') || lowerMessage.includes('verification')) {\n    return language === 'ar'\n      ? 'لديك طلبات KYC في انتظار المراجعة. معدل الموافقة الحالي مرتفع.'\n      : 'You have KYC requests pending review. Current approval rate is high.';\n  } else {\n    return language === 'ar'\n      ? 'شكراً لك على سؤالك. كيف يمكنني مساعدتك في إدارة استثماراتك العقارية؟'\n      : 'Thank you for your question. How can I help you manage your real estate investments?';\n  }\n}","size_bytes":7647},"server/storage.ts":{"content":"import { \n  type User, \n  type InsertUser,\n  type Investor,\n  type InsertInvestor,\n  type Property,\n  type InsertProperty,\n  type Transaction,\n  type InsertTransaction,\n  type ChatMessage,\n  type InsertChatMessage,\n  type AiInsight,\n  type InsertAiInsight,\n  type Notification\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// Storage interface for all entities\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  \n  // Investors\n  getInvestor(id: string): Promise<Investor | undefined>;\n  getAllInvestors(): Promise<Investor[]>;\n  createInvestor(investor: InsertInvestor): Promise<Investor>;\n  updateInvestor(id: string, updates: Partial<InsertInvestor>): Promise<Investor | undefined>;\n  \n  // Properties\n  getProperty(id: string): Promise<Property | undefined>;\n  getAllProperties(): Promise<Property[]>;\n  createProperty(property: InsertProperty): Promise<Property>;\n  updateProperty(id: string, updates: Partial<InsertProperty>): Promise<Property | undefined>;\n  \n  // Transactions\n  getTransaction(id: string): Promise<Transaction | undefined>;\n  getTransactionsByInvestor(investorId: string): Promise<Transaction[]>;\n  getAllTransactions(): Promise<Transaction[]>;\n  createTransaction(transaction: InsertTransaction): Promise<Transaction>;\n  \n  // Chat Messages\n  getChatMessage(id: string): Promise<ChatMessage | undefined>;\n  getChatMessagesByUser(userId?: string): Promise<ChatMessage[]>;\n  createChatMessage(message: InsertChatMessage): Promise<ChatMessage>;\n  \n  // AI Insights\n  getAiInsight(id: string): Promise<AiInsight | undefined>;\n  getAiInsightsByType(type: string): Promise<AiInsight[]>;\n  getAllAiInsights(): Promise<AiInsight[]>;\n  createAiInsight(insight: InsertAiInsight): Promise<AiInsight>;\n  \n  // Notifications\n  getAllNotifications(): Promise<Notification[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private investors: Map<string, Investor>;\n  private properties: Map<string, Property>;\n  private transactions: Map<string, Transaction>;\n  private chatMessages: Map<string, ChatMessage>;\n  private aiInsights: Map<string, AiInsight>;\n  private notifications: Map<string, Notification>;\n\n  constructor() {\n    this.users = new Map();\n    this.investors = new Map();\n    this.properties = new Map();\n    this.transactions = new Map();\n    this.chatMessages = new Map();\n    this.aiInsights = new Map();\n    this.notifications = new Map();\n    \n    // Initialize with some sample data\n    this.initializeSampleData();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  // Investors\n  async getInvestor(id: string): Promise<Investor | undefined> {\n    return this.investors.get(id);\n  }\n\n  async getAllInvestors(): Promise<Investor[]> {\n    return Array.from(this.investors.values());\n  }\n\n  async createInvestor(insertInvestor: InsertInvestor): Promise<Investor> {\n    const id = randomUUID();\n    const investor: Investor = { \n      ...insertInvestor, \n      id, \n      createdAt: new Date() \n    };\n    this.investors.set(id, investor);\n    return investor;\n  }\n\n  async updateInvestor(id: string, updates: Partial<InsertInvestor>): Promise<Investor | undefined> {\n    const investor = this.investors.get(id);\n    if (!investor) return undefined;\n    \n    const updated = { ...investor, ...updates };\n    this.investors.set(id, updated);\n    return updated;\n  }\n\n  // Properties\n  async getProperty(id: string): Promise<Property | undefined> {\n    return this.properties.get(id);\n  }\n\n  async getAllProperties(): Promise<Property[]> {\n    return Array.from(this.properties.values());\n  }\n\n  async createProperty(insertProperty: InsertProperty): Promise<Property> {\n    const id = randomUUID();\n    const property: Property = { \n      ...insertProperty, \n      id, \n      createdAt: new Date() \n    };\n    this.properties.set(id, property);\n    return property;\n  }\n\n  async updateProperty(id: string, updates: Partial<InsertProperty>): Promise<Property | undefined> {\n    const property = this.properties.get(id);\n    if (!property) return undefined;\n    \n    const updated = { ...property, ...updates };\n    this.properties.set(id, updated);\n    return updated;\n  }\n\n  // Transactions\n  async getTransaction(id: string): Promise<Transaction | undefined> {\n    return this.transactions.get(id);\n  }\n\n  async getTransactionsByInvestor(investorId: string): Promise<Transaction[]> {\n    return Array.from(this.transactions.values())\n      .filter(t => t.investorId === investorId);\n  }\n\n  async getAllTransactions(): Promise<Transaction[]> {\n    return Array.from(this.transactions.values());\n  }\n\n  async createTransaction(insertTransaction: InsertTransaction): Promise<Transaction> {\n    const id = randomUUID();\n    const transaction: Transaction = { \n      ...insertTransaction, \n      id, \n      createdAt: new Date() \n    };\n    this.transactions.set(id, transaction);\n    return transaction;\n  }\n\n  // Chat Messages\n  async getChatMessage(id: string): Promise<ChatMessage | undefined> {\n    return this.chatMessages.get(id);\n  }\n\n  async getChatMessagesByUser(userId?: string): Promise<ChatMessage[]> {\n    const allMessages = Array.from(this.chatMessages.values());\n    if (!userId) return allMessages;\n    return allMessages.filter(m => m.userId === userId);\n  }\n\n  async createChatMessage(insertMessage: InsertChatMessage): Promise<ChatMessage> {\n    const id = randomUUID();\n    const message: ChatMessage = { \n      ...insertMessage, \n      id, \n      createdAt: new Date() \n    };\n    this.chatMessages.set(id, message);\n    return message;\n  }\n\n  // AI Insights\n  async getAiInsight(id: string): Promise<AiInsight | undefined> {\n    return this.aiInsights.get(id);\n  }\n\n  async getAiInsightsByType(type: string): Promise<AiInsight[]> {\n    return Array.from(this.aiInsights.values())\n      .filter(insight => insight.type === type);\n  }\n\n  async getAllAiInsights(): Promise<AiInsight[]> {\n    return Array.from(this.aiInsights.values());\n  }\n\n  async createAiInsight(insertInsight: InsertAiInsight): Promise<AiInsight> {\n    const id = randomUUID();\n    const insight: AiInsight = { \n      ...insertInsight, \n      id, \n      createdAt: new Date() \n    };\n    this.aiInsights.set(id, insight);\n    return insight;\n  }\n\n  // Notifications\n  async getAllNotifications(): Promise<Notification[]> {\n    return Array.from(this.notifications.values());\n  }\n\n  private initializeSampleData() {\n    // Sample investors with proper typing\n    const sampleInvestors: Omit<Investor, 'id' | 'createdAt'>[] = [\n      {\n        name: 'Ahmed Al-Rashid',\n        email: 'ahmed.rashid@example.com',\n        phone: '+966 50 123 4567',\n        kycStatus: 'approved',\n        totalInvested: '750000',\n        activeProperties: 3,\n        monthlyIncome: '12500',\n        nationality: 'Saudi Arabia',\n        documentsUploaded: true\n      },\n      {\n        name: 'Sarah Johnson',\n        email: 'sarah.johnson@example.com',\n        phone: '+966 55 987 6543',\n        kycStatus: 'approved',\n        totalInvested: '520000',\n        activeProperties: 5,\n        monthlyIncome: '28400',\n        nationality: 'United States',\n        documentsUploaded: true\n      },\n      {\n        name: 'Mohammad Al-Zahra',\n        email: 'mohammad.zahra@example.com',\n        phone: '+966 56 456 7890',\n        kycStatus: 'pending',\n        totalInvested: '0',\n        activeProperties: 0,\n        monthlyIncome: '0',\n        nationality: 'Saudi Arabia',\n        documentsUploaded: false\n      }\n    ];\n\n    sampleInvestors.forEach(investor => {\n      const id = randomUUID();\n      this.investors.set(id, {\n        ...investor,\n        id,\n        createdAt: new Date()\n      });\n    });\n\n    // Sample properties with proper typing\n    const sampleProperties: Omit<Property, 'id' | 'createdAt'>[] = [\n      {\n        title: 'Luxury Apartments Riyadh',\n        description: 'Premium residential complex in the heart of Riyadh',\n        location: 'Riyadh, Saudi Arabia',\n        price: '2500000',\n        propertyType: 'Residential',\n        yield: '8.5',\n        ownershipCap: 100,\n        status: 'active',\n        images: ['/assets/property1.jpg']\n      },\n      {\n        title: 'Commercial Tower Jeddah',\n        description: 'Modern office tower with premium amenities',\n        location: 'Jeddah, Saudi Arabia',\n        price: '5200000',\n        propertyType: 'Commercial',\n        yield: '9.2',\n        ownershipCap: 100,\n        status: 'active',\n        images: ['/assets/property2.jpg']\n      }\n    ];\n\n    sampleProperties.forEach(property => {\n      const id = randomUUID();\n      this.properties.set(id, {\n        ...property,\n        id,\n        createdAt: new Date()\n      });\n    });\n\n    // Sample AI insights with proper typing\n    const sampleInsights: Omit<AiInsight, 'id' | 'createdAt'>[] = [\n      {\n        type: 'market',\n        title: 'Strong Residential Demand in Riyadh',\n        content: 'AI analysis shows 23% increase in residential property inquiries in Riyadh over the past month.',\n        confidence: '0.92',\n        entityId: null\n      },\n      {\n        type: 'risk',\n        title: 'KYC Processing Bottleneck Detected',\n        content: 'AI detected average KYC processing time increased to 4.2 days.',\n        confidence: '0.98',\n        entityId: null\n      }\n    ];\n\n    sampleInsights.forEach(insight => {\n      const id = randomUUID();\n      this.aiInsights.set(id, {\n        ...insight,\n        id,\n        createdAt: new Date()\n      });\n    });\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":10071},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"server/websocket.ts":{"content":"import { WebSocketServer, WebSocket } from 'ws';\nimport { IncomingMessage } from 'http';\nimport { storage } from './storage';\nimport { insertChatMessageSchema } from '@shared/schema';\n\ninterface ExtendedWebSocket extends WebSocket {\n  isAlive?: boolean;\n  userId?: string;\n}\n\ninterface WebSocketMessage {\n  type: 'chat' | 'ping' | 'join' | 'typing';\n  data?: {\n    message?: string;\n    userId?: string;\n    language?: 'en' | 'ar';\n  };\n}\n\nexport class ChatWebSocketServer {\n  private wss: WebSocketServer;\n  private clients = new Map<string, ExtendedWebSocket>();\n\n  constructor(server: any) {\n    this.wss = new WebSocketServer({ \n      server,\n      path: '/ws' // Only handle WebSocket connections on /ws path\n    });\n    \n    this.wss.on('connection', (ws: ExtendedWebSocket, request: IncomingMessage) => {\n      console.log('New WebSocket connection established');\n      \n      ws.isAlive = true;\n      ws.on('pong', () => {\n        ws.isAlive = true;\n      });\n\n      ws.on('message', async (data: Buffer) => {\n        try {\n          const message: WebSocketMessage = JSON.parse(data.toString());\n          await this.handleMessage(ws, message);\n        } catch (error) {\n          console.error('Error handling WebSocket message:', error);\n          ws.send(JSON.stringify({\n            type: 'error',\n            data: { message: 'Invalid message format' }\n          }));\n        }\n      });\n\n      ws.on('close', () => {\n        console.log('WebSocket connection closed');\n        // Remove from clients map\n        this.clients.forEach((client, userId) => {\n          if (client === ws) {\n            this.clients.delete(userId);\n          }\n        });\n      });\n\n      ws.on('error', (error) => {\n        console.error('WebSocket error:', error);\n      });\n    });\n\n    // Heartbeat to detect broken connections\n    setInterval(() => {\n      this.wss.clients.forEach((ws: ExtendedWebSocket) => {\n        if (!ws.isAlive) {\n          return ws.terminate();\n        }\n        \n        ws.isAlive = false;\n        ws.ping();\n      });\n    }, 30000);\n  }\n\n  private async handleMessage(ws: ExtendedWebSocket, message: WebSocketMessage) {\n    switch (message.type) {\n      case 'join':\n        if (message.data?.userId) {\n          ws.userId = message.data.userId;\n          this.clients.set(message.data.userId, ws);\n          \n          // Send recent chat history\n          const recentMessages = await storage.getChatMessagesByUser(message.data.userId);\n          ws.send(JSON.stringify({\n            type: 'history',\n            data: { messages: recentMessages.slice(-20) } // Last 20 messages\n          }));\n        }\n        break;\n\n      case 'chat':\n        await this.handleChatMessage(ws, message);\n        break;\n\n      case 'typing':\n        // Broadcast typing indicator to other clients (if needed)\n        this.broadcastToUser(ws.userId, {\n          type: 'typing',\n          data: { userId: ws.userId, typing: true }\n        });\n        break;\n\n      case 'ping':\n        ws.send(JSON.stringify({ type: 'pong' }));\n        break;\n    }\n  }\n\n  private async handleChatMessage(ws: ExtendedWebSocket, message: WebSocketMessage) {\n    if (!message.data?.message) {\n      return ws.send(JSON.stringify({\n        type: 'error',\n        data: { message: 'Message content is required' }\n      }));\n    }\n\n    try {\n      // Store user message\n      const userMessage = await storage.createChatMessage({\n        userId: ws.userId || null,\n        message: message.data.message,\n        sender: 'user',\n        aiContext: null\n      });\n\n      // Broadcast user message immediately\n      ws.send(JSON.stringify({\n        type: 'message',\n        data: userMessage\n      }));\n\n      // Generate AI response\n      const aiResponse = await this.generateAiResponse(\n        message.data.message, \n        message.data.language || 'en'\n      );\n\n      // Store AI response\n      const aiMessage = await storage.createChatMessage({\n        userId: ws.userId || null,\n        message: aiResponse,\n        sender: 'ai',\n        aiContext: 'response'\n      });\n\n      // Send AI response with typing delay for realism\n      setTimeout(() => {\n        ws.send(JSON.stringify({\n          type: 'message',\n          data: aiMessage\n        }));\n      }, 1000 + Math.random() * 2000); // 1-3 second delay\n\n    } catch (error) {\n      console.error('Error handling chat message:', error);\n      ws.send(JSON.stringify({\n        type: 'error',\n        data: { message: 'Failed to process message' }\n      }));\n    }\n  }\n\n  private async generateAiResponse(userMessage: string, language: string): Promise<string> {\n    // For now, use enhanced mock responses\n    // TODO: Replace with real OpenAI integration\n    const lowerMessage = userMessage.toLowerCase();\n    \n    // Context-aware responses based on real estate domain\n    if (lowerMessage.includes('dashboard') || lowerMessage.includes('overview') || lowerMessage.includes('لوحة')) {\n      return language === 'ar' \n        ? '📊 مرحباً! لوحة التحكم تُظهر حالياً 127 مستثمر نشط و45 عقار متاح. نسبة نمو الاستثمارات هذا الشهر 8.3%. هل تريد تفاصيل أكثر عن قطاع معين؟'\n        : '📊 Hello! Your dashboard shows 127 active investors and 45 available properties. Investment growth this month is 8.3%. Would you like details about a specific sector?';\n    } \n    \n    else if (lowerMessage.includes('property') || lowerMessage.includes('عقار') || lowerMessage.includes('استثمار')) {\n      return language === 'ar'\n        ? '🏢 لدينا فرص استثمارية ممتازة! العقارات السكنية في الرياض تحقق عائد 9.2%، والتجارية في جدة 11.5%. أفضل الفرص حالياً في القطاع التجاري. أي نوع عقار يهمك؟'\n        : '🏢 We have excellent investment opportunities! Residential properties in Riyadh yield 9.2%, commercial in Jeddah 11.5%. Best current opportunities are in commercial sector. What property type interests you?';\n    } \n    \n    else if (lowerMessage.includes('kyc') || lowerMessage.includes('verification') || lowerMessage.includes('توثيق')) {\n      return language === 'ar'\n        ? '✅ حالة KYC: 12 طلب في انتظار المراجعة، 8 تمت الموافقة عليها اليوم. متوسط وقت المعالجة 2.4 يوم. نسبة الموافقة 94%. هل تحتاج مراجعة طلب معين؟'\n        : '✅ KYC Status: 12 pending review, 8 approved today. Average processing time 2.4 days. Approval rate 94%. Do you need to review a specific application?';\n    }\n    \n    else if (lowerMessage.includes('analytics') || lowerMessage.includes('report') || lowerMessage.includes('تقرير')) {\n      return language === 'ar'\n        ? '📈 التحليلات الذكية تُظهر: ارتفاع طلبات الاستثمار السكني 23%، انخفاض المخاطر للمحفظة الحالية، توقع نمو 15% للربع القادم. تريد تقرير مفصل؟'\n        : '📈 Smart analytics show: 23% increase in residential investment requests, decreased risk for current portfolio, projected 15% growth next quarter. Want a detailed report?';\n    }\n    \n    else if (lowerMessage.includes('hello') || lowerMessage.includes('hi') || lowerMessage.includes('مرحبا') || lowerMessage.includes('السلام')) {\n      return language === 'ar'\n        ? '👋 أهلاً وسهلاً! أنا مساعدك الذكي لمنصة زارون العقارية. يمكنني مساعدتك في إدارة الاستثمارات، مراجعة بيانات العملاء، وتحليل الأداء. كيف يمكنني خدمتك اليوم؟'\n        : '👋 Welcome! I\\'m your AI assistant for Zaron Real Estate Platform. I can help you manage investments, review customer data, and analyze performance. How can I assist you today?';\n    }\n    \n    else {\n      return language === 'ar'\n        ? '🤖 شكراً لك على سؤالك. أنا هنا لمساعدتك في جميع أمور الاستثمار العقاري. يمكنني مساعدتك في: 📊 تحليل البيانات، 👥 إدارة العملاء، 🏢 مراجعة العقارات، 📈 التقارير المالية. ما الذي تود معرفته؟'\n        : '🤖 Thank you for your question. I\\'m here to help with all real estate investment matters. I can assist with: 📊 Data analysis, 👥 Customer management, 🏢 Property reviews, 📈 Financial reports. What would you like to know?';\n    }\n  }\n\n  private broadcastToUser(userId: string | undefined, message: any) {\n    if (!userId) return;\n    \n    const client = this.clients.get(userId);\n    if (client && client.readyState === WebSocket.OPEN) {\n      client.send(JSON.stringify(message));\n    }\n  }\n\n  public broadcastToAll(message: any) {\n    this.wss.clients.forEach((client) => {\n      if (client.readyState === WebSocket.OPEN) {\n        client.send(JSON.stringify(message));\n      }\n    });\n  }\n}","size_bytes":9091},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, decimal, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const adminUsers = pgTable(\"admin_users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  role: text(\"role\").notNull().default(\"admin\"), // \"super_admin\", \"admin\", \"manager\", \"viewer\"\n  accessLevel: text(\"access_level\").notNull().default(\"full\"), // \"full\", \"limited\", \"read_only\"\n  avatar: text(\"avatar\"),\n  phone: text(\"phone\"),\n  department: text(\"department\"),\n  lastLogin: timestamp(\"last_login\"),\n  status: text(\"status\").notNull().default(\"active\"), // \"active\", \"inactive\", \"suspended\"\n  permissions: text(\"permissions\").array().default(sql`ARRAY[]::text[]`), // array of permission strings\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const properties = pgTable(\"properties\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  location: text(\"location\").notNull(),\n  price: decimal(\"price\", { precision: 12, scale: 2 }).notNull(),\n  propertyType: text(\"property_type\").notNull(),\n  yield: decimal(\"yield\", { precision: 5, scale: 2 }),\n  ownershipCap: integer(\"ownership_cap\").default(100),\n  status: text(\"status\").notNull().default(\"upcoming\"),\n  images: text(\"images\").array(),\n  // Investment tracking fields\n  totalInvestment: decimal(\"total_investment\", { precision: 12, scale: 2 }).default(\"0\"),\n  investorCount: integer(\"investor_count\").default(0),\n  currentOwnership: decimal(\"current_ownership\", { precision: 5, scale: 2 }).default(\"0\"), // percentage owned\n  monthlyRevenue: decimal(\"monthly_revenue\", { precision: 10, scale: 2 }).default(\"0\"),\n  totalRevenue: decimal(\"total_revenue\", { precision: 12, scale: 2 }).default(\"0\"),\n  occupancyRate: decimal(\"occupancy_rate\", { precision: 5, scale: 2 }).default(\"0\"), // percentage\n  performance: text(\"performance\").default(\"stable\"), // \"excellent\", \"good\", \"stable\", \"declining\"\n  lastDividendDate: timestamp(\"last_dividend_date\"),\n  deactivationReason: text(\"deactivation_reason\"), // reason if property is deactivated\n  deactivatedAt: timestamp(\"deactivated_at\"),\n  deactivatedBy: varchar(\"deactivated_by\"), // admin who deactivated\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const investors = pgTable(\"investors\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  phone: text(\"phone\"),\n  kycStatus: text(\"kyc_status\").notNull().default(\"pending\"), // \"pending\", \"approved\", \"rejected\", \"under_review\"\n  totalInvested: decimal(\"total_invested\", { precision: 12, scale: 2 }).default(\"0\"),\n  activeProperties: integer(\"active_properties\").default(0),\n  monthlyIncome: decimal(\"monthly_income\", { precision: 10, scale: 2 }).default(\"0\"),\n  nationality: text(\"nationality\"),\n  documentsUploaded: boolean(\"documents_uploaded\").default(false),\n  // Additional KYC fields\n  firstName: text(\"first_name\"),\n  lastName: text(\"last_name\"),\n  salutation: text(\"salutation\"), // \"Mr\", \"Mrs\", \"Ms\", \"Dr\"\n  gender: text(\"gender\"), // \"male\", \"female\", \"other\"\n  dateOfBirth: timestamp(\"date_of_birth\"),\n  occupation: text(\"occupation\"),\n  jobCategory: text(\"job_category\"), // \"executive\", \"management\", \"professional\", \"skilled_worker\", \"entry_level\", \"labor\"\n  jobTitle: text(\"job_title\"),\n  company: text(\"company\"),\n  workExperience: integer(\"work_experience\"), // years of experience\n  city: text(\"city\"),\n  country: text(\"country\"),\n  address: text(\"address\"),\n  profilePicture: text(\"profile_picture\"),\n  applicationProgress: integer(\"application_progress\").default(0), // 0-100 percentage\n  appDownloadedAt: timestamp(\"app_downloaded_at\"),\n  kycSubmittedAt: timestamp(\"kyc_submitted_at\"),\n  aiRiskScore: integer(\"ai_risk_score\"), // 1-100 AI calculated risk score\n  investorTier: text(\"investor_tier\"), // \"top\", \"medium\", \"low\"\n  preferredLanguage: text(\"preferred_language\").default(\"en\"),\n  languagesSpoken: text(\"languages_spoken\").array().default(sql`ARRAY[]::text[]`), // array of language codes\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const transactions = pgTable(\"transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  investorId: varchar(\"investor_id\").references(() => investors.id),\n  propertyId: varchar(\"property_id\").references(() => properties.id),\n  type: text(\"type\").notNull(), // \"investment\", \"payout\", \"withdrawal\", \"dividend\", \"fee\"\n  amount: decimal(\"amount\", { precision: 12, scale: 2 }).notNull(),\n  fee: decimal(\"fee\", { precision: 10, scale: 2 }).default(\"0\"),\n  description: text(\"description\"),\n  reference: text(\"reference\"), // Transaction reference number\n  status: text(\"status\").notNull().default(\"pending\"), // \"pending\", \"completed\", \"failed\", \"cancelled\", \"rejected\"\n  paymentMethod: text(\"payment_method\"), // \"bank_transfer\", \"card\", \"wallet\"\n  bankDetails: text(\"bank_details\"), // JSON string of bank details\n  processedAt: timestamp(\"processed_at\"),\n  processedBy: varchar(\"processed_by\").references(() => adminUsers.id), // Admin who processed\n  rejectionReason: text(\"rejection_reason\"), // Reason for rejection\n  rejectionComment: text(\"rejection_comment\"), // Additional comments for rejection\n  aiAnalysis: text(\"ai_analysis\"), // AI analysis of transaction\n  aiRiskScore: integer(\"ai_risk_score\"), // AI calculated risk score 1-100\n  aiRecommendation: text(\"ai_recommendation\"), // AI recommendation\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const withdrawalRequests = pgTable(\"withdrawal_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  investorId: varchar(\"investor_id\").references(() => investors.id).notNull(),\n  amount: decimal(\"amount\", { precision: 12, scale: 2 }).notNull(),\n  reason: text(\"reason\"), // Reason for withdrawal\n  bankAccount: text(\"bank_account\").notNull(), // Bank account details (JSON)\n  status: text(\"status\").notNull().default(\"pending\"), // \"pending\", \"approved\", \"rejected\", \"processing\", \"completed\"\n  requestedAt: timestamp(\"requested_at\").defaultNow(),\n  reviewedAt: timestamp(\"reviewed_at\"),\n  reviewedBy: varchar(\"reviewed_by\").references(() => adminUsers.id),\n  rejectionReason: text(\"rejection_reason\"), // Standardized rejection reason\n  rejectionComment: text(\"rejection_comment\"), // Additional rejection comments\n  processedAt: timestamp(\"processed_at\"),\n  transactionId: varchar(\"transaction_id\").references(() => transactions.id), // Linked transaction when processed\n  aiAnalysis: text(\"ai_analysis\"), // AI analysis of withdrawal request\n  aiRiskScore: integer(\"ai_risk_score\"), // AI risk assessment\n  aiRecommendation: text(\"ai_recommendation\"), // AI recommendation\n  priority: text(\"priority\").default(\"normal\"), // \"low\", \"normal\", \"high\", \"urgent\"\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const kycDocuments = pgTable(\"kyc_documents\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  investorId: varchar(\"investor_id\").references(() => investors.id),\n  documentType: text(\"document_type\").notNull(), // \"national_id\", \"passport\", \"iqama\", \"selfie\", \"proof_of_income\", \"address_proof\", \"employment_letter\", \"bank_statement\"\n  documentUrl: text(\"document_url\").notNull(),\n  status: text(\"status\").notNull().default(\"pending\"), // \"pending\", \"approved\", \"rejected\", \"under_review\", \"resubmit_required\"\n  reviewNotes: text(\"review_notes\"),\n  reviewedBy: varchar(\"reviewed_by\").references(() => adminUsers.id),\n  isAuthentic: boolean(\"is_authentic\"), // AI/Third-party authentication result\n  confidenceScore: integer(\"confidence_score\"), // 1-100 confidence in document authenticity\n  extractedData: text(\"extracted_data\"), // JSON string of extracted document data\n  uploadedAt: timestamp(\"uploaded_at\").defaultNow(),\n  reviewedAt: timestamp(\"reviewed_at\"),\n});\n\nexport const notifications = pgTable(\"notifications\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  message: text(\"message\").notNull(),\n  type: text(\"type\").notNull().default(\"info\"),\n  isRead: boolean(\"is_read\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const chatMessages = pgTable(\"chat_messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\"),\n  message: text(\"message\").notNull(),\n  sender: text(\"sender\").notNull(), // \"user\" or \"ai\"\n  aiContext: text(\"ai_context\"), // Context for AI responses\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const investments = pgTable(\"investments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  investorId: varchar(\"investor_id\").references(() => investors.id),\n  propertyId: varchar(\"property_id\").references(() => properties.id),\n  investmentAmount: decimal(\"investment_amount\", { precision: 12, scale: 2 }).notNull(),\n  ownershipPercentage: decimal(\"ownership_percentage\", { precision: 5, scale: 2 }).notNull(),\n  expectedReturn: decimal(\"expected_return\", { precision: 5, scale: 2 }), // Annual percentage\n  currentValue: decimal(\"current_value\", { precision: 12, scale: 2 }),\n  totalReturns: decimal(\"total_returns\", { precision: 12, scale: 2 }).default(\"0\"),\n  totalDividends: decimal(\"total_dividends\", { precision: 12, scale: 2 }).default(\"0\"),\n  status: text(\"status\").notNull().default(\"active\"), // \"active\", \"sold\", \"liquidated\"\n  investmentDate: timestamp(\"investment_date\").defaultNow(),\n  exitDate: timestamp(\"exit_date\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const portfolioSummary = pgTable(\"portfolio_summary\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  investorId: varchar(\"investor_id\").references(() => investors.id).unique(),\n  totalInvestment: decimal(\"total_investment\", { precision: 12, scale: 2 }).default(\"0\"),\n  currentValue: decimal(\"current_value\", { precision: 12, scale: 2 }).default(\"0\"),\n  totalReturns: decimal(\"total_returns\", { precision: 12, scale: 2 }).default(\"0\"),\n  totalDividends: decimal(\"total_dividends\", { precision: 12, scale: 2 }).default(\"0\"),\n  totalWithdrawals: decimal(\"total_withdrawals\", { precision: 12, scale: 2 }).default(\"0\"),\n  unrealizedGains: decimal(\"unrealized_gains\", { precision: 12, scale: 2 }).default(\"0\"),\n  realizedGains: decimal(\"realized_gains\", { precision: 12, scale: 2 }).default(\"0\"),\n  riskScore: integer(\"risk_score\").default(50), // 1-100 scale\n  performanceScore: integer(\"performance_score\").default(50), // 1-100 scale\n  lastUpdated: timestamp(\"last_updated\").defaultNow(),\n});\n\nexport const aiInsights = pgTable(\"ai_insights\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  type: text(\"type\").notNull(), // \"market\", \"customer\", \"property\", \"risk\", \"portfolio\"\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  confidence: decimal(\"confidence\", { precision: 3, scale: 2 }),\n  entityId: varchar(\"entity_id\"), // Related property/customer ID\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertPropertySchema = createInsertSchema(properties).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertInvestorSchema = createInsertSchema(investors).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertAdminUserSchema = createInsertSchema(adminUsers).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertKycDocumentSchema = createInsertSchema(kycDocuments).omit({\n  id: true,\n  uploadedAt: true,\n  reviewedAt: true,\n});\n\nexport const insertTransactionSchema = createInsertSchema(transactions).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertWithdrawalRequestSchema = createInsertSchema(withdrawalRequests).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertChatMessageSchema = createInsertSchema(chatMessages).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertInvestmentSchema = createInsertSchema(investments).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertPortfolioSummarySchema = createInsertSchema(portfolioSummary).omit({\n  id: true,\n  lastUpdated: true,\n});\n\nexport const insertAiInsightSchema = createInsertSchema(aiInsights).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type Property = typeof properties.$inferSelect;\nexport type InsertProperty = z.infer<typeof insertPropertySchema>;\nexport type Investor = typeof investors.$inferSelect;\nexport type InsertInvestor = z.infer<typeof insertInvestorSchema>;\nexport type InsertAdminUser = z.infer<typeof insertAdminUserSchema>;\nexport type Transaction = typeof transactions.$inferSelect;\nexport type InsertTransaction = z.infer<typeof insertTransactionSchema>;\nexport type WithdrawalRequest = typeof withdrawalRequests.$inferSelect;\nexport type InsertWithdrawalRequest = z.infer<typeof insertWithdrawalRequestSchema>;\nexport type KycDocument = typeof kycDocuments.$inferSelect;\nexport type InsertKycDocument = z.infer<typeof insertKycDocumentSchema>;\nexport type Notification = typeof notifications.$inferSelect;\nexport type AdminUser = typeof adminUsers.$inferSelect;\nexport type ChatMessage = typeof chatMessages.$inferSelect;\nexport type InsertChatMessage = z.infer<typeof insertChatMessageSchema>;\nexport type Investment = typeof investments.$inferSelect;\nexport type InsertInvestment = z.infer<typeof insertInvestmentSchema>;\nexport type PortfolioSummary = typeof portfolioSummary.$inferSelect;\nexport type InsertPortfolioSummary = z.infer<typeof insertPortfolioSummarySchema>;\nexport type AiInsight = typeof aiInsights.$inferSelect;\nexport type InsertAiInsight = z.infer<typeof insertAiInsightSchema>;","size_bytes":14660},"client/src/App.tsx":{"content":"import { Switch, Route, useLocation } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/theme-provider\";\nimport { LanguageProvider } from \"@/components/language-provider\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AppSidebar } from \"@/components/app-sidebar\";\nimport { MobileLayout } from \"@/components/mobile-layout\";\n\n// Admin Pages\nimport Dashboard from \"@/pages/dashboard\";\nimport Investors from \"@/pages/investors\";\nimport Properties from \"@/pages/properties\";\nimport Transactions from \"@/pages/transactions\";\nimport Documents from \"@/pages/documents\";\nimport Analytics from \"@/pages/analytics\";\nimport Notifications from \"@/pages/notifications\";\nimport Admin from \"@/pages/admin\";\nimport Settings from \"@/pages/settings\";\nimport NotFound from \"@/pages/not-found\";\n\n// Mobile Pages\nimport MobileDashboard from \"@/pages/mobile/dashboard\";\nimport MobileProperties from \"@/pages/mobile/properties\";\nimport MobilePortfolio from \"@/pages/mobile/portfolio\";\nimport MobileProfile from \"@/pages/mobile/profile\";\n\n// Website Pages\nimport WebsiteHome from \"@/pages/website/home\";\nimport WebsiteInvest from \"@/pages/website/invest\";\nimport WebsiteAbout from \"@/pages/website/about\";\nimport WebsiteBusiness from \"@/pages/website/business\";\nimport WebsiteContact from \"@/pages/website/contact\";\nimport WebsiteLayout from \"@/components/website-layout\";\n\nfunction AdminRouter() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Dashboard} />\n      <Route path=\"/investors\" component={Investors} />\n      <Route path=\"/properties\" component={Properties} />\n      <Route path=\"/transactions\" component={Transactions} />\n      <Route path=\"/documents\" component={Documents} />\n      <Route path=\"/analytics\" component={Analytics} />\n      <Route path=\"/notifications\" component={Notifications} />\n      <Route path=\"/admin\" component={Admin} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction MobileRouter() {\n  return (\n    <Switch>\n      <Route path=\"/mobile\" component={MobileDashboard} />\n      <Route path=\"/mobile/properties\" component={MobileProperties} />\n      <Route path=\"/mobile/portfolio\" component={MobilePortfolio} />\n      <Route path=\"/mobile/profile\" component={MobileProfile} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction WebsiteRouter() {\n  return (\n    <WebsiteLayout>\n      <Switch>\n        <Route path=\"/website\" component={WebsiteInvest} />\n        <Route path=\"/website/invest\" component={WebsiteInvest} />\n        <Route path=\"/website/about\" component={WebsiteAbout} />\n        <Route path=\"/website/business\" component={WebsiteBusiness} />\n        <Route path=\"/website/contact\" component={WebsiteContact} />\n        <Route path=\"/\" component={WebsiteInvest} />\n        <Route component={NotFound} />\n      </Switch>\n    </WebsiteLayout>\n  );\n}\n\nexport default function App() {\n  const [location] = useLocation()\n  const isMobile = location.startsWith('/mobile')\n  const isWebsite = location === '/' || location.startsWith('/website')\n  const isAdmin = !isMobile && !isWebsite\n\n  // Custom sidebar width for better content display\n  const style = {\n    \"--sidebar-width\": \"20rem\",       // 320px for better navigation\n    \"--sidebar-width-icon\": \"4rem\",   // default icon width\n  };\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider defaultTheme=\"light\" storageKey=\"zaron-theme\">\n        <LanguageProvider defaultLanguage=\"en\" storageKey=\"zaron-language\">\n          <TooltipProvider>\n          {isMobile ? (\n            // Mobile Layout for Investors\n            <MobileLayout>\n              <MobileRouter />\n            </MobileLayout>\n          ) : isWebsite ? (\n            // Website Layout for Public\n            <WebsiteRouter />\n          ) : (\n            // Admin Panel Layout\n            <SidebarProvider style={style as React.CSSProperties}>\n              <div className=\"flex h-screen w-full\">\n                <AppSidebar />\n                <div className=\"flex flex-col flex-1\">\n                  <header className=\"flex items-center justify-between p-4 border-b border-sidebar-border/50 glass-card backdrop-blur-xl\">\n                    <div className=\"flex items-center gap-4\">\n                      <SidebarTrigger \n                        className=\"hover:bg-primary/10 transition-colors duration-300\" \n                        data-testid=\"button-sidebar-toggle\" \n                      />\n                      <div className=\"flex items-center gap-2\">\n                        <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n                        <div className=\"text-sm font-medium bg-gradient-to-r from-foreground to-primary/80 bg-clip-text text-transparent\">\n                          Zaron Admin Panel\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"text-xs text-muted-foreground/60\">\n                        {new Date().toLocaleDateString('en-US', { \n                          weekday: 'short', \n                          year: 'numeric', \n                          month: 'short', \n                          day: 'numeric' \n                        })}\n                      </div>\n                      <ThemeToggle />\n                    </div>\n                  </header>\n                  <main className=\"flex-1 overflow-auto bg-gradient-to-br from-background via-background to-primary/3 modern-scrollbar\">\n                    <AdminRouter />\n                  </main>\n                </div>\n              </div>\n            </SidebarProvider>\n          )}\n          <Toaster />\n          </TooltipProvider>\n        </LanguageProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}","size_bytes":6161},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* MOBILE ORIENTATION LOCK - PREVENT ROTATION */\n@media screen and (max-width: 768px) {\n  html {\n    -webkit-text-size-adjust: none;\n    -ms-text-size-adjust: none;\n    text-size-adjust: none;\n    overflow: hidden;\n    height: 100%;\n  }\n  \n  body {\n    -webkit-user-select: none;\n    -webkit-touch-callout: none;\n    -webkit-tap-highlight-color: transparent;\n    overscroll-behavior: none;\n    position: fixed;\n    overflow: hidden;\n    width: 100vw;\n    height: 100vh;\n    height: 100dvh; /* Dynamic viewport height for mobile */\n  }\n  \n  #root {\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n  }\n}\n\n/* Force portrait orientation styles */\n@media screen and (orientation: landscape) and (max-width: 768px) {\n  body::before {\n    content: \"Please rotate your device to portrait mode\";\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.9);\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 18px;\n    text-align: center;\n    z-index: 9999;\n    padding: 2rem;\n  }\n}\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 99%;\n\n  --foreground: 220 20% 20%;\n\n  --border: 220 15% 94%;\n\n  --card: 0 0% 100%;\n\n  --card-foreground: 220 20% 20%;\n\n  --card-border: 220 15% 95%;\n\n  --sidebar: 220 8% 98%;\n\n  --sidebar-foreground: 220 20% 20%;\n\n  --sidebar-border: 220 15% 94%;\n\n  --sidebar-primary: 220 100% 50%;\n\n  --sidebar-primary-foreground: 0 0% 100%;\n\n  --sidebar-accent: 220 10% 96%;\n\n  --sidebar-accent-foreground: 220 20% 25%;\n\n  --sidebar-ring: 220 100% 50%;\n\n  --popover: 0 0% 100%;\n\n  --popover-foreground: 220 20% 20%;\n\n  --popover-border: 220 15% 92%;\n\n  --primary: 220 100% 50%;\n\n  --primary-foreground: 0 0% 100%;\n\n  --secondary: 220 8% 96%;\n\n  --secondary-foreground: 220 20% 25%;\n\n  --muted: 220 8% 97%;\n\n  --muted-foreground: 220 20% 45%;\n\n  --accent: 220 12% 96%;\n\n  --accent-foreground: 220 20% 25%;\n\n  --destructive: 0 84% 60%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 15% 94%;\n  --ring: 220 85% 25%;\n  --chart-1: 220 85% 25%;\n  --chart-2: 142 76% 36%;\n  --chart-3: 38 92% 50%;\n  --chart-4: 271 81% 56%;\n  --chart-5: 262 83% 58%;\n\n  --font-sans: Inter, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: JetBrains Mono, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 1px 2px 0px hsl(220 43% 11% / 0.05);\n  --shadow-xs: 0px 1px 2px 0px hsl(220 43% 11% / 0.05);\n  --shadow-sm: 0px 1px 3px 0px hsl(220 43% 11% / 0.1), 0px 1px 2px -1px hsl(220 43% 11% / 0.1);\n  --shadow: 0px 1px 3px 0px hsl(220 43% 11% / 0.1), 0px 1px 2px -1px hsl(220 43% 11% / 0.1);\n  --shadow-md: 0px 4px 6px -1px hsl(220 43% 11% / 0.1), 0px 2px 4px -2px hsl(220 43% 11% / 0.1);\n  --shadow-lg: 0px 10px 15px -3px hsl(220 43% 11% / 0.1), 0px 4px 6px -4px hsl(220 43% 11% / 0.1);\n  --shadow-xl: 0px 20px 25px -5px hsl(220 43% 11% / 0.1), 0px 8px 10px -6px hsl(220 43% 11% / 0.1);\n  --shadow-2xl: 0px 25px 50px -12px hsl(220 43% 11% / 0.25);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 220 15% 8%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 220 15% 15%;\n\n  --card: 220 12% 12%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 220 15% 18%;\n\n  --sidebar: 220 12% 10%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 220 15% 16%;\n\n  --sidebar-primary: 220 85% 25%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 220 10% 16%;\n\n  --sidebar-accent-foreground: 0 0% 90%;\n\n  --sidebar-ring: 220 85% 25%;\n\n  --popover: 220 12% 12%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 220 15% 18%;\n\n  --primary: 220 85% 25%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 220 10% 16%;\n\n  --secondary-foreground: 0 0% 90%;\n\n  --muted: 220 10% 14%;\n\n  --muted-foreground: 0 0% 65%;\n\n  --accent: 220 10% 15%;\n\n  --accent-foreground: 0 0% 90%;\n\n  --destructive: 0 84% 60%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 220 15% 20%;\n  --ring: 220 85% 25%;\n  --chart-1: 220 85% 45%;\n  --chart-2: 142 76% 56%;\n  --chart-3: 38 92% 70%;\n  --chart-4: 271 81% 76%;\n  --chart-5: 262 83% 78%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.1);\n  --shadow-xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.1);\n  --shadow-sm: 0px 1px 3px 0px hsl(0 0% 0% / 0.2), 0px 1px 2px -1px hsl(0 0% 0% / 0.2);\n  --shadow: 0px 1px 3px 0px hsl(0 0% 0% / 0.2), 0px 1px 2px -1px hsl(0 0% 0% / 0.2);\n  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.2), 0px 2px 4px -2px hsl(0 0% 0% / 0.2);\n  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.2), 0px 4px 6px -4px hsl(0 0% 0% / 0.2);\n  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.2), 0px 8px 10px -6px hsl(0 0% 0% / 0.2);\n  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.35);\n\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* Modern glassmorphism effects */\n  .glass-card {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(20px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  }\n\n  .dark .glass-card {\n    background: rgba(0, 0, 0, 0.2);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n  }\n\n  /* Enhanced shadows */\n  .modern-shadow {\n    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1), 0 4px 25px rgba(0, 0, 0, 0.07);\n  }\n\n  .dark .modern-shadow {\n    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4), 0 4px 25px rgba(0, 0, 0, 0.2);\n  }\n\n  /* Gradient backgrounds */\n  .gradient-bg {\n    background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary)) 100%);\n  }\n\n  .gradient-card {\n    background: linear-gradient(135deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0.05) 100%);\n  }\n\n  .dark .gradient-card {\n    background: linear-gradient(135deg, rgba(255, 255, 255, 0.05) 0%, rgba(255, 255, 255, 0.02) 100%);\n  }\n\n  /* Interactive animations */\n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n\n  @keyframes float {\n    0%, 100% { transform: translateY(0px); }\n    50% { transform: translateY(-10px); }\n  }\n\n  .animate-pulse-slow {\n    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n  }\n\n  .animate-scale-up {\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n  }\n\n  .animate-scale-up:hover {\n    transform: scale(1.02);\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15);\n  }\n\n  .dark .animate-scale-up:hover {\n    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);\n  }\n\n  /* Modern borders */\n  .border-gradient {\n    border: 1px solid transparent;\n    background-clip: padding-box;\n    position: relative;\n  }\n\n  .border-gradient::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    padding: 1px;\n    background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));\n    border-radius: inherit;\n    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n    mask-composite: xor;\n    -webkit-mask-composite: xor;\n    z-index: -1;\n  }\n\n  /* Neon glow effects */\n  .neon-glow {\n    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);\n    transition: box-shadow 0.3s ease;\n  }\n\n  .neon-glow:hover {\n    box-shadow: 0 0 30px hsl(var(--primary) / 0.5);\n  }\n\n  /* Shimmer effect */\n  .shimmer {\n    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);\n    background-size: 200% 100%;\n    animation: shimmer 2s infinite;\n  }\n\n  @keyframes shimmer {\n    0% { background-position: -200% 0; }\n    100% { background-position: 200% 0; }\n  }\n\n  /* Enhanced card effects */\n  .enhanced-card {\n    background: rgba(255, 255, 255, 0.8);\n    backdrop-filter: blur(12px);\n    border: 1px solid rgba(255, 255, 255, 0.3);\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .dark .enhanced-card {\n    background: rgba(0, 0, 0, 0.4);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  .enhanced-card:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n  }\n\n  .dark .enhanced-card:hover {\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);\n  }\n\n  /* Modern scrollbars */\n  .modern-scrollbar::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  .modern-scrollbar::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  .modern-scrollbar::-webkit-scrollbar-thumb {\n    background: hsl(var(--muted));\n    border-radius: 3px;\n  }\n\n  .modern-scrollbar::-webkit-scrollbar-thumb:hover {\n    background: hsl(var(--muted-foreground));\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}\n\n/* RTL Support */\n.rtl {\n  direction: rtl;\n}\n\n.ltr {\n  direction: ltr;\n}\n\n/* RTL-specific adjustments */\n.rtl .text-left {\n  text-align: right;\n}\n\n.rtl .text-right {\n  text-align: left;\n}\n\n.rtl .ml-auto {\n  margin-left: auto;\n  margin-right: 0;\n}\n\n.rtl .mr-auto {\n  margin-right: auto;\n  margin-left: 0;\n}\n\n.rtl .flex-row-reverse {\n  flex-direction: row;\n}\n\n.rtl .rounded-l-lg {\n  border-radius: 0 0.5rem 0.5rem 0;\n}\n\n.rtl .rounded-r-lg {\n  border-radius: 0.5rem 0 0 0.5rem;\n}\n\n/* Mobile Interactive Animations */\n@keyframes mobile-bounce {\n  0%, 20%, 53%, 80%, 100% {\n    transform: translate3d(0, 0, 0);\n  }\n  40%, 43% {\n    transform: translate3d(0, -8px, 0);\n  }\n  70% {\n    transform: translate3d(0, -4px, 0);\n  }\n  90% {\n    transform: translate3d(0, -2px, 0);\n  }\n}\n\n@keyframes mobile-scale-in {\n  0% {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes mobile-fade-in-up {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes mobile-slide-in {\n  0% {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes mobile-pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 0 0 hsl(var(--primary) / 0.4);\n  }\n  50% {\n    box-shadow: 0 0 0 8px hsl(var(--primary) / 0);\n  }\n}\n\n/* Enhanced Mobile Animation Classes */\n.mobile-bounce {\n  animation: mobile-bounce 1s ease-in-out;\n}\n\n.mobile-scale-in {\n  animation: mobile-scale-in 0.6s ease-out;\n}\n\n.mobile-fade-in-up {\n  animation: mobile-fade-in-up 0.8s ease-out;\n}\n\n.mobile-slide-in {\n  animation: mobile-slide-in 0.7s ease-out;\n}\n\n.mobile-pulse {\n  animation: mobile-pulse 2s infinite;\n}\n\n.mobile-pulse-glow {\n  animation: mobile-pulse-glow 2s infinite;\n}\n\n/* Beautiful Interactive Enhancements */\n.interactive-bounce {\n  animation: bounceIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n\n.wave-animation {\n  animation: wave 2s ease-in-out infinite;\n}\n\n.glow-effect {\n  animation: glow 2s ease-in-out infinite alternate;\n}\n\n/* New Keyframes for Enhanced Animations */\n@keyframes bounceIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.3) translateY(50px);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.05) translateY(-10px);\n  }\n  70% {\n    transform: scale(0.95) translateY(5px);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1) translateY(0px);\n  }\n}\n\n@keyframes wave {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes glow {\n  0%, 100% {\n    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);\n  }\n  50% {\n    box-shadow: 0 0 40px hsl(var(--primary) / 0.6), 0 0 60px hsl(var(--primary) / 0.3);\n  }\n}\n\n@keyframes shimmer {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n@keyframes float-particle {\n  0% {\n    transform: translateY(100vh) rotate(0deg);\n    opacity: 0;\n  }\n  10% {\n    opacity: 1;\n  }\n  90% {\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(-100px) rotate(360deg);\n    opacity: 0;\n  }\n}\n\n/* Particle Animation Background Classes */\n.particle-bg {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 0;\n}\n\n.particle {\n  position: absolute;\n  width: 4px;\n  height: 4px;\n  background: hsl(var(--primary) / 0.3);\n  border-radius: 50%;\n  animation: float-particle 6s infinite linear;\n  will-change: transform;\n  pointer-events: none;\n}\n\n.particle:nth-child(1) { animation-delay: 0s; left: 10%; }\n.particle:nth-child(2) { animation-delay: 1s; left: 20%; }\n.particle:nth-child(3) { animation-delay: 2s; left: 30%; }\n.particle:nth-child(4) { animation-delay: 3s; left: 40%; }\n.particle:nth-child(5) { animation-delay: 4s; left: 50%; }\n\n.animate-delay-100 {\n  animation-delay: 100ms;\n}\n\n.animate-delay-200 {\n  animation-delay: 200ms;\n}\n\n.animate-delay-300 {\n  animation-delay: 300ms;\n}\n\n.animate-delay-400 {\n  animation-delay: 400ms;\n}\n\n.animate-delay-500 {\n  animation-delay: 500ms;\n}\n\n.animate-delay-600 {\n  animation-delay: 600ms;\n}\n\n/* Morphing Button Animation */\n.morph-button {\n  position: relative;\n  overflow: hidden;\n  transform-style: preserve-3d;\n  transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n}\n\n.morph-button:hover {\n  transform: translateY(-2px) rotateX(5deg);\n}\n\n.morph-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);\n  transition: left 0.5s ease;\n  pointer-events: none;\n}\n\n.morph-button:hover::before {\n  left: 100%;\n}\n\n/* Touch Feedback Effect */\n.touch-feedback {\n  position: relative;\n  overflow: hidden;\n}\n\n.touch-feedback::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  background: hsl(var(--primary) / 0.3);\n  transform: translate(-50%, -50%);\n  transition: all 0.5s ease;\n  pointer-events: none;\n}\n\n.touch-feedback:active::after {\n  width: 200px;\n  height: 200px;\n  transition: all 0.2s ease;\n}\n\n/* Progress Bar Animation */\n.progress-bar-animated {\n  position: relative;\n  overflow: hidden;\n}\n\n.progress-bar-animated::after {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-image: linear-gradient(\n    -45deg,\n    rgba(255, 255, 255, 0.2) 25%,\n    transparent 25%,\n    transparent 50%,\n    rgba(255, 255, 255, 0.2) 50%,\n    rgba(255, 255, 255, 0.2) 75%,\n    transparent 75%,\n    transparent\n  );\n  background-size: 30px 30px;\n  animation: progress-shimmer 2s infinite linear;\n}\n\n@keyframes progress-shimmer {\n  0% { transform: translateX(-30px); }\n  100% { transform: translateX(100%); }\n}\n\n/* Performance optimizations for reduced motion */\n@media (prefers-reduced-motion: reduce) {\n  .animate-pulse,\n  .animate-bounce,\n  .animate-spin,\n  .animate-ping,\n  .particle,\n  .morph-button,\n  .glow-effect,\n  .mobile-pulse-glow,\n  .wave-animation,\n  .interactive-bounce,\n  .progress-bar-animated {\n    animation: none;\n    transform: none;\n    transition: none;\n  }\n  \n  .particle {\n    display: none;\n  }\n  \n  .backdrop-blur-xl,\n  .backdrop-blur-lg,\n  .backdrop-blur-md {\n    backdrop-filter: none;\n  }\n}\n\n/* Mobile performance optimizations */\n@media (max-width: 768px) and (pointer: coarse) {\n  .backdrop-blur-xl {\n    backdrop-filter: blur(8px);\n  }\n  .backdrop-blur-lg {\n    backdrop-filter: blur(6px);\n  }\n  .backdrop-blur-md {\n    backdrop-filter: blur(4px);\n  }\n  \n  .shadow-2xl {\n    box-shadow: 0 10px 25px -3px rgba(0, 0, 0, 0.1);\n  }\n  \n  .shadow-xl {\n    box-shadow: 0 8px 20px -2px rgba(0, 0, 0, 0.08);\n  }\n}\n\n/* IMPRESSIVE MOBILE UI ENHANCEMENTS */\n\n/* Glassmorphism Effects */\n.glass-card {\n  background: rgba(255, 255, 255, 0.08);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 16px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n\n.dark .glass-card {\n  background: rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(255, 255, 255, 0.05);\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);\n}\n\n.glass-overlay {\n  background: rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(10px);\n  border-radius: 12px;\n}\n\n.dark .glass-overlay {\n  background: rgba(0, 0, 0, 0.1);\n}\n\n/* Advanced Haptic Feedback Effects */\n@keyframes ripple-effect {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.1);\n    opacity: 0.8;\n  }\n  100% {\n    transform: scale(1.2);\n    opacity: 0;\n  }\n}\n\n.haptic-feedback {\n  position: relative;\n  overflow: hidden;\n}\n\n.haptic-feedback::before {\n  content: '';\n  position: absolute;\n  inset: 0;\n  background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);\n  border-radius: inherit;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.haptic-feedback:active::before {\n  animation: ripple-effect 0.6s ease-out;\n  opacity: 1;\n}\n\n/* Parallax Scroll Effects */\n.parallax-slow {\n  transform: translateY(calc(var(--scroll-y, 0) * -0.3px));\n  transition: transform 0.1s ease-out;\n}\n\n.parallax-medium {\n  transform: translateY(calc(var(--scroll-y, 0) * -0.5px));\n  transition: transform 0.1s ease-out;\n}\n\n.parallax-fast {\n  transform: translateY(calc(var(--scroll-y, 0) * -0.8px));\n  transition: transform 0.1s ease-out;\n}\n\n/* Staggered Card Animations */\n@keyframes stagger-fade-in {\n  0% {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.stagger-animation {\n  animation: stagger-fade-in 0.6s ease-out forwards;\n  opacity: 0;\n}\n\n.stagger-delay-100 { animation-delay: 0.1s; }\n.stagger-delay-200 { animation-delay: 0.2s; }\n.stagger-delay-300 { animation-delay: 0.3s; }\n.stagger-delay-400 { animation-delay: 0.4s; }\n.stagger-delay-500 { animation-delay: 0.5s; }\n\n/* Floating Elements */\n@keyframes float-gentle {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-6px);\n  }\n}\n\n@keyframes float-dynamic {\n  0%, 100% {\n    transform: translateY(0px) rotate(0deg);\n  }\n  33% {\n    transform: translateY(-8px) rotate(1deg);\n  }\n  66% {\n    transform: translateY(-4px) rotate(-1deg);\n  }\n}\n\n.float-gentle {\n  animation: float-gentle 4s ease-in-out infinite;\n}\n\n.float-dynamic {\n  animation: float-dynamic 6s ease-in-out infinite;\n}\n\n/* Advanced Glow Effects */\n@keyframes pulse-glow-advanced {\n  0%, 100% {\n    box-shadow: 0 0 5px rgba(59, 130, 246, 0.3),\n                0 0 10px rgba(59, 130, 246, 0.2),\n                0 0 15px rgba(59, 130, 246, 0.1);\n  }\n  50% {\n    box-shadow: 0 0 10px rgba(59, 130, 246, 0.6),\n                0 0 20px rgba(59, 130, 246, 0.4),\n                0 0 30px rgba(59, 130, 246, 0.2);\n  }\n}\n\n.advanced-glow {\n  animation: pulse-glow-advanced 2s ease-in-out infinite;\n}\n\n/* Saudi Themed Patterns */\n@keyframes geometric-rotate {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n.saudi-pattern {\n  background-image: \n    radial-gradient(circle at 25% 25%, rgba(0, 120, 60, 0.1) 0%, transparent 50%),\n    radial-gradient(circle at 75% 75%, rgba(0, 120, 60, 0.1) 0%, transparent 50%);\n  background-size: 40px 40px;\n  animation: geometric-rotate 60s linear infinite;\n}\n\n.vision-2030-accent {\n  background: linear-gradient(135deg, \n    rgba(0, 120, 60, 0.1) 0%,\n    rgba(255, 255, 255, 0.05) 50%,\n    rgba(0, 120, 60, 0.1) 100%);\n}\n\n/* Interactive Charts & Elements */\n@keyframes data-pulse {\n  0%, 100% {\n    transform: scale(1);\n    opacity: 1;\n  }\n  50% {\n    transform: scale(1.02);\n    opacity: 0.9;\n  }\n}\n\n.chart-interactive:hover {\n  animation: data-pulse 1.5s ease-in-out infinite;\n}\n\n/* Bottom Sheet Animation - Fixed Implementation */\n@keyframes slide-up {\n  0% {\n    transform: translateY(100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slide-down {\n  0% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translateY(100%);\n    opacity: 0;\n  }\n}\n\n.bottom-sheet-enter {\n  animation: slide-up 0.4s cubic-bezier(0.16, 1, 0.3, 1) forwards;\n}\n\n.bottom-sheet-exit {\n  animation: slide-down 0.3s ease-in forwards;\n}\n\n/* Floating Action Button Expanding Menu */\n@keyframes fab-expand {\n  0% {\n    transform: scale(0) rotate(0deg);\n    opacity: 0;\n  }\n  100% {\n    transform: scale(1) rotate(360deg);\n    opacity: 1;\n  }\n}\n\n.fab-item {\n  animation: fab-expand 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n  opacity: 0;\n}\n\n.fab-item:nth-child(1) { animation-delay: 0.1s; }\n.fab-item:nth-child(2) { animation-delay: 0.2s; }\n.fab-item:nth-child(3) { animation-delay: 0.3s; }\n.fab-item:nth-child(4) { animation-delay: 0.4s; }\n\n/* Enhanced Particle System */\n@keyframes particle-orbit {\n  0% {\n    transform: rotate(0deg) translateX(30px) rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg) translateX(30px) rotate(-360deg);\n  }\n}\n\n@keyframes particle-twinkle {\n  0%, 100% {\n    opacity: 0.3;\n    transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    transform: scale(1.2);\n  }\n}\n\n.particle-orbit {\n  animation: particle-orbit 15s linear infinite;\n}\n\n.particle-twinkle {\n  animation: particle-twinkle 3s ease-in-out infinite;\n}\n\n/* Morphing Buttons Enhanced */\n@keyframes morph-premium {\n  0% {\n    border-radius: 8px;\n    transform: scale(1);\n  }\n  50% {\n    border-radius: 20px;\n    transform: scale(1.05);\n  }\n  100% {\n    border-radius: 8px;\n    transform: scale(1);\n  }\n}\n\n.morph-premium:hover {\n  animation: morph-premium 0.8s ease-in-out;\n}\n\n/* 3D Transform Effects */\n@keyframes card-flip {\n  0% {\n    transform: rotateY(0deg);\n  }\n  50% {\n    transform: rotateY(180deg);\n  }\n  100% {\n    transform: rotateY(360deg);\n  }\n}\n\n.card-3d {\n  perspective: 1000px;\n  transition: transform 0.3s ease;\n}\n\n.card-3d:hover {\n  transform: rotateX(5deg) rotateY(5deg);\n}\n\n/* Liquid Loading Animation */\n@keyframes liquid-loading {\n  0% {\n    transform: scale(1) rotate(0deg);\n    border-radius: 50%;\n  }\n  25% {\n    transform: scale(1.1) rotate(90deg);\n    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;\n  }\n  50% {\n    transform: scale(1) rotate(180deg);\n    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;\n  }\n  75% {\n    transform: scale(1.1) rotate(270deg);\n    border-radius: 70% 30% 30% 70% / 70% 70% 30% 30%;\n  }\n  100% {\n    transform: scale(1) rotate(360deg);\n    border-radius: 50%;\n  }\n}\n\n.liquid-loader {\n  animation: liquid-loading 2s ease-in-out infinite;\n}\n\n/* Performance optimizations for mobile */\n@media (max-width: 768px) {\n  .glass-card {\n    backdrop-filter: blur(15px);\n  }\n  \n  .haptic-feedback:active::before {\n    animation-duration: 0.4s;\n  }\n  \n  /* Reduce heavy animations on mobile */\n  .particle-orbit,\n  .particle-twinkle,\n  .advanced-glow {\n    will-change: transform;\n  }\n  \n  /* Throttle parallax on mobile */\n  .parallax-slow,\n  .parallax-medium,\n  .parallax-fast {\n    will-change: transform;\n  }\n  \n  /* Reduce motion and effects for performance */\n  @media (prefers-reduced-motion: reduce) {\n    .particle,\n    .particle-bg,\n    .mobile-pulse-glow,\n    .interactive-bounce,\n    .wave-animation,\n    .float-gentle,\n    .float-dynamic,\n    .advanced-glow,\n    .chart-interactive,\n    .particle-orbit,\n    .particle-twinkle,\n    .morph-premium,\n    .stagger-animation {\n      animation: none !important;\n    }\n    \n    .parallax-slow,\n    .parallax-medium,\n    .parallax-fast {\n      transform: none !important;\n    }\n    \n    * {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      transform: none !important;\n    }\n  }\n}\n\n/* Expanding FAB Menu States */\n.fab-menu-open {\n  transform: rotate(45deg);\n}\n\n.fab-menu-closed {\n  transform: rotate(0deg);\n}\n\n/* Custom duration tokens */\n.duration-400 {\n  transition-duration: 400ms;\n}\n\n.animate-delay-100 { animation-delay: 100ms; }\n.animate-delay-200 { animation-delay: 200ms; }\n.animate-delay-300 { animation-delay: 300ms; }\n.animate-delay-400 { animation-delay: 400ms; }\n.animate-delay-500 { animation-delay: 500ms; }\n\n/* Missing mobile interaction classes */\n.mobile-pulse-glow {\n  position: relative;\n  animation: mobile-pulse-glow 2s infinite;\n}\n\n@keyframes mobile-pulse-glow {\n  0%, 100% {\n    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);\n    transform: scale(1);\n  }\n  50% {\n    box-shadow: 0 0 30px hsl(var(--primary) / 0.5);\n    transform: scale(1.02);\n  }\n}\n\n.interactive-bounce {\n  transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);\n}\n\n.interactive-bounce:active {\n  transform: scale(0.95);\n}\n\n.wave-animation {\n  position: relative;\n  overflow: hidden;\n}\n\n.wave-animation::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, hsl(var(--primary) / 0.2), transparent);\n  animation: wave-move 2s infinite;\n}\n\n@keyframes wave-move {\n  0% { left: -100%; }\n  100% { left: 100%; }\n}\n\n.mobile-scale-in {\n  animation: mobile-scale-in 0.3s ease-out;\n}\n\n@keyframes mobile-scale-in {\n  0% {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n.mobile-fade-in-up {\n  animation: mobile-fade-in-up 0.4s ease-out;\n}\n\n@keyframes mobile-fade-in-up {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.glow-effect {\n  position: relative;\n  box-shadow: 0 0 20px hsl(var(--primary) / 0.3);\n  will-change: box-shadow;\n}\n\n.glow-effect:hover {\n  box-shadow: 0 0 30px hsl(var(--primary) / 0.5);\n}\n\n/* Enhanced Mobile Background */\n.mobile-enhanced {\n  background: linear-gradient(135deg, \n    hsl(var(--background)) 0%, \n    hsl(220 15% 99%) 25%,\n    hsl(var(--muted)) 100%);\n  min-height: 100vh;\n}\n\n/* Enhanced Mobile Cards - Beautiful & Interactive */\n.mobile-grid .mobile-card {\n  transform: translateY(0);\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.98), rgba(255, 255, 255, 0.92));\n  backdrop-filter: blur(12px);\n  border: 1px solid hsl(var(--primary) / 0.1);\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  position: relative;\n  overflow: hidden;\n}\n\n.mobile-grid .mobile-card::before {\n  content: '';\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  right: -2px;\n  bottom: -2px;\n  background: linear-gradient(45deg, \n    transparent, \n    hsl(var(--primary) / 0.1), \n    transparent, \n    hsl(var(--accent) / 0.1), \n    transparent\n  );\n  border-radius: inherit;\n  z-index: -1;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.mobile-grid .mobile-card:hover::before {\n  opacity: 1;\n  animation: shimmer 2s infinite;\n}\n\n.mobile-grid .mobile-card:hover {\n  transform: translateY(-6px) rotate(1deg);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12);\n}\n\n.mobile-card {\n  border: 1px solid hsl(var(--border));\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);\n  transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);\n  background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.9));\n  backdrop-filter: blur(10px);\n  position: relative;\n  overflow: hidden;\n}\n\n.mobile-card::after {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-radius: 50%;\n  background: radial-gradient(circle, hsl(var(--primary) / 0.2) 0%, transparent 70%);\n  transform: translate(-50%, -50%);\n  transition: all 0.4s ease;\n  pointer-events: none;\n}\n\n.mobile-card:hover {\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.15);\n  border-color: hsl(var(--primary) / 0.3);\n  transform: translateY(-4px) scale(1.02);\n}\n\n.mobile-card:active::after {\n  width: 300px;\n  height: 300px;\n}\n\n/* Enhanced Interactive Elements */\n.mobile-interactive {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.mobile-interactive:hover {\n  transform: scale(1.02);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\n}\n\n.mobile-interactive:active {\n  transform: scale(0.98);\n}\n\n/* Glass effect - Optimized */\n.mobile-glass {\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(8px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n/* Enhanced Property Cards */\n.property-card {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n.property-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);\n  transition: left 0.6s;\n}\n\n.property-card:hover::before {\n  left: 100%;\n}\n\n.property-card:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n}\n\n.mobile-button {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n  transform: translateZ(0);\n}\n\n.mobile-button::before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  background: rgba(255, 255, 255, 0.3);\n  border-radius: 50%;\n  transform: translate(-50%, -50%);\n  transition: width 0.3s, height 0.3s;\n}\n\n.mobile-button:hover::before {\n  width: 300px;\n  height: 300px;\n}\n\n.mobile-button:active {\n  transform: scale(0.95) translateZ(0);\n  transition: all 0.1s ease-out;\n}\n\n/* Enhanced Mobile Navigation */\n.mobile-nav-item {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n.mobile-nav-item::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 0;\n  height: 2px;\n  background: hsl(var(--primary));\n  transition: all 0.3s ease;\n  transform: translateX(-50%);\n}\n\n.mobile-nav-item.active::before {\n  width: 80%;\n}\n\n.mobile-nav-item:active {\n  transform: scale(0.95);\n}\n\n/* Enhanced Property Cards */\n.property-card {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  position: relative;\n  overflow: hidden;\n}\n\n.property-card::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);\n  transition: left 0.5s ease;\n}\n\n.property-card:hover::before {\n  left: 100%;\n}\n\n.property-card:active {\n  transform: scale(0.98);\n}\n\n/* Staggered Animation Delays */\n.animate-delay-100 {\n  animation-delay: 0.1s;\n}\n\n.animate-delay-200 {\n  animation-delay: 0.2s;\n}\n\n.animate-delay-300 {\n  animation-delay: 0.3s;\n}\n\n.animate-delay-400 {\n  animation-delay: 0.4s;\n}\n\n/* Mobile Responsive Enhancements */\n@media (max-width: 768px) {\n  .mobile-enhanced {\n    padding: 1rem;\n  }\n  \n  .mobile-grid {\n    gap: 0.75rem;\n  }\n  \n  .mobile-text {\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n  }\n  \n  .mobile-button-large {\n    padding: 0.75rem 1.5rem;\n    font-size: 1rem;\n    min-height: 3rem;\n  }\n}\n\n/* Touch-friendly Interactive Areas */\n.touch-target {\n  min-height: 44px;\n  min-width: 44px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* Glass Morphism Effect for Mobile */\n.glass-card {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.dark .glass-card {\n  background: rgba(0, 0, 0, 0.2);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* RTL language-specific text direction for specific elements */\n.rtl .language-text {\n  direction: rtl;\n  text-align: right;\n}\n\n.rtl .number-text {\n  direction: ltr;\n  text-align: left;\n}\n\n/* Currency display always LTR */\n.currency {\n  direction: ltr;\n  display: inline-block;\n}\n\n.rtl .currency {\n  direction: ltr;\n}\n\n/* Mobile specific RTL adjustments */\n@media (max-width: 768px) {\n  .rtl .mobile-card {\n    text-align: right;\n  }\n  \n  .rtl .mobile-flex {\n    flex-direction: row-reverse;\n  }\n  \n  .rtl .mobile-grid {\n    direction: rtl;\n  }\n}","size_bytes":37108},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ai-chat-widget.tsx":{"content":"import { useState, useRef, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/badge'\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar'\nimport { MessageCircle, Send, Minimize2, Maximize2, Bot, Sparkles, TrendingUp, AlertTriangle, Users, Wifi, WifiOff } from 'lucide-react'\nimport { motion, AnimatePresence } from 'framer-motion'\n\ninterface ChatMessage {\n  id: string\n  message: string\n  sender: 'user' | 'ai'\n  timestamp: Date\n  aiContext?: string\n  createdAt?: Date\n  userId?: string | null\n}\n\ninterface AiSuggestion {\n  type: 'market' | 'customer' | 'risk' | 'opportunity'\n  title: string\n  description: string\n  confidence: number\n}\n\nexport function AiChatWidget() {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isMinimized, setIsMinimized] = useState(false)\n  const [message, setMessage] = useState('')\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: '1',\n      message: 'مرحباً! أنا زارون، مساعدك الذكي للاستثمار العقاري. كيف يمكنني مساعدتك اليوم؟\\n\\nHello! I\\'m Zaron, your smart real estate investment assistant. How can I help you today?',\n      sender: 'ai',\n      timestamp: new Date(),\n      aiContext: 'greeting'\n    }\n  ])\n  const [isConnected, setIsConnected] = useState(false)\n  const [isTyping, setIsTyping] = useState(false)\n  const [language, setLanguage] = useState<'en' | 'ar'>('en')\n  const wsRef = useRef<WebSocket | null>(null)\n  const [suggestions] = useState<AiSuggestion[]>([\n    {\n      type: 'market',\n      title: 'Market Opportunity',\n      description: 'High demand detected in Riyadh residential sector',\n      confidence: 0.89\n    },\n    {\n      type: 'risk',\n      title: 'Risk Alert',\n      description: '3 pending KYC reviews require attention',\n      confidence: 0.95\n    }\n  ])\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  // WebSocket connection effect\n  useEffect(() => {\n    if (isOpen) {\n      connectWebSocket()\n    } else {\n      disconnectWebSocket()\n    }\n    \n    return () => {\n      disconnectWebSocket()\n    }\n  }, [isOpen])\n\n  const connectWebSocket = () => {\n    try {\n      const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\n      const wsUrl = `${protocol}//${window.location.host}/ws`\n      \n      wsRef.current = new WebSocket(wsUrl)\n      \n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected')\n        setIsConnected(true)\n        \n        // Join the chat session\n        wsRef.current?.send(JSON.stringify({\n          type: 'join',\n          data: { userId: 'admin-user' }\n        }))\n      }\n      \n      wsRef.current.onmessage = (event) => {\n        const data = JSON.parse(event.data)\n        handleWebSocketMessage(data)\n      }\n      \n      wsRef.current.onclose = () => {\n        console.log('WebSocket disconnected')\n        setIsConnected(false)\n        \n        // Auto-reconnect after 3 seconds\n        setTimeout(() => {\n          if (isOpen) {\n            connectWebSocket()\n          }\n        }, 3000)\n      }\n      \n      wsRef.current.onerror = (error) => {\n        console.error('WebSocket error:', error)\n        setIsConnected(false)\n      }\n    } catch (error) {\n      console.error('Failed to connect WebSocket:', error)\n      setIsConnected(false)\n    }\n  }\n  \n  const disconnectWebSocket = () => {\n    if (wsRef.current) {\n      wsRef.current.close()\n      wsRef.current = null\n      setIsConnected(false)\n    }\n  }\n  \n  const handleWebSocketMessage = (data: any) => {\n    switch (data.type) {\n      case 'message':\n        const newMessage: ChatMessage = {\n          ...data.data,\n          timestamp: new Date(data.data.createdAt || new Date())\n        }\n        setMessages(prev => [...prev, newMessage])\n        setIsTyping(false)\n        break\n        \n      case 'history':\n        const historyMessages = data.data.messages.map((msg: any) => ({\n          ...msg,\n          timestamp: new Date(msg.createdAt || new Date())\n        }))\n        setMessages(prev => [...prev, ...historyMessages])\n        break\n        \n      case 'typing':\n        setIsTyping(true)\n        setTimeout(() => setIsTyping(false), 3000)\n        break\n        \n      case 'error':\n        console.error('Chat error:', data.data.message)\n        setIsTyping(false)\n        break\n    }\n  }\n\n  const handleSendMessage = () => {\n    if (!message.trim() || !isConnected) return\n\n    const messageText = message.trim()\n    setMessage('')\n    setIsTyping(true)\n\n    try {\n      // Send message via WebSocket\n      wsRef.current?.send(JSON.stringify({\n        type: 'chat',\n        data: {\n          message: messageText,\n          userId: 'admin-user',\n          language\n        }\n      }))\n    } catch (error) {\n      console.error('Error sending message:', error)\n      setIsTyping(false)\n      \n      // Fallback to mock response if WebSocket fails\n      const userMessage: ChatMessage = {\n        id: Date.now().toString(),\n        message: messageText,\n        sender: 'user',\n        timestamp: new Date()\n      }\n      setMessages(prev => [...prev, userMessage])\n      \n      setTimeout(() => {\n        const aiResponse: ChatMessage = {\n          id: (Date.now() + 1).toString(),\n          message: getAiResponse(messageText),\n          sender: 'ai',\n          timestamp: new Date(),\n          aiContext: 'response'\n        }\n        setMessages(prev => [...prev, aiResponse])\n        setIsTyping(false)\n      }, 1000)\n    }\n  }\n\n  const getAiResponse = (userMessage: string): string => {\n    const lowerMessage = userMessage.toLowerCase()\n    \n    if (lowerMessage.includes('dashboard') || lowerMessage.includes('overview')) {\n      return 'أرى أنك تسأل عن لوحة التحكم. حالياً لديك 2,847 مستخدماً نشطاً و 24 عقاراً متاحاً للاستثمار. هل تود معرفة المزيد عن أي إحصائية محددة؟\\n\\nI see you\\'re asking about the dashboard. Currently you have 2,847 active users and 24 properties available for investment. Would you like to know more about any specific metric?'\n    } else if (lowerMessage.includes('property') || lowerMessage.includes('عقار')) {\n      return 'بخصوص العقارات، لدينا فرص استثمارية ممتازة في الرياض وجدة. أنصح بالنظر في المجمع السكني الفاخر بالرياض - عائد متوقع 8.5%. هل تود تفاصيل أكثر؟\\n\\nRegarding properties, we have excellent investment opportunities in Riyadh and Jeddah. I recommend looking at the Luxury Residential Complex in Riyadh - expected 8.5% yield. Would you like more details?'\n    } else if (lowerMessage.includes('kyc') || lowerMessage.includes('verification')) {\n      return 'لديك 3 طلبات KYC في انتظار المراجعة. معدل الموافقة الحالي 94%. أنصح بمراجعة طلب فاطمة القاسمي أولاً - مستندات كاملة.\\n\\nYou have 3 KYC requests pending review. Current approval rate is 94%. I recommend reviewing Fatima Al-Qasimi\\'s application first - complete documentation.'\n    } else if (lowerMessage.includes('market') || lowerMessage.includes('سوق')) {\n      return 'تحليل السوق يشير إلى نمو قوي في القطاع السكني (+12%). أنصح بزيادة التركيز على عقارات الرياض. هل تود تقرير السوق الكامل؟\\n\\nMarket analysis shows strong growth in residential sector (+12%). I recommend increasing focus on Riyadh properties. Would you like the full market report?'\n    } else {\n      return 'شكراً لك على سؤالك. أنا أتعلم باستمرار لأقدم لك أفضل المساعدة في إدارة استثماراتك العقارية. هل يمكنك توضيح كيف يمكنني مساعدتك؟\\n\\nThank you for your question. I\\'m continuously learning to provide you the best assistance in managing your real estate investments. Could you clarify how I can help you?'\n    }\n  }\n\n  if (!isOpen) {\n    return (\n      <motion.div \n        className=\"fixed bottom-6 right-6 z-50\"\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ type: 'spring', stiffness: 260, damping: 20 }}\n      >\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"h-14 w-14 rounded-full neon-glow hover:scale-110 transition-transform duration-300 bg-gradient-to-r from-primary to-primary/70\"\n          data-testid=\"button-open-chat\"\n        >\n          <div className=\"relative\">\n            <MessageCircle className=\"h-6 w-6\" />\n            <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-green-500 rounded-full animate-pulse\" />\n          </div>\n        </Button>\n      </motion.div>\n    )\n  }\n\n  return (\n    <motion.div \n      className={`fixed bottom-6 right-6 z-50 ${isMinimized ? 'w-80' : 'w-96'}`}\n      initial={{ scale: 0, opacity: 0 }}\n      animate={{ scale: 1, opacity: 1 }}\n      transition={{ type: 'spring', stiffness: 260, damping: 20 }}\n    >\n      <Card className=\"glass-morphism border-2 border-primary/20 shadow-2xl\">\n        <CardHeader className=\"flex flex-row items-center justify-between p-4 bg-gradient-to-r from-primary/10 to-primary/5\">\n          <div className=\"flex items-center gap-3\">\n            <Avatar className=\"h-10 w-10 border-2 border-primary/30\">\n              <AvatarFallback className=\"bg-gradient-to-r from-primary to-primary/70 text-primary-foreground\">\n                🇸🇦\n              </AvatarFallback>\n            </Avatar>\n            <div>\n              <CardTitle className=\"text-lg flex items-center gap-2\">\n                زارون Zaron\n                <Sparkles className=\"h-4 w-4 text-primary animate-pulse\" />\n              </CardTitle>\n              <div className=\"flex items-center gap-2\">\n                <p className=\"text-xs text-muted-foreground\">AI Investment Assistant</p>\n                <div className=\"flex items-center gap-1\">\n                  <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-red-500'}`} />\n                  <span className=\"text-xs text-muted-foreground\">\n                    {isConnected ? 'Live' : 'Offline'}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setLanguage(language === 'en' ? 'ar' : 'en')}\n              className=\"h-8 w-8 p-0\"\n              title=\"Switch Language\"\n            >\n              {language === 'ar' ? '🇬🇧' : '🇸🇦'}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className={`h-8 w-8 p-0 ${isConnected ? 'text-green-600' : 'text-red-600'}`}\n              title={isConnected ? 'Connected' : 'Disconnected'}\n            >\n              {isConnected ? <Wifi className=\"h-4 w-4\" /> : <WifiOff className=\"h-4 w-4\" />}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsMinimized(!isMinimized)}\n              className=\"h-8 w-8 p-0\"\n            >\n              {isMinimized ? <Maximize2 className=\"h-4 w-4\" /> : <Minimize2 className=\"h-4 w-4\" />}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsOpen(false)}\n              className=\"h-8 w-8 p-0\"\n              data-testid=\"button-close-chat\"\n            >\n              ×\n            </Button>\n          </div>\n        </CardHeader>\n\n        <AnimatePresence>\n          {!isMinimized && (\n            <motion.div\n              initial={{ height: 0, opacity: 0 }}\n              animate={{ height: 'auto', opacity: 1 }}\n              exit={{ height: 0, opacity: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"overflow-hidden\"\n            >\n              <CardContent className=\"p-0\">\n                {/* AI Suggestions */}\n                <div className=\"p-4 border-b border-border/50\">\n                  <div className=\"flex items-center gap-2 mb-3\">\n                    <Bot className=\"h-4 w-4 text-primary\" />\n                    <span className=\"text-sm font-medium\">AI Insights</span>\n                  </div>\n                  <div className=\"grid gap-2\">\n                    {suggestions.map((suggestion, index) => (\n                      <div \n                        key={index}\n                        className=\"flex items-center justify-between p-2 rounded-lg bg-muted/50 hover-elevate cursor-pointer\"\n                        data-testid={`ai-suggestion-${index}`}\n                      >\n                        <div className=\"flex items-center gap-2\">\n                          {suggestion.type === 'market' && <TrendingUp className=\"h-4 w-4 text-green-600\" />}\n                          {suggestion.type === 'risk' && <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />}\n                          {suggestion.type === 'customer' && <Users className=\"h-4 w-4 text-blue-600\" />}\n                          <div>\n                            <p className=\"text-sm font-medium\">{suggestion.title}</p>\n                            <p className=\"text-xs text-muted-foreground\">{suggestion.description}</p>\n                          </div>\n                        </div>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {Math.round(suggestion.confidence * 100)}%\n                        </Badge>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Messages */}\n                <div className=\"h-80 overflow-y-auto p-4 space-y-4 modern-scrollbar\">\n                  {messages.map((msg) => (\n                    <motion.div\n                      key={msg.id}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div className={`flex items-start gap-2 max-w-[80%] ${msg.sender === 'user' ? 'flex-row-reverse' : ''}`}>\n                        {msg.sender === 'ai' && (\n                          <Avatar className=\"h-6 w-6 border border-primary/20\">\n                            <AvatarFallback className=\"bg-gradient-to-r from-primary/20 to-primary/10 text-xs\">\n                              🇸🇦\n                            </AvatarFallback>\n                          </Avatar>\n                        )}\n                        <div\n                          className={`p-3 rounded-lg whitespace-pre-line ${\n                            msg.sender === 'user'\n                              ? 'bg-primary text-primary-foreground ml-auto'\n                              : 'bg-muted'\n                          }`}\n                          data-testid={`message-${msg.id}`}\n                        >\n                          <p className=\"text-sm\">{msg.message}</p>\n                          <p className=\"text-xs opacity-70 mt-1\">\n                            {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                          </p>\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))}\n                  \n                  {/* Typing indicator */}\n                  {isTyping && (\n                    <motion.div\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"flex justify-start\"\n                    >\n                      <div className=\"flex items-start gap-2 max-w-[80%]\">\n                        <Avatar className=\"h-6 w-6 border border-primary/20\">\n                          <AvatarFallback className=\"bg-gradient-to-r from-primary/20 to-primary/10 text-xs\">\n                            🇸🇦\n                          </AvatarFallback>\n                        </Avatar>\n                        <div className=\"p-3 rounded-lg bg-muted\">\n                          <div className=\"flex items-center gap-1\">\n                            <span className=\"text-sm\">\n                              {language === 'ar' ? 'يكتب...' : 'Typing...'}\n                            </span>\n                            <div className=\"flex gap-1\">\n                              <div className=\"w-1 h-1 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '0ms' }} />\n                              <div className=\"w-1 h-1 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '150ms' }} />\n                              <div className=\"w-1 h-1 bg-primary rounded-full animate-bounce\" style={{ animationDelay: '300ms' }} />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </motion.div>\n                  )}\n                  <div ref={messagesEndRef} />\n                </div>\n\n                {/* Input */}\n                <div className=\"p-4 border-t border-border/50\">\n                  <div className=\"flex gap-2\">\n                    <Input\n                      value={message}\n                      onChange={(e) => setMessage(e.target.value)}\n                      placeholder={language === 'ar' ? 'اكتب رسالتك...' : 'Type your message...'}\n                      className=\"flex-1\"\n                      onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                      disabled={!isConnected}\n                      data-testid=\"input-chat-message\"\n                    />\n                    <Button \n                      onClick={handleSendMessage}\n                      className=\"neon-glow\"\n                      disabled={!message.trim() || !isConnected}\n                      data-testid=\"button-send-message\"\n                    >\n                      <Send className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                  <p className=\"text-xs text-muted-foreground mt-2 text-center\">\n                    {isConnected ? (\n                      language === 'ar' \n                        ? 'مدعوم بالذكاء الاصطناعي • يجيب بالعربية والإنجليزية'\n                        : 'Powered by AI • Responds in Arabic & English'\n                    ) : (\n                      language === 'ar'\n                        ? 'غير متصل • جاري إعادة الاتصال...'\n                        : 'Offline • Reconnecting...'\n                    )}\n                  </p>\n                </div>\n              </CardContent>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </Card>\n    </motion.div>\n  )\n}","size_bytes":19295},"client/src/components/ai-insights-panel.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { \n  Brain, \n  TrendingUp, \n  AlertTriangle, \n  Users, \n  Building2, \n  DollarSign,\n  Zap,\n  Target,\n  PieChart,\n  Shield\n} from 'lucide-react'\nimport { motion } from 'framer-motion'\n\ninterface AiInsight {\n  id: string\n  type: 'market' | 'customer' | 'property' | 'risk' | 'opportunity'\n  title: string\n  description: string\n  confidence: number\n  impact: 'high' | 'medium' | 'low'\n  actionable: boolean\n  recommendation?: string\n}\n\nexport function AiInsightsPanel() {\n  const insights: AiInsight[] = [\n    {\n      id: '1',\n      type: 'market',\n      title: 'Strong Residential Demand in Riyadh',\n      description: 'AI analysis shows 23% increase in residential property inquiries in Riyadh over the past month. Market sentiment is highly positive.',\n      confidence: 0.92,\n      impact: 'high',\n      actionable: true,\n      recommendation: 'Consider increasing residential property listings in Riyadh by 15%'\n    },\n    {\n      id: '2',\n      type: 'risk',\n      title: 'KYC Processing Bottleneck Detected',\n      description: 'AI detected average KYC processing time increased to 4.2 days. 3 applications pending review for over 72 hours.',\n      confidence: 0.98,\n      impact: 'medium',\n      actionable: true,\n      recommendation: 'Prioritize review of Fatima Al-Qasimi, Omar Hassan applications'\n    },\n    {\n      id: '3',\n      type: 'customer',\n      title: 'High-Value Investor Pattern Identified',\n      description: 'AI identified investment pattern: customers investing in 2+ properties have 87% likelihood of additional investments within 60 days.',\n      confidence: 0.84,\n      impact: 'high',\n      actionable: true,\n      recommendation: 'Target multi-property investors with premium opportunities'\n    },\n    {\n      id: '4',\n      type: 'opportunity',\n      title: 'Cross-Selling Opportunity',\n      description: 'AI suggests 12 existing customers are ideal candidates for luxury property segment based on their investment behavior and portfolio growth.',\n      confidence: 0.76,\n      impact: 'medium',\n      actionable: true,\n      recommendation: 'Send personalized luxury property recommendations'\n    },\n    {\n      id: '5',\n      type: 'property',\n      title: 'Yield Optimization Potential',\n      description: 'Machine learning models suggest 3 properties could increase yields by 0.8-1.2% through strategic positioning and pricing adjustments.',\n      confidence: 0.88,\n      impact: 'high',\n      actionable: true,\n      recommendation: 'Review pricing strategy for Office Tower, Retail Complex'\n    }\n  ]\n\n  const getInsightIcon = (type: string) => {\n    switch (type) {\n      case 'market': return <TrendingUp className=\"h-5 w-5 text-green-600\" />\n      case 'risk': return <AlertTriangle className=\"h-5 w-5 text-yellow-600\" />\n      case 'customer': return <Users className=\"h-5 w-5 text-blue-600\" />\n      case 'property': return <Building2 className=\"h-5 w-5 text-purple-600\" />\n      case 'opportunity': return <Target className=\"h-5 w-5 text-orange-600\" />\n      default: return <Brain className=\"h-5 w-5 text-primary\" />\n    }\n  }\n\n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case 'high': return 'bg-red-100 text-red-800 border-red-200'\n      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200'\n      case 'low': return 'bg-green-100 text-green-800 border-green-200'\n      default: return 'bg-gray-100 text-gray-800 border-gray-200'\n    }\n  }\n\n  return (\n    <Card className=\"glass-morphism border-primary/20\" data-testid=\"card-ai-insights\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"p-2 rounded-lg bg-gradient-to-r from-primary/20 to-primary/10\">\n              <Brain className=\"h-6 w-6 text-primary\" />\n            </div>\n            <div>\n              <CardTitle className=\"text-xl flex items-center gap-2\">\n                AI Insights & Recommendations\n                <Zap className=\"h-4 w-4 text-yellow-500 animate-pulse\" />\n              </CardTitle>\n              <p className=\"text-sm text-muted-foreground\">\n                Real-time intelligence powered by machine learning\n              </p>\n            </div>\n          </div>\n          <Badge variant=\"outline\" className=\"text-xs\">\n            <PieChart className=\"h-3 w-3 mr-1\" />\n            Live Analysis\n          </Badge>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        {insights.map((insight, index) => (\n          <motion.div\n            key={insight.id}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: index * 0.1 }}\n            className=\"p-4 rounded-lg border border-border/50 bg-card/50 hover-elevate\"\n            data-testid={`ai-insight-${insight.id}`}\n          >\n            <div className=\"flex items-start justify-between mb-3\">\n              <div className=\"flex items-center gap-3\">\n                {getInsightIcon(insight.type)}\n                <div>\n                  <h4 className=\"font-semibold text-sm\">{insight.title}</h4>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <Badge variant=\"secondary\" className=\"text-xs capitalize\">\n                      {insight.type}\n                    </Badge>\n                    <Badge \n                      className={`text-xs border ${getImpactColor(insight.impact)}`}\n                      variant=\"outline\"\n                    >\n                      {insight.impact} impact\n                    </Badge>\n                    <div className=\"flex items-center gap-1\">\n                      <Shield className=\"h-3 w-3 text-green-600\" />\n                      <span className=\"text-xs text-muted-foreground\">\n                        {Math.round(insight.confidence * 100)}% confidence\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <p className=\"text-sm text-muted-foreground mb-3 leading-relaxed\">\n              {insight.description}\n            </p>\n\n            {insight.recommendation && (\n              <div className=\"p-3 rounded-lg bg-primary/5 border border-primary/20 mb-3\">\n                <div className=\"flex items-start gap-2\">\n                  <Target className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <p className=\"text-sm font-medium text-primary mb-1\">AI Recommendation</p>\n                    <p className=\"text-sm text-muted-foreground\">{insight.recommendation}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {insight.actionable && (\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n                  <span className=\"text-xs text-green-600 font-medium\">Actionable</span>\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button variant=\"outline\" size=\"sm\" className=\"text-xs\">\n                    View Details\n                  </Button>\n                  <Button size=\"sm\" className=\"text-xs neon-glow\" data-testid={`button-action-${insight.id}`}>\n                    Take Action\n                  </Button>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        ))}\n\n        <div className=\"pt-4 border-t border-border/50\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <Brain className=\"h-4 w-4\" />\n              <span>AI analysis updates every 15 minutes</span>\n            </div>\n            <Button variant=\"outline\" size=\"sm\" className=\"text-xs\" data-testid=\"button-refresh-insights\">\n              Refresh Analysis\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}","size_bytes":8283},"client/src/components/app-sidebar.tsx":{"content":"import { \n  Building2, \n  UserCheck,\n  TrendingUp, \n  FileText, \n  Bell, \n  BarChart3,\n  Home,\n  Shield,\n  Settings\n} from \"lucide-react\"\nimport { Link, useLocation } from \"wouter\"\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarHeader,\n} from \"@/components/ui/sidebar\"\n\n// Menu items\nconst items = [\n  {\n    title: \"Dashboard\",\n    url: \"/\",\n    icon: Home,\n  },\n  {\n    title: \"Investors\",\n    url: \"/investors\",\n    icon: UserCheck,\n  },\n  {\n    title: \"Properties\",\n    url: \"/properties\",\n    icon: Building2,\n  },\n  {\n    title: \"Transactions\",\n    url: \"/transactions\",\n    icon: TrendingUp,\n  },\n  {\n    title: \"KYC Documents\",\n    url: \"/documents\",\n    icon: FileText,\n  },\n  {\n    title: \"Analytics\",\n    url: \"/analytics\",\n    icon: BarChart3,\n  },\n  {\n    title: \"Notifications\",\n    url: \"/notifications\",\n    icon: Bell,\n  }\n]\n\nconst adminItems = [\n  {\n    title: \"Admin Roles\",\n    url: \"/admin\",\n    icon: Shield,\n  },\n  {\n    title: \"Settings\",\n    url: \"/settings\",\n    icon: Settings,\n  }\n]\n\nexport function AppSidebar() {\n  const [location] = useLocation()\n\n  return (\n    <Sidebar className=\"glass-card border-r-0\">\n      <SidebarHeader className=\"border-b border-sidebar-border/50 bg-gradient-to-r from-primary/5 to-transparent\">\n        <div className=\"flex items-center gap-3 px-6 py-5\">\n          <div className=\"p-2 rounded-xl bg-primary/10 backdrop-blur-sm neon-glow\">\n            <Building2 className=\"h-6 w-6 text-primary animate-pulse-slow\" />\n          </div>\n          <div>\n            <span className=\"text-xl font-bold bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent\">\n              Zaron\n            </span>\n            <div className=\"text-xs text-muted-foreground/80\">Admin Panel</div>\n          </div>\n        </div>\n      </SidebarHeader>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel>Platform</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {items.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton asChild isActive={location === item.url}>\n                    <Link href={item.url} data-testid={`link-${item.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      <item.icon className=\"h-4 w-4\" />\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n        \n        <SidebarGroup>\n          <SidebarGroupLabel>Administration</SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {adminItems.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton asChild isActive={location === item.url}>\n                    <Link href={item.url} data-testid={`link-${item.title.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      <item.icon className=\"h-4 w-4\" />\n                      <span>{item.title}</span>\n                    </Link>\n                  </SidebarMenuButton>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n    </Sidebar>\n  )\n}","size_bytes":3462},"client/src/components/customer-360-view.tsx":{"content":"import { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar'\nimport { Progress } from '@/components/ui/progress'\nimport { \n  User, \n  DollarSign, \n  Building2, \n  FileText, \n  TrendingUp, \n  Clock, \n  AlertTriangle,\n  CheckCircle,\n  Brain,\n  Target,\n  Star,\n  Calendar,\n  Phone,\n  Mail,\n  MapPin,\n  Shield,\n  Eye,\n  Download\n} from 'lucide-react'\nimport { motion } from 'framer-motion'\n\ninterface CustomerData {\n  id: string\n  name: string\n  email: string\n  phone: string\n  nationality: string\n  joinDate: string\n  kycStatus: 'pending' | 'approved' | 'rejected'\n  totalInvested: number\n  activeProperties: number\n  monthlyIncome: number\n  riskProfile: 'conservative' | 'moderate' | 'aggressive'\n  aiScore: number\n  lastActivity: string\n}\n\ninterface InvestmentHistory {\n  id: string\n  propertyName: string\n  amount: number\n  date: string\n  status: 'active' | 'completed' | 'pending'\n  roi: number\n}\n\ninterface AIRecommendation {\n  type: 'investment' | 'risk' | 'engagement'\n  title: string\n  description: string\n  confidence: number\n  priority: 'high' | 'medium' | 'low'\n}\n\nexport function Customer360View({ customerId }: { customerId: string }) {\n  const [activeTab, setActiveTab] = useState('overview')\n\n  // Mock data\n  const customer: CustomerData = {\n    id: customerId,\n    name: 'Ahmed Al-Rashid',\n    email: 'ahmed.alrashid@email.com',\n    phone: '+966 50 123 4567',\n    nationality: 'Saudi Arabia',\n    joinDate: '2024-03-15',\n    kycStatus: 'approved',\n    totalInvested: 750000,\n    activeProperties: 3,\n    monthlyIncome: 12500,\n    riskProfile: 'moderate',\n    aiScore: 87,\n    lastActivity: '2024-09-16'\n  }\n\n  const investmentHistory: InvestmentHistory[] = [\n    {\n      id: '1',\n      propertyName: 'Luxury Apartments Riyadh',\n      amount: 250000,\n      date: '2024-03-20',\n      status: 'active',\n      roi: 8.5\n    },\n    {\n      id: '2',\n      propertyName: 'Commercial Tower Jeddah',\n      amount: 300000,\n      date: '2024-05-15',\n      status: 'active',\n      roi: 9.2\n    }\n  ]\n\n  const aiRecommendations: AIRecommendation[] = [\n    {\n      type: 'investment',\n      title: 'Premium Property Opportunity',\n      description: 'Based on portfolio analysis, customer shows strong preference for commercial properties with 8%+ yields.',\n      confidence: 0.92,\n      priority: 'high'\n    },\n    {\n      type: 'risk',\n      title: 'Portfolio Diversification',\n      description: 'Current portfolio concentrated in Saudi market. Consider international options.',\n      confidence: 0.78,\n      priority: 'medium'\n    }\n  ]\n\n  return (\n    <div className=\"space-y-6\" data-testid=\"customer-360-view\">\n      {/* Header */}\n      <Card className=\"glass-morphism border-primary/20\">\n        <CardHeader>\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <Avatar className=\"h-16 w-16 border-2 border-primary/30\">\n                <AvatarFallback className=\"bg-gradient-to-r from-primary to-primary/70 text-primary-foreground text-lg font-bold\">\n                  {customer.name.split(' ').map(n => n[0]).join('')}\n                </AvatarFallback>\n              </Avatar>\n              <div>\n                <h1 className=\"text-2xl font-bold\">{customer.name}</h1>\n                <p className=\"text-muted-foreground\">{customer.email}</p>\n                <div className=\"flex items-center gap-4 mt-2\">\n                  <Badge className=\"bg-green-100 text-green-800 border-0\">\n                    {customer.kycStatus.toUpperCase()}\n                  </Badge>\n                  <Badge className=\"bg-orange-100 text-orange-800 border-0\">\n                    {customer.riskProfile.toUpperCase()} RISK\n                  </Badge>\n                  <div className=\"flex items-center gap-1\">\n                    <Brain className=\"h-4 w-4 text-primary\" />\n                    <span className=\"text-sm font-medium\">AI Score: {customer.aiScore}/100</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button variant=\"outline\" size=\"sm\">\n                <Eye className=\"h-4 w-4 mr-2\" />\n                View Profile\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export Data\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card className=\"glass-morphism hover-elevate\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 rounded-lg bg-green-100\">\n                <DollarSign className=\"h-5 w-5 text-green-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Total Invested</p>\n                <p className=\"text-lg font-bold\">SAR {customer.totalInvested.toLocaleString()}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"glass-morphism hover-elevate\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 rounded-lg bg-blue-100\">\n                <Building2 className=\"h-5 w-5 text-blue-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Active Properties</p>\n                <p className=\"text-lg font-bold\">{customer.activeProperties}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"glass-morphism hover-elevate\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 rounded-lg bg-purple-100\">\n                <TrendingUp className=\"h-5 w-5 text-purple-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Monthly Income</p>\n                <p className=\"text-lg font-bold\">SAR {customer.monthlyIncome.toLocaleString()}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"glass-morphism hover-elevate\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"p-2 rounded-lg bg-orange-100\">\n                <Star className=\"h-5 w-5 text-orange-600\" />\n              </div>\n              <div>\n                <p className=\"text-sm text-muted-foreground\">AI Score</p>\n                <div className=\"flex items-center gap-2\">\n                  <p className=\"text-lg font-bold\">{customer.aiScore}/100</p>\n                  <Progress value={customer.aiScore} className=\"w-12 h-2\" />\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Detailed Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"investments\">Investments</TabsTrigger>\n          <TabsTrigger value=\"documents\">Documents</TabsTrigger>\n          <TabsTrigger value=\"ai-insights\">AI Insights</TabsTrigger>\n          <TabsTrigger value=\"activity\">Activity</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <User className=\"h-5 w-5\" />\n                Personal Information\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Phone</p>\n                  <p className=\"font-medium\">{customer.phone}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Nationality</p>\n                  <p className=\"font-medium\">{customer.nationality}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Join Date</p>\n                  <p className=\"font-medium\">{new Date(customer.joinDate).toLocaleDateString()}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Last Activity</p>\n                  <p className=\"font-medium\">{new Date(customer.lastActivity).toLocaleDateString()}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"investments\" className=\"space-y-4\">\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle>Investment History</CardTitle>\n              <CardDescription>Complete timeline of customer investments</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {investmentHistory.map((investment) => (\n                  <motion.div\n                    key={investment.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    className=\"flex items-center justify-between p-4 rounded-lg border border-border/50 hover-elevate\"\n                  >\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"p-2 rounded-lg bg-primary/10\">\n                        <Building2 className=\"h-5 w-5 text-primary\" />\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold\">{investment.propertyName}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Invested: SAR {investment.amount.toLocaleString()} • {new Date(investment.date).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <Badge className=\"bg-green-100 text-green-800\">\n                        {investment.status}\n                      </Badge>\n                      <p className=\"text-sm font-medium text-green-600 mt-1\">\n                        +{investment.roi}% ROI\n                      </p>\n                    </div>\n                  </motion.div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"ai-insights\" className=\"space-y-4\">\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Brain className=\"h-5 w-5 text-primary\" />\n                AI-Powered Customer Insights\n              </CardTitle>\n              <CardDescription>\n                Machine learning analysis of customer behavior and preferences\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {aiRecommendations.map((rec, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ delay: index * 0.1 }}\n                    className=\"p-4 rounded-lg border border-border/50 hover-elevate\"\n                  >\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex items-center gap-2\">\n                        <Target className=\"h-4 w-4 text-primary\" />\n                        <h4 className=\"font-semibold\">{rec.title}</h4>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge variant={rec.priority === 'high' ? 'destructive' : 'default'}>\n                          {rec.priority} priority\n                        </Badge>\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {Math.round(rec.confidence * 100)}% confidence\n                        </Badge>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mb-3\">{rec.description}</p>\n                    <Button size=\"sm\" className=\"neon-glow\">\n                      Take Action\n                    </Button>\n                  </motion.div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"documents\" className=\"space-y-4\">\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                KYC Documents & Verification\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"p-4 rounded-lg border border-border/50 hover-elevate\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-medium\">National ID</h4>\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">Verified • Uploaded March 15, 2024</p>\n                </div>\n                <div className=\"p-4 rounded-lg border border-border/50 hover-elevate\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-medium\">Bank Statement</h4>\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">Verified • Uploaded March 18, 2024</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"activity\" className=\"space-y-4\">\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Clock className=\"h-5 w-5\" />\n                Recent Activity Timeline\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {[\n                  { action: 'Logged into platform', time: '2 hours ago', type: 'login' },\n                  { action: 'Viewed property listing', time: '1 day ago', type: 'view' },\n                  { action: 'Downloaded investment report', time: '3 days ago', type: 'download' },\n                  { action: 'Made new investment', time: '1 week ago', type: 'investment' }\n                ].map((activity, index) => (\n                  <div key={index} className=\"flex items-center gap-4 p-3 rounded-lg bg-muted/30 hover-elevate\">\n                    <div className=\"w-2 h-2 rounded-full bg-primary animate-pulse\" />\n                    <div className=\"flex-1\">\n                      <p className=\"text-sm font-medium\">{activity.action}</p>\n                      <p className=\"text-xs text-muted-foreground\">{activity.time}</p>\n                    </div>\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {activity.type}\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}","size_bytes":16130},"client/src/components/dashboard-chart.tsx":{"content":"import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Bar, BarChart, Line, LineChart, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\"\n\ninterface ChartData {\n  name: string\n  value: number\n  [key: string]: any\n}\n\ninterface DashboardChartProps {\n  title: string\n  description?: string\n  data: ChartData[]\n  type: \"bar\" | \"line\"\n  dataKey?: string\n}\n\nexport function DashboardChart({ \n  title, \n  description, \n  data, \n  type, \n  dataKey = \"value\" \n}: DashboardChartProps) {\n  return (\n    <Card \n      className=\"enhanced-card animate-scale-up relative overflow-hidden group\" \n      data-testid={`card-chart-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      <div className=\"absolute inset-0 gradient-card opacity-50\" />\n      <CardHeader className=\"relative z-10\">\n        <CardTitle className=\"text-lg font-semibold bg-gradient-to-r from-foreground to-primary/80 bg-clip-text text-transparent\">\n          {title}\n        </CardTitle>\n        {description && (\n          <CardDescription className=\"text-muted-foreground/80\">{description}</CardDescription>\n        )}\n      </CardHeader>\n      <CardContent className=\"relative z-10\">\n        <div className=\"p-2 rounded-lg bg-background/50 backdrop-blur-sm\">\n          <ResponsiveContainer width=\"100%\" height={300}>\n            {type === \"bar\" ? (\n              <BarChart data={data}>\n                <defs>\n                  <linearGradient id=\"colorGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"hsl(var(--primary))\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"hsl(var(--primary))\" stopOpacity={0.3}/>\n                  </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-20\" stroke=\"hsl(var(--muted-foreground))\" />\n                <XAxis \n                  dataKey=\"name\" \n                  tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}\n                  axisLine={false}\n                  tickLine={false}\n                />\n                <YAxis \n                  tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}\n                  axisLine={false}\n                  tickLine={false}\n                />\n                <Tooltip \n                  contentStyle={{ \n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '12px',\n                    boxShadow: '0 10px 40px rgba(0, 0, 0, 0.1)',\n                    backdropFilter: 'blur(20px)'\n                  }}\n                />\n                <Bar \n                  dataKey={dataKey} \n                  fill=\"url(#colorGradient)\" \n                  radius={[6, 6, 0, 0]}\n                />\n              </BarChart>\n            ) : (\n              <LineChart data={data}>\n                <defs>\n                  <linearGradient id=\"lineGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"hsl(var(--primary))\" stopOpacity={0.3}/>\n                    <stop offset=\"95%\" stopColor=\"hsl(var(--primary))\" stopOpacity={0}/>\n                  </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" className=\"opacity-20\" stroke=\"hsl(var(--muted-foreground))\" />\n                <XAxis \n                  dataKey=\"name\" \n                  tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}\n                  axisLine={false}\n                  tickLine={false}\n                />\n                <YAxis \n                  tick={{ fontSize: 12, fill: 'hsl(var(--muted-foreground))' }}\n                  axisLine={false}\n                  tickLine={false}\n                />\n                <Tooltip \n                  contentStyle={{ \n                    backgroundColor: 'hsl(var(--background))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: '12px',\n                    boxShadow: '0 10px 40px rgba(0, 0, 0, 0.1)',\n                    backdropFilter: 'blur(20px)'\n                  }}\n                />\n                <Line \n                  type=\"monotone\" \n                  dataKey={dataKey} \n                  stroke=\"hsl(var(--primary))\" \n                  strokeWidth={3}\n                  dot={{ fill: 'hsl(var(--primary))', strokeWidth: 3, r: 6, className: 'animate-pulse' }}\n                  activeDot={{ r: 8, className: 'animate-pulse' }}\n                  fill=\"url(#lineGradient)\"\n                />\n              </LineChart>\n            )}\n          </ResponsiveContainer>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}","size_bytes":4733},"client/src/components/document-card.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { FileText, Download, Eye, Trash2 } from \"lucide-react\"\nimport { KycDocument } from \"@shared/schema\"\nimport { format } from \"date-fns\"\n\ninterface DocumentCardProps {\n  document: KycDocument\n  onView?: (id: string) => void\n  onDownload?: (id: string) => void\n  onDelete?: (id: string) => void\n}\n\nexport function DocumentCard({ document, onView, onDownload, onDelete }: DocumentCardProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"approved\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n      case \"rejected\":\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n      default:\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\"\n    }\n  }\n\n  const getDocumentTypeLabel = (type: string) => {\n    switch (type) {\n      case \"national_id\":\n        return \"National ID\"\n      case \"iqama\":\n        return \"Iqama\"\n      case \"passport\":\n        return \"Passport\"\n      case \"selfie\":\n        return \"Selfie Photo\"\n      case \"proof_of_income\":\n        return \"Proof of Income\"\n      case \"address_proof\":\n        return \"Address Proof\"\n      case \"employment_letter\":\n        return \"Employment Letter\"\n      default:\n        return type.replace('_', ' ').toUpperCase()\n    }\n  }\n\n  const handleView = () => {\n    console.log('View document triggered:', document.id)\n    onView?.(document.id)\n  }\n\n  const handleDownload = () => {\n    console.log('Download document triggered:', document.id)\n    onDownload?.(document.id)\n  }\n\n  const handleDelete = () => {\n    console.log('Delete document triggered:', document.id)\n    onDelete?.(document.id)\n  }\n\n  return (\n    <Card className=\"hover-elevate\" data-testid={`card-document-${document.id}`}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center gap-2\">\n          <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          <CardTitle className=\"text-sm\" data-testid={`text-type-${document.id}`}>\n            {getDocumentTypeLabel(document.documentType)}\n          </CardTitle>\n        </div>\n        <Badge \n          className={getStatusColor(document.status)}\n          data-testid={`badge-status-${document.id}`}\n        >\n          {document.status}\n        </Badge>\n      </CardHeader>\n      <CardContent className=\"space-y-3\">\n        <div className=\"text-xs text-muted-foreground\" data-testid={`text-date-${document.id}`}>\n          Uploaded {format(new Date(document.uploadedAt!), 'MMM dd, yyyy')}\n        </div>\n        \n        {document.reviewNotes && (\n          <div className=\"text-xs text-muted-foreground bg-muted p-2 rounded\" data-testid={`text-notes-${document.id}`}>\n            <strong>Notes:</strong> {document.reviewNotes}\n          </div>\n        )}\n\n        <div className=\"flex gap-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleView}\n            data-testid={`button-view-${document.id}`}\n            className=\"flex-1\"\n          >\n            <Eye className=\"h-3 w-3 mr-1\" />\n            View\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleDownload}\n            data-testid={`button-download-${document.id}`}\n            className=\"flex-1\"\n          >\n            <Download className=\"h-3 w-3 mr-1\" />\n            Download\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleDelete}\n            data-testid={`button-delete-${document.id}`}\n          >\n            <Trash2 className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}","size_bytes":3929},"client/src/components/investor-table.tsx":{"content":"import { useState } from \"react\"\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\"\nimport { CheckCircle, XCircle, Clock } from \"lucide-react\"\nimport { Investor } from \"@shared/schema\"\n\ninterface InvestorTableProps {\n  investors: Investor[]\n  onApproveKyc?: (investorId: string) => void\n  onRejectKyc?: (investorId: string) => void\n}\n\nexport function InvestorTable({ investors, onApproveKyc, onRejectKyc }: InvestorTableProps) {\n  const [processing, setProcessing] = useState<string | null>(null)\n\n  const getKycStatusColor = (status: string) => {\n    switch (status) {\n      case \"approved\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n      case \"rejected\":\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n      default:\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\"\n    }\n  }\n\n  const getKycIcon = (status: string) => {\n    switch (status) {\n      case \"approved\":\n        return <CheckCircle className=\"h-4 w-4\" />\n      case \"rejected\":\n        return <XCircle className=\"h-4 w-4\" />\n      default:\n        return <Clock className=\"h-4 w-4\" />\n    }\n  }\n\n  const handleApprove = async (investorId: string) => {\n    setProcessing(investorId)\n    console.log('Approve KYC triggered:', investorId)\n    await new Promise(resolve => setTimeout(resolve, 1000)) // Simulate API call\n    onApproveKyc?.(investorId)\n    setProcessing(null)\n  }\n\n  const handleReject = async (investorId: string) => {\n    setProcessing(investorId)\n    console.log('Reject KYC triggered:', investorId)\n    await new Promise(resolve => setTimeout(resolve, 1000)) // Simulate API call\n    onRejectKyc?.(investorId)\n    setProcessing(null)\n  }\n\n  return (\n    <div className=\"rounded-md border\" data-testid=\"table-investors\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Investor</TableHead>\n            <TableHead>Contact</TableHead>\n            <TableHead>KYC Status</TableHead>\n            <TableHead>Total Invested</TableHead>\n            <TableHead>Properties</TableHead>\n            <TableHead>Monthly Income</TableHead>\n            <TableHead>Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {investors.map((investor) => (\n            <TableRow key={investor.id} data-testid={`row-investor-${investor.id}`}>\n              <TableCell className=\"flex items-center gap-3\">\n                <Avatar>\n                  <AvatarFallback>\n                    {investor.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                  </AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"font-medium\" data-testid={`text-name-${investor.id}`}>\n                    {investor.name}\n                  </div>\n                  <div className=\"text-sm text-muted-foreground\" data-testid={`text-nationality-${investor.id}`}>\n                    {investor.nationality}\n                  </div>\n                </div>\n              </TableCell>\n              <TableCell>\n                <div className=\"text-sm\">\n                  <div data-testid={`text-email-${investor.id}`}>{investor.email}</div>\n                  {investor.phone && (\n                    <div className=\"text-muted-foreground\" data-testid={`text-phone-${investor.id}`}>\n                      {investor.phone}\n                    </div>\n                  )}\n                </div>\n              </TableCell>\n              <TableCell>\n                <Badge \n                  className={`${getKycStatusColor(investor.kycStatus)} flex items-center gap-1 w-fit`}\n                  data-testid={`badge-kyc-${investor.id}`}\n                >\n                  {getKycIcon(investor.kycStatus)}\n                  {investor.kycStatus}\n                </Badge>\n              </TableCell>\n              <TableCell className=\"font-mono\" data-testid={`text-invested-${investor.id}`}>\n                SAR {Number(investor.totalInvested).toLocaleString()}\n              </TableCell>\n              <TableCell data-testid={`text-properties-${investor.id}`}>\n                {investor.activeProperties}\n              </TableCell>\n              <TableCell className=\"font-mono\" data-testid={`text-income-${investor.id}`}>\n                SAR {Number(investor.monthlyIncome).toLocaleString()}\n              </TableCell>\n              <TableCell>\n                {investor.kycStatus === \"pending\" && (\n                  <div className=\"flex gap-2\">\n                    <Button \n                      size=\"sm\" \n                      variant=\"default\"\n                      onClick={() => handleApprove(investor.id)}\n                      disabled={processing === investor.id}\n                      data-testid={`button-approve-${investor.id}`}\n                    >\n                      {processing === investor.id ? \"...\" : \"Approve\"}\n                    </Button>\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\"\n                      onClick={() => handleReject(investor.id)}\n                      disabled={processing === investor.id}\n                      data-testid={`button-reject-${investor.id}`}\n                    >\n                      {processing === investor.id ? \"...\" : \"Reject\"}\n                    </Button>\n                  </div>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}","size_bytes":5722},"client/src/components/notification-card.tsx":{"content":"import { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Bell, CheckCircle, AlertTriangle, Info, X } from \"lucide-react\"\nimport { Notification } from \"@shared/schema\"\nimport { format } from \"date-fns\"\n\ninterface NotificationCardProps {\n  notification: Notification\n  onMarkAsRead?: (id: string) => void\n  onDelete?: (id: string) => void\n}\n\nexport function NotificationCard({ notification, onMarkAsRead, onDelete }: NotificationCardProps) {\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case \"success\":\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />\n      case \"warning\":\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n      case \"error\":\n        return <X className=\"h-4 w-4 text-red-600\" />\n      default:\n        return <Info className=\"h-4 w-4 text-blue-600\" />\n    }\n  }\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case \"success\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n      case \"warning\":\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\"\n      case \"error\":\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n      default:\n        return \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n    }\n  }\n\n  const handleMarkAsRead = () => {\n    console.log('Mark as read triggered:', notification.id)\n    onMarkAsRead?.(notification.id)\n  }\n\n  const handleDelete = () => {\n    console.log('Delete notification triggered:', notification.id)\n    onDelete?.(notification.id)\n  }\n\n  return (\n    <Card \n      className={`${notification.isRead ? 'opacity-70' : ''} hover-elevate`}\n      data-testid={`card-notification-${notification.id}`}\n    >\n      <CardHeader className=\"flex flex-row items-start justify-between space-y-0 pb-2\">\n        <div className=\"flex items-center gap-2\">\n          {getTypeIcon(notification.type)}\n          <h4 className=\"font-semibold\" data-testid={`text-title-${notification.id}`}>\n            {notification.title}\n          </h4>\n          {!notification.isRead && (\n            <Badge variant=\"secondary\" className=\"text-xs\">New</Badge>\n          )}\n        </div>\n        <div className=\"flex items-center gap-1\">\n          <Badge \n            className={`${getTypeColor(notification.type)} text-xs`}\n            data-testid={`badge-type-${notification.id}`}\n          >\n            {notification.type}\n          </Badge>\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            onClick={handleDelete}\n            data-testid={`button-delete-${notification.id}`}\n            className=\"h-6 w-6\"\n          >\n            <X className=\"h-3 w-3\" />\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-3\">\n        <p className=\"text-sm text-muted-foreground\" data-testid={`text-message-${notification.id}`}>\n          {notification.message}\n        </p>\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-xs text-muted-foreground\" data-testid={`text-date-${notification.id}`}>\n            {format(new Date(notification.createdAt!), 'MMM dd, yyyy HH:mm')}\n          </span>\n          {!notification.isRead && (\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleMarkAsRead}\n              data-testid={`button-mark-read-${notification.id}`}\n            >\n              Mark as Read\n            </Button>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}","size_bytes":3679},"client/src/components/property-card.tsx":{"content":"import { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { MapPin, TrendingUp, Users, Edit, Trash2, DollarSign, BarChart3, Activity, Shield } from \"lucide-react\"\nimport { Property } from \"@shared/schema\"\n\ninterface PropertyCardProps {\n  property: Property\n  onEdit?: (id: string) => void\n  onDelete?: (id: string) => void\n  onDeactivate?: (id: string) => void\n}\n\nexport function PropertyCard({ property, onEdit, onDelete, onDeactivate }: PropertyCardProps) {\n  const statusColors = {\n    live: \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\",\n    upcoming: \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\",\n    closed: \"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\"\n  }\n\n  const performanceColors = {\n    excellent: \"text-emerald-600\",\n    good: \"text-green-600\",\n    stable: \"text-blue-600\",\n    declining: \"text-orange-600\"\n  }\n\n  const handleEdit = () => {\n    console.log('Edit property triggered:', property.id)\n    onEdit?.(property.id)\n  }\n\n  const handleDelete = () => {\n    console.log('Delete property triggered:', property.id)\n    onDelete?.(property.id)\n  }\n\n  const handleDeactivate = () => {\n    console.log('Deactivate property triggered:', property.id)\n    onDeactivate?.(property.id)\n  }\n\n  // Determine if property can be deleted (only non-live properties without investments)\n  const canDelete = property.status !== 'live' && Number(property.totalInvestment || 0) === 0\n  \n  // Determine if property should show deactivate option (live properties with investments)\n  const shouldShowDeactivate = property.status === 'live' && Number(property.totalInvestment || 0) > 0\n\n  return (\n    <Card className=\"enhanced-card animate-scale-up group overflow-hidden\" data-testid={`card-property-${property.id}`}>\n      {property.images && property.images.length > 0 && (\n        <div className=\"aspect-video relative overflow-hidden rounded-t-lg\">\n          <img\n            src={property.images[0]}\n            alt={property.title}\n            className=\"object-cover w-full h-full transition-transform duration-500 group-hover:scale-110\"\n            data-testid={`img-property-${property.id}`}\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n          <div className=\"absolute top-3 right-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n            <Badge className={`${statusColors[property.status as keyof typeof statusColors]} backdrop-blur-sm`}>\n              {property.status}\n            </Badge>\n          </div>\n        </div>\n      )}\n      \n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-start justify-between\">\n          <CardTitle className=\"text-lg\" data-testid={`text-property-title-${property.id}`}>\n            {property.title}\n          </CardTitle>\n          <Badge \n            className={statusColors[property.status as keyof typeof statusColors]}\n            data-testid={`badge-status-${property.id}`}\n          >\n            {property.status}\n          </Badge>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        <div className=\"flex items-center text-sm text-muted-foreground\">\n          <MapPin className=\"h-4 w-4 mr-1\" />\n          <span data-testid={`text-location-${property.id}`}>{property.location}</span>\n        </div>\n\n        <div className=\"flex items-center justify-between text-sm\">\n          <div className=\"flex items-center\">\n            <TrendingUp className=\"h-4 w-4 mr-1 text-green-600\" />\n            <span data-testid={`text-yield-${property.id}`}>{property.yield}% Yield</span>\n          </div>\n          <div className=\"flex items-center\">\n            <Users className=\"h-4 w-4 mr-1 text-blue-600\" />\n            <span data-testid={`text-ownership-${property.id}`}>{property.ownershipCap}% Cap</span>\n          </div>\n        </div>\n\n        <div className=\"text-xl font-bold text-primary\" data-testid={`text-price-${property.id}`}>\n          SAR {Number(property.price).toLocaleString()}\n        </div>\n\n        {/* Investment Metrics */}\n        {property.status === 'live' && (\n          <div className=\"space-y-2 p-3 bg-muted/30 rounded-lg\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center\">\n                <DollarSign className=\"h-4 w-4 mr-1 text-green-600\" />\n                <span className=\"text-muted-foreground\">Investment</span>\n              </div>\n              <span className=\"font-semibold\" data-testid={`text-investment-${property.id}`}>\n                SAR {Number(property.totalInvestment || 0).toLocaleString()}\n              </span>\n            </div>\n            \n            <div className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center\">\n                <Users className=\"h-4 w-4 mr-1 text-blue-600\" />\n                <span className=\"text-muted-foreground\">Investors</span>\n              </div>\n              <span className=\"font-semibold\" data-testid={`text-investors-${property.id}`}>\n                {property.investorCount || 0}\n              </span>\n            </div>\n\n            <div className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center\">\n                <BarChart3 className=\"h-4 w-4 mr-1 text-purple-600\" />\n                <span className=\"text-muted-foreground\">Occupancy</span>\n              </div>\n              <span className=\"font-semibold\" data-testid={`text-occupancy-${property.id}`}>\n                {property.occupancyRate || 0}%\n              </span>\n            </div>\n\n            <div className=\"flex items-center justify-between text-sm\">\n              <div className=\"flex items-center\">\n                <Activity className=\"h-4 w-4 mr-1\" />\n                <span className=\"text-muted-foreground\">Performance</span>\n              </div>\n              <span className={`font-semibold capitalize ${performanceColors[property.performance as keyof typeof performanceColors] || 'text-muted-foreground'}`} data-testid={`text-performance-${property.id}`}>\n                {property.performance || 'stable'}\n              </span>\n            </div>\n          </div>\n        )}\n\n        {property.description && (\n          <p className=\"text-sm text-muted-foreground line-clamp-2\" data-testid={`text-description-${property.id}`}>\n            {property.description}\n          </p>\n        )}\n      </CardContent>\n\n      <CardFooter className=\"flex gap-2 pt-3\">\n        <Button \n          variant=\"outline\" \n          size=\"sm\" \n          onClick={handleEdit}\n          data-testid={`button-edit-${property.id}`}\n          className=\"flex-1\"\n        >\n          <Edit className=\"h-4 w-4 mr-1\" />\n          Edit\n        </Button>\n        \n        {canDelete ? (\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={handleDelete}\n            data-testid={`button-delete-${property.id}`}\n            className=\"flex-1 text-destructive hover:text-destructive\"\n          >\n            <Trash2 className=\"h-4 w-4 mr-1\" />\n            Delete\n          </Button>\n        ) : shouldShowDeactivate ? (\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            onClick={handleDeactivate}\n            data-testid={`button-deactivate-${property.id}`}\n            className=\"flex-1 text-orange-600 hover:text-orange-700\"\n          >\n            <Shield className=\"h-4 w-4 mr-1\" />\n            Deactivate\n          </Button>\n        ) : (\n          <Button \n            variant=\"outline\" \n            size=\"sm\" \n            disabled\n            className=\"flex-1 opacity-50\"\n            title={property.status === 'live' ? 'Cannot delete live property with investments' : 'Property has active investments'}\n          >\n            <Trash2 className=\"h-4 w-4 mr-1\" />\n            {property.status === 'live' ? 'Active' : 'Protected'}\n          </Button>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}","size_bytes":8218},"client/src/components/property-form.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Upload, Plus, X } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\n\ninterface PropertyFormProps {\n  onSubmit?: (data: any) => void\n  onCancel?: () => void\n  initialData?: any\n}\n\nexport function PropertyForm({ onSubmit, onCancel, initialData }: PropertyFormProps) {\n  const { toast } = useToast()\n  const [formData, setFormData] = useState({\n    title: initialData?.title || '',\n    description: initialData?.description || '',\n    location: initialData?.location || '',\n    price: initialData?.price || '',\n    propertyType: initialData?.propertyType || '',\n    yield: initialData?.yield || '',\n    ownershipCap: initialData?.ownershipCap || '100',\n    status: initialData?.status || 'upcoming',\n    images: initialData?.images || []\n  })\n\n  const [imageUpload, setImageUpload] = useState('')\n\n  const handleInputChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n  }\n\n  const handleAddImage = () => {\n    if (imageUpload.trim()) {\n      setFormData(prev => ({\n        ...prev,\n        images: [...prev.images, imageUpload.trim()]\n      }))\n      setImageUpload('')\n    }\n  }\n\n  const handleRemoveImage = (index: number) => {\n    setFormData(prev => ({\n      ...prev,\n      images: prev.images.filter((_: any, i: number) => i !== index)\n    }))\n  }\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    console.log('Property form submitted:', formData)\n    toast({\n      title: \"Property Saved\",\n      description: \"Property has been successfully saved.\",\n    })\n    onSubmit?.(formData)\n  }\n\n  return (\n    <form onSubmit={handleSubmit} data-testid=\"form-property\">\n      <Card>\n        <CardHeader>\n          <CardTitle>{initialData ? 'Edit Property' : 'Add New Property'}</CardTitle>\n          <CardDescription>\n            {initialData ? 'Update property details' : 'Enter the details for the new property listing'}\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"title\">Property Title</Label>\n              <Input\n                id=\"title\"\n                value={formData.title}\n                onChange={(e) => handleInputChange('title', e.target.value)}\n                placeholder=\"Enter property title\"\n                required\n                data-testid=\"input-title\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"location\">Location</Label>\n              <Input\n                id=\"location\"\n                value={formData.location}\n                onChange={(e) => handleInputChange('location', e.target.value)}\n                placeholder=\"Enter property location\"\n                required\n                data-testid=\"input-location\"\n              />\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"description\">Description</Label>\n            <Textarea\n              id=\"description\"\n              value={formData.description}\n              onChange={(e) => handleInputChange('description', e.target.value)}\n              placeholder=\"Enter property description\"\n              rows={3}\n              data-testid=\"textarea-description\"\n            />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"price\">Price (SAR)</Label>\n              <Input\n                id=\"price\"\n                type=\"number\"\n                value={formData.price}\n                onChange={(e) => handleInputChange('price', e.target.value)}\n                placeholder=\"0\"\n                required\n                data-testid=\"input-price\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"yield\">Expected Yield (%)</Label>\n              <Input\n                id=\"yield\"\n                type=\"number\"\n                step=\"0.1\"\n                value={formData.yield}\n                onChange={(e) => handleInputChange('yield', e.target.value)}\n                placeholder=\"0.0\"\n                data-testid=\"input-yield\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"ownershipCap\">Ownership Cap (%)</Label>\n              <Input\n                id=\"ownershipCap\"\n                type=\"number\"\n                value={formData.ownershipCap}\n                onChange={(e) => handleInputChange('ownershipCap', e.target.value)}\n                placeholder=\"100\"\n                data-testid=\"input-ownership-cap\"\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"propertyType\">Property Type</Label>\n              <Select value={formData.propertyType} onValueChange={(value) => handleInputChange('propertyType', value)}>\n                <SelectTrigger data-testid=\"select-property-type\">\n                  <SelectValue placeholder=\"Select property type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"residential\">Residential</SelectItem>\n                  <SelectItem value=\"commercial\">Commercial</SelectItem>\n                  <SelectItem value=\"retail\">Retail</SelectItem>\n                  <SelectItem value=\"mixed-use\">Mixed Use</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"status\">Status</Label>\n              <Select value={formData.status} onValueChange={(value) => handleInputChange('status', value)}>\n                <SelectTrigger data-testid=\"select-status\">\n                  <SelectValue placeholder=\"Select status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"upcoming\">Upcoming</SelectItem>\n                  <SelectItem value=\"live\">Live</SelectItem>\n                  <SelectItem value=\"closed\">Closed</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <Label>Property Images</Label>\n            <div className=\"flex gap-2\">\n              <Input\n                value={imageUpload}\n                onChange={(e) => setImageUpload(e.target.value)}\n                placeholder=\"Enter image URL\"\n                data-testid=\"input-image-url\"\n              />\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={handleAddImage}\n                data-testid=\"button-add-image\"\n              >\n                <Plus className=\"h-4 w-4\" />\n              </Button>\n            </div>\n            {formData.images.length > 0 && (\n              <div className=\"space-y-2\">\n                {formData.images.map((image: string, index: number) => (\n                  <div key={index} className=\"flex items-center gap-2 p-2 border rounded\">\n                    <Upload className=\"h-4 w-4 text-muted-foreground\" />\n                    <span className=\"flex-1 text-sm truncate\" data-testid={`text-image-${index}`}>{image}</span>\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => handleRemoveImage(index)}\n                      data-testid={`button-remove-image-${index}`}\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex gap-4 pt-4\">\n            <Button type=\"submit\" data-testid=\"button-submit\">\n              {initialData ? 'Update Property' : 'Create Property'}\n            </Button>\n            <Button type=\"button\" variant=\"outline\" onClick={onCancel} data-testid=\"button-cancel\">\n              Cancel\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </form>\n  )\n}","size_bytes":8675},"client/src/components/smart-table-view.tsx":{"content":"import { useState } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { Badge } from '@/components/ui/badge'\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar'\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select'\nimport { \n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table'\nimport { \n  Search, \n  Filter, \n  Grid3X3, \n  List, \n  Brain, \n  TrendingUp,\n  AlertTriangle,\n  Star,\n  Eye,\n  Edit,\n  MoreHorizontal,\n  Download,\n  Zap\n} from 'lucide-react'\nimport { motion } from 'framer-motion'\n\ninterface TableData {\n  id: string\n  name: string\n  email?: string\n  value?: number\n  status: string\n  aiScore?: number\n  lastActivity?: string\n  type?: string\n  location?: string\n  yield?: number\n}\n\ninterface SmartTableProps {\n  title: string\n  description: string\n  data: TableData[]\n  type: 'users' | 'properties'\n  columns: string[]\n}\n\nexport function SmartTableView({ title, description, data, type }: SmartTableProps) {\n  const [viewMode, setViewMode] = useState<'table' | 'grid'>('table')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [filterStatus, setFilterStatus] = useState('all')\n  const [showAiInsights, setShowAiInsights] = useState(true)\n\n  const filteredData = data.filter(item => {\n    const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         item.email?.toLowerCase().includes(searchTerm.toLowerCase())\n    const matchesFilter = filterStatus === 'all' || item.status === filterStatus\n    return matchesSearch && matchesFilter\n  })\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'active': case 'approved': return 'bg-green-100 text-green-800'\n      case 'pending': return 'bg-yellow-100 text-yellow-800'\n      case 'inactive': case 'rejected': return 'bg-red-100 text-red-800'\n      case 'upcoming': return 'bg-blue-100 text-blue-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  const getAiRecommendations = () => {\n    if (type === 'users') {\n      return [\n        { text: '12 users ready for premium property offers', confidence: 0.89, type: 'opportunity' },\n        { text: '3 high-value users at risk of churn', confidence: 0.76, type: 'risk' },\n        { text: '8 users perfect for luxury segment', confidence: 0.82, type: 'upsell' }\n      ]\n    } else {\n      return [\n        { text: '2 properties showing high demand signals', confidence: 0.91, type: 'trending' },\n        { text: '1 property yield optimization opportunity', confidence: 0.84, type: 'optimization' },\n        { text: '4 properties ideal for current market', confidence: 0.78, type: 'market-fit' }\n      ]\n    }\n  }\n\n  const renderTableView = () => (\n    <Card className=\"glass-morphism\">\n      <CardContent className=\"p-0\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              {type === 'users' ? (\n                <>\n                  <TableHead>User</TableHead>\n                  <TableHead>Email</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Total Invested</TableHead>\n                  <TableHead>AI Score</TableHead>\n                  <TableHead>Actions</TableHead>\n                </>\n              ) : (\n                <>\n                  <TableHead>Property</TableHead>\n                  <TableHead>Location</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Value</TableHead>\n                  <TableHead>Yield</TableHead>\n                  <TableHead>Actions</TableHead>\n                </>\n              )}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredData.map((item, index) => (\n              <motion.tr\n                key={item.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.05 }}\n                className=\"hover-elevate cursor-pointer\"\n                data-testid={`table-row-${item.id}`}\n              >\n                <TableCell>\n                  <div className=\"flex items-center gap-3\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarFallback className=\"text-xs\">\n                        {item.name.split(' ').map(n => n[0]).join('')}\n                      </AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <p className=\"font-medium\">{item.name}</p>\n                      {type === 'properties' && item.type && (\n                        <p className=\"text-xs text-muted-foreground\">{item.type}</p>\n                      )}\n                    </div>\n                  </div>\n                </TableCell>\n                \n                {type === 'users' ? (\n                  <>\n                    <TableCell>{item.email}</TableCell>\n                    <TableCell>\n                      <Badge className={`${getStatusColor(item.status)} border-0`}>\n                        {item.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"font-medium\">\n                      SAR {item.value?.toLocaleString() || '0'}\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-medium\">{item.aiScore}/100</span>\n                        <div className={`w-2 h-2 rounded-full ${\n                          (item.aiScore || 0) > 80 ? 'bg-green-500' :\n                          (item.aiScore || 0) > 60 ? 'bg-yellow-500' : 'bg-red-500'\n                        }`} />\n                      </div>\n                    </TableCell>\n                  </>\n                ) : (\n                  <>\n                    <TableCell>{item.location}</TableCell>\n                    <TableCell>\n                      <Badge className={`${getStatusColor(item.status)} border-0`}>\n                        {item.status}\n                      </Badge>\n                    </TableCell>\n                    <TableCell className=\"font-medium\">\n                      SAR {item.value?.toLocaleString() || '0'}\n                    </TableCell>\n                    <TableCell className=\"font-medium text-green-600\">\n                      {item.yield}%\n                    </TableCell>\n                  </>\n                )}\n                \n                <TableCell>\n                  <div className=\"flex items-center gap-2\">\n                    <Button variant=\"ghost\" size=\"sm\" data-testid={`button-view-${item.id}`}>\n                      <Eye className=\"h-4 w-4\" />\n                    </Button>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <Edit className=\"h-4 w-4\" />\n                    </Button>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <MoreHorizontal className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </TableCell>\n              </motion.tr>\n            ))}\n          </TableBody>\n        </Table>\n      </CardContent>\n    </Card>\n  )\n\n  const renderGridView = () => (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n      {filteredData.map((item, index) => (\n        <motion.div\n          key={item.id}\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ delay: index * 0.05 }}\n        >\n          <Card className=\"glass-morphism hover-elevate cursor-pointer\" data-testid={`grid-card-${item.id}`}>\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <Avatar className=\"h-10 w-10\">\n                  <AvatarFallback>\n                    {item.name.split(' ').map(n => n[0]).join('')}\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                  <h4 className=\"font-semibold\">{item.name}</h4>\n                  <p className=\"text-sm text-muted-foreground\">\n                    {type === 'users' ? item.email : item.location}\n                  </p>\n                </div>\n                <Badge className={`${getStatusColor(item.status)} border-0 text-xs`}>\n                  {item.status}\n                </Badge>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-muted-foreground\">\n                    {type === 'users' ? 'Total Invested' : 'Property Value'}\n                  </span>\n                  <span className=\"font-medium\">SAR {item.value?.toLocaleString() || '0'}</span>\n                </div>\n                \n                {type === 'properties' && item.yield && (\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm text-muted-foreground\">Yield</span>\n                    <span className=\"font-medium text-green-600\">{item.yield}%</span>\n                  </div>\n                )}\n                \n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-muted-foreground\">AI Score</span>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"font-medium\">{item.aiScore}/100</span>\n                    <div className={`w-2 h-2 rounded-full ${\n                      (item.aiScore || 0) > 80 ? 'bg-green-500' :\n                      (item.aiScore || 0) > 60 ? 'bg-yellow-500' : 'bg-red-500'\n                    }`} />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center gap-2 mt-4 pt-3 border-t border-border/50\">\n                <Button variant=\"ghost\" size=\"sm\" className=\"flex-1\" data-testid={`button-view-grid-${item.id}`}>\n                  <Eye className=\"h-4 w-4 mr-2\" />\n                  View\n                </Button>\n                <Button variant=\"ghost\" size=\"sm\" className=\"flex-1\">\n                  <Edit className=\"h-4 w-4 mr-2\" />\n                  Edit\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      ))}\n    </div>\n  )\n\n  return (\n    <div className=\"space-y-6\" data-testid=\"smart-table-view\">\n      {/* Header */}\n      <Card className=\"glass-morphism border-primary/20\">\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-2xl\">{title}</CardTitle>\n              <CardDescription>{description}</CardDescription>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant={showAiInsights ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => setShowAiInsights(!showAiInsights)}\n                className=\"neon-glow\"\n              >\n                <Brain className=\"h-4 w-4 mr-2\" />\n                AI Insights\n              </Button>\n              <Button variant=\"outline\" size=\"sm\">\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* AI Insights Panel */}\n      {showAiInsights && (\n        <motion.div\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          exit={{ opacity: 0, height: 0 }}\n        >\n          <Card className=\"glass-morphism border-primary/20\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center gap-2 mb-4\">\n                <Zap className=\"h-4 w-4 text-primary\" />\n                <h4 className=\"font-semibold\">AI-Powered Insights</h4>\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {getAiRecommendations().map((rec, index) => (\n                  <div key={index} className=\"p-3 rounded-lg bg-muted/50 hover-elevate\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      {rec.type === 'opportunity' && <TrendingUp className=\"h-4 w-4 text-green-600\" />}\n                      {rec.type === 'risk' && <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />}\n                      {rec.type === 'upsell' && <Star className=\"h-4 w-4 text-purple-600\" />}\n                      {rec.type === 'trending' && <TrendingUp className=\"h-4 w-4 text-blue-600\" />}\n                      {rec.type === 'optimization' && <Zap className=\"h-4 w-4 text-orange-600\" />}\n                      {rec.type === 'market-fit' && <Star className=\"h-4 w-4 text-green-600\" />}\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {Math.round(rec.confidence * 100)}%\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm\">{rec.text}</p>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n      )}\n\n      {/* Filters and Controls */}\n      <Card className=\"glass-morphism\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center gap-4 flex-wrap\">\n            <div className=\"flex items-center gap-2\">\n              <Search className=\"h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder={`Search ${type}...`}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-64\"\n                data-testid=\"input-search\"\n              />\n            </div>\n            \n            <Select value={filterStatus} onValueChange={setFilterStatus}>\n              <SelectTrigger className=\"w-40\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                <SelectValue placeholder=\"Filter by status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">Active</SelectItem>\n                <SelectItem value=\"pending\">Pending</SelectItem>\n                <SelectItem value=\"inactive\">Inactive</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <div className=\"flex items-center gap-2 ml-auto\">\n              <Button\n                variant={viewMode === 'table' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setViewMode('table')}\n                data-testid=\"button-table-view\"\n              >\n                <List className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                variant={viewMode === 'grid' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => setViewMode('grid')}\n                data-testid=\"button-grid-view\"\n              >\n                <Grid3X3 className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Data Display */}\n      {viewMode === 'table' ? renderTableView() : renderGridView()}\n    </div>\n  )\n}","size_bytes":15452},"client/src/components/stat-card.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { LucideIcon } from \"lucide-react\"\n\ninterface StatCardProps {\n  title: string\n  value: string\n  change?: string\n  changeType?: \"positive\" | \"negative\" | \"neutral\"\n  icon: LucideIcon\n}\n\nexport function StatCard({ title, value, change, changeType = \"neutral\", icon: Icon }: StatCardProps) {\n  const changeColor = {\n    positive: \"text-green-600 dark:text-green-400\",\n    negative: \"text-red-600 dark:text-red-400\", \n    neutral: \"text-muted-foreground\"\n  }\n\n  return (\n    <Card \n      className=\"enhanced-card animate-scale-up relative overflow-hidden group\" \n      data-testid={`card-stat-${title.toLowerCase().replace(/\\s+/g, '-')}`}\n    >\n      <div className=\"absolute inset-0 shimmer opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2 relative z-10\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n          {title}\n        </CardTitle>\n        <div className=\"p-2 rounded-lg bg-primary/10 group-hover:bg-primary/20 transition-colors duration-300\">\n          <Icon className=\"h-5 w-5 text-primary animate-pulse-slow\" />\n        </div>\n      </CardHeader>\n      <CardContent className=\"relative z-10\">\n        <div className=\"text-3xl font-bold bg-gradient-to-r from-foreground to-primary/80 bg-clip-text text-transparent\" data-testid={`text-stat-value-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n          {value}\n        </div>\n        {change && (\n          <p className={`text-sm font-medium ${changeColor[changeType]} flex items-center gap-1 mt-2`} data-testid={`text-stat-change-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n            <span className=\"inline-block w-2 h-2 rounded-full bg-current animate-pulse\" />\n            {change}\n          </p>\n        )}\n      </CardContent>\n    </Card>\n  )\n}","size_bytes":1935},"client/src/components/theme-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\"\n\ntype Theme = \"dark\" | \"light\" | \"system\"\n\ntype ThemeProviderProps = {\n  children: React.ReactNode\n  defaultTheme?: Theme\n  storageKey?: string\n}\n\ntype ThemeProviderState = {\n  theme: Theme\n  setTheme: (theme: Theme) => void\n}\n\nconst initialState: ThemeProviderState = {\n  theme: \"system\",\n  setTheme: () => null,\n}\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState)\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\",\n  storageKey = \"vite-ui-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  )\n\n  useEffect(() => {\n    const root = window.document.documentElement\n\n    root.classList.remove(\"light\", \"dark\")\n\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\")\n        .matches\n        ? \"dark\"\n        : \"light\"\n\n      root.classList.add(systemTheme)\n      return\n    }\n\n    root.classList.add(theme)\n  }, [theme])\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme)\n      setTheme(theme)\n    },\n  }\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext)\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\")\n\n  return context\n}","size_bytes":1577},"client/src/components/theme-toggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { useTheme } from \"./theme-provider\"\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme()\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n      data-testid=\"button-theme-toggle\"\n    >\n      <Sun className=\"h-4 w-4 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-4 w-4 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  )\n}","size_bytes":660},"client/src/components/transaction-table.tsx":{"content":"import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Transaction } from \"@shared/schema\"\nimport { format } from \"date-fns\"\n\ninterface TransactionTableProps {\n  transactions: Transaction[]\n  onApprove?: (transactionId: string) => void\n  onReject?: (transactionId: string) => void\n}\n\nexport function TransactionTable({ transactions, onApprove, onReject }: TransactionTableProps) {\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n      case \"rejected\":\n        return \"bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\"\n      default:\n        return \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\"\n    }\n  }\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case \"investment\":\n        return \"bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n      case \"payout\":\n        return \"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\"\n      case \"withdrawal\":\n        return \"bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200\"\n      default:\n        return \"bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200\"\n    }\n  }\n\n  const handleApprove = (transactionId: string) => {\n    console.log('Approve transaction triggered:', transactionId)\n    onApprove?.(transactionId)\n  }\n\n  const handleReject = (transactionId: string) => {\n    console.log('Reject transaction triggered:', transactionId)\n    onReject?.(transactionId)\n  }\n\n  return (\n    <div className=\"rounded-md border\" data-testid=\"table-transactions\">\n      <Table>\n        <TableHeader>\n          <TableRow>\n            <TableHead>Date</TableHead>\n            <TableHead>Type</TableHead>\n            <TableHead>Amount</TableHead>\n            <TableHead>Property</TableHead>\n            <TableHead>Investor</TableHead>\n            <TableHead>Status</TableHead>\n            <TableHead>Actions</TableHead>\n          </TableRow>\n        </TableHeader>\n        <TableBody>\n          {transactions.map((transaction) => (\n            <TableRow key={transaction.id} data-testid={`row-transaction-${transaction.id}`}>\n              <TableCell data-testid={`text-date-${transaction.id}`}>\n                {format(new Date(transaction.createdAt!), 'MMM dd, yyyy')}\n              </TableCell>\n              <TableCell>\n                <Badge \n                  className={getTypeColor(transaction.type)}\n                  data-testid={`badge-type-${transaction.id}`}\n                >\n                  {transaction.type}\n                </Badge>\n              </TableCell>\n              <TableCell className=\"font-mono\" data-testid={`text-amount-${transaction.id}`}>\n                SAR {Number(transaction.amount).toLocaleString()}\n              </TableCell>\n              <TableCell data-testid={`text-property-${transaction.id}`}>\n                {transaction.propertyId ? `Property ${transaction.propertyId.slice(0, 8)}...` : '-'}\n              </TableCell>\n              <TableCell data-testid={`text-investor-${transaction.id}`}>\n                {transaction.investorId ? `User ${transaction.investorId.slice(0, 8)}...` : '-'}\n              </TableCell>\n              <TableCell>\n                <Badge \n                  className={getStatusColor(transaction.status)}\n                  data-testid={`badge-status-${transaction.id}`}\n                >\n                  {transaction.status}\n                </Badge>\n              </TableCell>\n              <TableCell>\n                {transaction.status === \"pending\" && (\n                  <div className=\"flex gap-2\">\n                    <Button \n                      size=\"sm\" \n                      variant=\"default\"\n                      onClick={() => handleApprove(transaction.id)}\n                      data-testid={`button-approve-${transaction.id}`}\n                    >\n                      Approve\n                    </Button>\n                    <Button \n                      size=\"sm\" \n                      variant=\"outline\"\n                      onClick={() => handleReject(transaction.id)}\n                      data-testid={`button-reject-${transaction.id}`}\n                    >\n                      Reject\n                    </Button>\n                  </div>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}","size_bytes":4627},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\"\nimport { \n  Shield, \n  UserCog, \n  Settings, \n  Key,\n  Clock,\n  CheckCircle,\n  AlertTriangle\n} from \"lucide-react\"\nimport { AdminUser } from \"@shared/schema\"\n\nexport default function Admin() {\n  // todo: remove mock functionality\n  const [selectedRole, setSelectedRole] = useState(\"all\")\n\n  const mockAdminUsers: AdminUser[] = [\n    {\n      id: '1',\n      name: 'Omar Al-Mahmoud',\n      email: 'omar.mahmoud@zaron.com',\n      role: 'super_admin',\n      avatar: null,\n      createdAt: new Date('2024-01-01'),\n    },\n    {\n      id: '2',\n      name: 'Sarah Johnson',\n      email: 'sarah.johnson@zaron.com',\n      role: 'kyc_officer',\n      avatar: null,\n      createdAt: new Date('2024-01-15'),\n    },\n    {\n      id: '3',\n      name: 'Ahmed Al-Rashid',\n      email: 'ahmed.rashid@zaron.com',\n      role: 'property_manager',\n      avatar: null,\n      createdAt: new Date('2024-02-01'),\n    },\n    {\n      id: '4',\n      name: 'Fatima Al-Zahra',\n      email: 'fatima.zahra@zaron.com',\n      role: 'financial_analyst',\n      avatar: null,\n      createdAt: new Date('2024-02-10'),\n    },\n    {\n      id: '5',\n      name: 'Mohammad Hassan',\n      email: 'mohammad.hassan@zaron.com',\n      role: 'compliance_officer',\n      avatar: null,\n      createdAt: new Date('2024-02-15'),\n    },\n  ]\n\n  const rolePermissions = {\n    super_admin: {\n      name: 'Super Administrator',\n      color: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200',\n      permissions: ['All platform access', 'User management', 'System configuration', 'Financial operations', 'Security settings'],\n      count: mockAdminUsers.filter(u => u.role === 'super_admin').length\n    },\n    kyc_officer: {\n      name: 'KYC Officer',\n      color: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',\n      permissions: ['Review KYC documents', 'Approve/reject verifications', 'User compliance', 'Document management'],\n      count: mockAdminUsers.filter(u => u.role === 'kyc_officer').length\n    },\n    property_manager: {\n      name: 'Property Manager',\n      color: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',\n      permissions: ['Property listings', 'Investment tracking', 'Performance monitoring', 'Tenant management'],\n      count: mockAdminUsers.filter(u => u.role === 'property_manager').length\n    },\n    financial_analyst: {\n      name: 'Financial Analyst',\n      color: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200',\n      permissions: ['Financial reporting', 'Analytics access', 'Revenue tracking', 'Performance analysis'],\n      count: mockAdminUsers.filter(u => u.role === 'financial_analyst').length\n    },\n    compliance_officer: {\n      name: 'Compliance Officer',\n      color: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200',\n      permissions: ['Regulatory compliance', 'Audit trails', 'Risk assessment', 'Legal documentation'],\n      count: mockAdminUsers.filter(u => u.role === 'compliance_officer').length\n    }\n  }\n\n  const systemActivities = [\n    { action: 'User login', user: 'Sarah Johnson', timestamp: '2 minutes ago', status: 'success' },\n    { action: 'KYC approval', user: 'Ahmed Al-Rashid', timestamp: '15 minutes ago', status: 'success' },\n    { action: 'Property added', user: 'Mohammad Hassan', timestamp: '1 hour ago', status: 'success' },\n    { action: 'Failed login attempt', user: 'Unknown', timestamp: '2 hours ago', status: 'warning' },\n    { action: 'System backup', user: 'System', timestamp: '6 hours ago', status: 'success' },\n  ]\n\n  const filteredUsers = selectedRole === \"all\" \n    ? mockAdminUsers \n    : mockAdminUsers.filter(user => user.role === selectedRole)\n\n  const handleRoleChange = (userId: string, newRole: string) => {\n    console.log('Change role for user:', userId, 'to:', newRole)\n    // In real app, this would update the user's role\n  }\n\n  const handleDeactivateUser = (userId: string) => {\n    console.log('Deactivate user:', userId)\n    // In real app, this would deactivate the admin user\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\" data-testid=\"page-admin\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\" data-testid=\"text-admin-title\">Admin Role Management</h1>\n          <p className=\"text-muted-foreground\">Manage administrator access and permissions</p>\n        </div>\n        <Button data-testid=\"button-add-admin\">\n          <UserCog className=\"h-4 w-4 mr-2\" />\n          Add Administrator\n        </Button>\n      </div>\n\n      {/* Role Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {Object.entries(rolePermissions).map(([roleKey, role]) => (\n          <Card \n            key={roleKey} \n            className={`cursor-pointer hover-elevate ${selectedRole === roleKey ? 'ring-2 ring-primary' : ''}`}\n            onClick={() => setSelectedRole(roleKey)}\n            data-testid={`card-role-${roleKey}`}\n          >\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-base\">{role.name}</CardTitle>\n              <Shield className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between mb-3\">\n                <Badge className={role.color}>\n                  {role.count} user{role.count !== 1 ? 's' : ''}\n                </Badge>\n              </div>\n              <div className=\"space-y-1\">\n                {role.permissions.slice(0, 3).map((permission, index) => (\n                  <div key={index} className=\"text-xs text-muted-foreground flex items-center gap-1\">\n                    <CheckCircle className=\"h-3 w-3 text-green-600\" />\n                    {permission}\n                  </div>\n                ))}\n                {role.permissions.length > 3 && (\n                  <div className=\"text-xs text-muted-foreground\">\n                    +{role.permissions.length - 3} more permissions\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Admin Users List */}\n        <Card data-testid=\"card-admin-users\">\n          <CardHeader>\n            <CardTitle>\n              Administrator Accounts\n              {selectedRole !== \"all\" && (\n                <Badge className=\"ml-2\">\n                  {rolePermissions[selectedRole as keyof typeof rolePermissions]?.name}\n                </Badge>\n              )}\n            </CardTitle>\n            <CardDescription>\n              {selectedRole === \"all\" \n                ? \"All administrative users and their roles\"\n                : `Users with ${rolePermissions[selectedRole as keyof typeof rolePermissions]?.name} role`\n              }\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {filteredUsers.map((user) => (\n                <div key={user.id} className=\"flex items-center justify-between p-3 border rounded-lg\" data-testid={`admin-user-${user.id}`}>\n                  <div className=\"flex items-center gap-3\">\n                    <Avatar>\n                      <AvatarFallback>\n                        {user.name.split(' ').map(n => n[0]).join('').toUpperCase()}\n                      </AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <div className=\"font-medium\">{user.name}</div>\n                      <div className=\"text-sm text-muted-foreground\">{user.email}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Badge className={rolePermissions[user.role as keyof typeof rolePermissions]?.color}>\n                      {rolePermissions[user.role as keyof typeof rolePermissions]?.name}\n                    </Badge>\n                    <Button variant=\"ghost\" size=\"sm\" data-testid={`button-manage-${user.id}`}>\n                      <Settings className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n              {selectedRole !== \"all\" && (\n                <Button \n                  variant=\"outline\" \n                  onClick={() => setSelectedRole(\"all\")}\n                  className=\"w-full\"\n                  data-testid=\"button-show-all-roles\"\n                >\n                  Show All Roles\n                </Button>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Recent Activities */}\n        <Card data-testid=\"card-system-activities\">\n          <CardHeader>\n            <CardTitle>System Activities</CardTitle>\n            <CardDescription>Recent administrative actions and system events</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {systemActivities.map((activity, index) => (\n                <div key={index} className=\"flex items-center justify-between\" data-testid={`activity-${index}`}>\n                  <div className=\"flex items-center gap-3\">\n                    {activity.status === 'success' ? (\n                      <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                    ) : (\n                      <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n                    )}\n                    <div>\n                      <div className=\"font-medium text-sm\">{activity.action}</div>\n                      <div className=\"text-xs text-muted-foreground\">{activity.user}</div>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                    <Clock className=\"h-3 w-3\" />\n                    {activity.timestamp}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* System Security Settings */}\n      <Card data-testid=\"card-security-settings\">\n        <CardHeader>\n          <CardTitle>Security & Access Control</CardTitle>\n          <CardDescription>System-wide security configurations</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <h4 className=\"font-semibold flex items-center gap-2\">\n                <Key className=\"h-4 w-4\" />\n                Authentication Settings\n              </h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span>Two-factor Authentication</span>\n                  <Badge variant=\"outline\" className=\"text-green-600\">Enabled</Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Session Timeout</span>\n                  <Badge variant=\"outline\">8 hours</Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Password Policy</span>\n                  <Badge variant=\"outline\" className=\"text-green-600\">Strong</Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Login Attempts Limit</span>\n                  <Badge variant=\"outline\">5 attempts</Badge>\n                </div>\n              </div>\n            </div>\n            <div className=\"space-y-4\">\n              <h4 className=\"font-semibold flex items-center gap-2\">\n                <Shield className=\"h-4 w-4\" />\n                Access Control\n              </h4>\n              <div className=\"space-y-2 text-sm\">\n                <div className=\"flex items-center justify-between\">\n                  <span>API Rate Limiting</span>\n                  <Badge variant=\"outline\" className=\"text-green-600\">Active</Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>IP Allowlist</span>\n                  <Badge variant=\"outline\">12 addresses</Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Audit Logging</span>\n                  <Badge variant=\"outline\" className=\"text-green-600\">Enabled</Badge>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span>Data Encryption</span>\n                  <Badge variant=\"outline\" className=\"text-green-600\">AES-256</Badge>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-6 pt-4 border-t\">\n            <Button variant=\"outline\" data-testid=\"button-security-settings\">\n              <Settings className=\"h-4 w-4 mr-2\" />\n              Configure Security Settings\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","size_bytes":13357},"client/src/pages/analytics.tsx":{"content":"import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { DashboardChart } from \"@/components/dashboard-chart\"\nimport { StatCard } from \"@/components/stat-card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { \n  TrendingUp, \n  Users, \n  Building2, \n  DollarSign,\n  Download,\n  Calendar\n} from \"lucide-react\"\nimport { useState } from \"react\"\n\nexport default function Analytics() {\n  // todo: remove mock functionality\n  const [dateRange, setDateRange] = useState(\"last_30_days\")\n\n  // Mock data for charts\n  const revenueData = [\n    { name: 'Jan', value: 890000, growth: 12 },\n    { name: 'Feb', value: 920000, growth: 8 },\n    { name: 'Mar', value: 1050000, growth: 15 },\n    { name: 'Apr', value: 980000, growth: -7 },\n    { name: 'May', value: 1120000, growth: 14 },\n    { name: 'Jun', value: 1250000, growth: 12 },\n    { name: 'Jul', value: 1180000, growth: -6 },\n  ]\n\n  const propertyPerformance = [\n    { name: 'Residential', value: 45, count: 12 },\n    { name: 'Commercial', value: 35, count: 8 },\n    { name: 'Retail', value: 15, count: 3 },\n    { name: 'Mixed Use', value: 5, count: 1 },\n  ]\n\n  const userGrowth = [\n    { name: 'Jan', value: 120, active: 890 },\n    { name: 'Feb', value: 150, active: 1040 },\n    { name: 'Mar', value: 180, active: 1220 },\n    { name: 'Apr', value: 200, active: 1420 },\n    { name: 'May', value: 240, active: 1660 },\n    { name: 'Jun', value: 280, active: 1940 },\n    { name: 'Jul', value: 320, active: 2260 },\n  ]\n\n  const investmentTrends = [\n    { name: 'Week 1', investment: 450000, withdrawal: 50000 },\n    { name: 'Week 2', investment: 520000, withdrawal: 75000 },\n    { name: 'Week 3', investment: 480000, withdrawal: 60000 },\n    { name: 'Week 4', investment: 680000, withdrawal: 90000 },\n  ]\n\n  const kycStats = [\n    { name: 'Pending', value: 45 },\n    { name: 'Approved', value: 185 },\n    { name: 'Rejected', value: 23 },\n    { name: 'Under Review', value: 12 },\n  ]\n\n  // Key metrics\n  const totalRevenue = 8570000\n  const monthlyGrowth = 12.5\n  const activeUsers = 2847\n  const userGrowthRate = 15.8\n  const totalProperties = 24\n  const propertyGrowth = 8.3\n  const averageROI = 9.8\n\n  const handleExportReport = () => {\n    console.log('Export analytics report triggered')\n    // In real app, this would export the analytics data\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\" data-testid=\"page-analytics\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\" data-testid=\"text-analytics-title\">Analytics & Reports</h1>\n          <p className=\"text-muted-foreground\">Platform performance insights and detailed analytics</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Select value={dateRange} onValueChange={setDateRange}>\n            <SelectTrigger className=\"w-48\" data-testid=\"select-date-range\">\n              <Calendar className=\"h-4 w-4 mr-2\" />\n              <SelectValue placeholder=\"Select date range\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"last_7_days\">Last 7 days</SelectItem>\n              <SelectItem value=\"last_30_days\">Last 30 days</SelectItem>\n              <SelectItem value=\"last_90_days\">Last 90 days</SelectItem>\n              <SelectItem value=\"last_year\">Last year</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button onClick={handleExportReport} data-testid=\"button-export-report\">\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export Report\n          </Button>\n        </div>\n      </div>\n\n      {/* Key Performance Indicators */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <StatCard\n          title=\"Total Revenue\"\n          value={`SAR ${(totalRevenue / 1000000).toFixed(1)}M`}\n          change={`+${monthlyGrowth}% this month`}\n          changeType=\"positive\"\n          icon={DollarSign}\n        />\n        <StatCard\n          title=\"Active Users\"\n          value={activeUsers.toLocaleString()}\n          change={`+${userGrowthRate}% growth`}\n          changeType=\"positive\"\n          icon={Users}\n        />\n        <StatCard\n          title=\"Total Properties\"\n          value={totalProperties.toString()}\n          change={`+${propertyGrowth}% this quarter`}\n          changeType=\"positive\"\n          icon={Building2}\n        />\n        <StatCard\n          title=\"Average ROI\"\n          value={`${averageROI}%`}\n          change=\"+0.5% from last month\"\n          changeType=\"positive\"\n          icon={TrendingUp}\n        />\n      </div>\n\n      {/* Revenue and Investment Trends */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardChart\n          title=\"Monthly Revenue\"\n          description=\"Platform revenue over the last 7 months\"\n          data={revenueData}\n          type=\"bar\"\n          dataKey=\"value\"\n        />\n        <DashboardChart\n          title=\"User Growth\"\n          description=\"New user registrations trend\"\n          data={userGrowth}\n          type=\"line\"\n          dataKey=\"value\"\n        />\n      </div>\n\n      {/* Investment Analysis */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card data-testid=\"card-property-performance\">\n          <CardHeader>\n            <CardTitle>Property Type Performance</CardTitle>\n            <CardDescription>Investment distribution by property type</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {propertyPerformance.map((item) => (\n                <div key={item.name} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-3 h-3 rounded-full bg-primary\"></div>\n                    <span className=\"font-medium\">{item.name}</span>\n                    <Badge variant=\"outline\">{item.count} properties</Badge>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className=\"font-bold\">{item.value}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-kyc-stats\">\n          <CardHeader>\n            <CardTitle>KYC Status Distribution</CardTitle>\n            <CardDescription>Current KYC verification status breakdown</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {kycStats.map((item) => {\n                const getStatusColor = (status: string) => {\n                  switch (status) {\n                    case 'Approved': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n                    case 'Rejected': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n                    case 'Pending': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n                    default: return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'\n                  }\n                }\n                \n                return (\n                  <div key={item.name} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-3\">\n                      <Badge className={getStatusColor(item.name)}>\n                        {item.name}\n                      </Badge>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"font-bold\">{item.value}</span>\n                      <span className=\"text-sm text-muted-foreground ml-1\">users</span>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Investment vs Withdrawal Trends */}\n      <Card data-testid=\"card-investment-trends\">\n        <CardHeader>\n          <CardTitle>Investment vs Withdrawal Trends</CardTitle>\n          <CardDescription>Weekly comparison of investments and withdrawals</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-6\">\n            {investmentTrends.map((week) => (\n              <div key={week.name} className=\"space-y-2\">\n                <div className=\"flex items-center justify-between text-sm\">\n                  <span className=\"font-medium\">{week.name}</span>\n                  <div className=\"flex gap-4\">\n                    <span className=\"text-green-600\">\n                      +SAR {week.investment.toLocaleString()} invested\n                    </span>\n                    <span className=\"text-red-600\">\n                      -SAR {week.withdrawal.toLocaleString()} withdrawn\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex gap-1 h-2\">\n                  <div \n                    className=\"bg-green-500 rounded\"\n                    style={{ \n                      width: `${(week.investment / (week.investment + week.withdrawal)) * 100}%` \n                    }}\n                  ></div>\n                  <div \n                    className=\"bg-red-500 rounded\"\n                    style={{ \n                      width: `${(week.withdrawal / (week.investment + week.withdrawal)) * 100}%` \n                    }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Performance Summary */}\n      <Card data-testid=\"card-performance-summary\">\n        <CardHeader>\n          <CardTitle>Performance Summary</CardTitle>\n          <CardDescription>Key insights and recommendations</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              <h4 className=\"font-semibold text-green-600\">Positive Trends</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                  User registration increased by 15.8% this month\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                  Revenue growth maintained at 12.5% monthly average\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                  Property portfolio expanded with 2 new listings\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                  KYC approval rate improved to 88%\n                </li>\n              </ul>\n            </div>\n            <div className=\"space-y-4\">\n              <h4 className=\"font-semibold text-yellow-600\">Areas for Improvement</h4>\n              <ul className=\"space-y-2 text-sm\">\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\n                  45 KYC applications still pending review\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\n                  Withdrawal rate increased by 8% last week\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\n                  3 properties show below-average performance\n                </li>\n                <li className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 rounded-full bg-yellow-500\"></div>\n                  Customer support response time needs optimization\n                </li>\n              </ul>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","size_bytes":12268},"client/src/pages/dashboard.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { StatCard } from \"@/components/stat-card\"\nimport { DashboardChart } from \"@/components/dashboard-chart\"\nimport { AiChatWidget } from \"@/components/ai-chat-widget\"\nimport { AiInsightsPanel } from \"@/components/ai-insights-panel\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { \n  Users, \n  Building2, \n  TrendingUp, \n  DollarSign, \n  Clock,\n  CheckCircle,\n  XCircle,\n  Brain,\n  Zap,\n  Target\n} from \"lucide-react\"\nimport { Link } from \"wouter\"\n\nexport default function Dashboard() {\n  // todo: remove mock functionality\n  const [refreshing, setRefreshing] = useState(false)\n\n  const handleRefresh = async () => {\n    setRefreshing(true)\n    console.log('Dashboard refresh triggered')\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    setRefreshing(false)\n  }\n\n  // todo: remove mock functionality\n  const monthlyInvestments = [\n    { name: 'Jan', value: 2400000 },\n    { name: 'Feb', value: 2210000 },\n    { name: 'Mar', value: 2290000 },\n    { name: 'Apr', value: 2000000 },\n    { name: 'May', value: 2181000 },\n    { name: 'Jun', value: 2500000 },\n    { name: 'Jul', value: 2100000 },\n  ]\n\n  const userGrowth = [\n    { name: 'Jan', value: 120 },\n    { name: 'Feb', value: 150 },\n    { name: 'Mar', value: 180 },\n    { name: 'Apr', value: 200 },\n    { name: 'May', value: 240 },\n    { name: 'Jun', value: 280 },\n    { name: 'Jul', value: 320 },\n  ]\n\n  const recentTransactions = [\n    { id: '1', user: 'Ahmed Al-Rashid', property: 'Luxury Apartments', amount: 50000, type: 'investment' },\n    { id: '2', user: 'Sarah Johnson', property: 'Office Tower', amount: 75000, type: 'investment' },\n    { id: '3', user: 'Mohammad Al-Zahra', property: 'Retail Complex', amount: 15000, type: 'withdrawal' },\n  ]\n\n  const pendingKyc = [\n    { id: '1', name: 'Fatima Al-Qasimi', documents: 'National ID, Selfie', status: 'pending' },\n    { id: '2', name: 'Omar Hassan', documents: 'Passport, Income Proof', status: 'pending' },\n    { id: '3', name: 'Layla Mahmoud', documents: 'Iqama, Employment Letter', status: 'review' },\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5 modern-scrollbar\">\n      <div className=\"p-6 space-y-8\" data-testid=\"page-dashboard\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"space-y-2\">\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-foreground via-primary to-primary/70 bg-clip-text text-transparent animate-float\" data-testid=\"text-dashboard-title\">\n              Dashboard\n            </h1>\n            <p className=\"text-lg text-muted-foreground/80\">Welcome to Zaron Admin Panel</p>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n              System is running smoothly\n            </div>\n          </div>\n          <Button \n            onClick={handleRefresh} \n            disabled={refreshing} \n            className=\"neon-glow hover:scale-105 transition-transform duration-300\"\n            data-testid=\"button-refresh-dashboard\"\n          >\n            {refreshing ? \"Refreshing...\" : \"Refresh Data\"}\n          </Button>\n        </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <StatCard\n          title=\"Total Users\"\n          value=\"2,847\"\n          change=\"+12% from last month\"\n          changeType=\"positive\"\n          icon={Users}\n        />\n        <StatCard\n          title=\"Active Properties\"\n          value=\"24\"\n          change=\"+3 new this week\"\n          changeType=\"positive\"\n          icon={Building2}\n        />\n        <StatCard\n          title=\"Total Investments\"\n          value=\"SAR 14.2M\"\n          change=\"+8% from last month\"\n          changeType=\"positive\"\n          icon={TrendingUp}\n        />\n        <StatCard\n          title=\"Monthly Revenue\"\n          value=\"SAR 890K\"\n          change=\"-2% from last month\"\n          changeType=\"negative\"\n          icon={DollarSign}\n        />\n      </div>\n\n      {/* AI Insights Panel */}\n      <AiInsightsPanel />\n\n      {/* Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardChart\n          title=\"Monthly Investments\"\n          description=\"Investment volume over the last 7 months\"\n          data={monthlyInvestments}\n          type=\"bar\"\n          dataKey=\"value\"\n        />\n        <DashboardChart\n          title=\"User Growth\"\n          description=\"New user registrations trend\"\n          data={userGrowth}\n          type=\"line\"\n          dataKey=\"value\"\n        />\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card data-testid=\"card-recent-transactions\">\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-lg\">Recent Transactions</CardTitle>\n              <CardDescription>Latest investment activity</CardDescription>\n            </div>\n            <Link href=\"/transactions\">\n              <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-all-transactions\">\n                View All\n              </Button>\n            </Link>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {recentTransactions.map((transaction) => (\n                <div key={transaction.id} className=\"flex items-center justify-between\" data-testid={`transaction-${transaction.id}`}>\n                  <div>\n                    <p className=\"font-medium\">{transaction.user}</p>\n                    <p className=\"text-sm text-muted-foreground\">{transaction.property}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-mono\">SAR {transaction.amount.toLocaleString()}</p>\n                    <Badge variant={transaction.type === 'investment' ? 'default' : 'secondary'}>\n                      {transaction.type}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-pending-kyc\">\n          <CardHeader className=\"flex flex-row items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-lg\">Pending KYC Reviews</CardTitle>\n              <CardDescription>Documents awaiting verification</CardDescription>\n            </div>\n            <Link href=\"/users\">\n              <Button variant=\"outline\" size=\"sm\" data-testid=\"button-view-all-kyc\">\n                View All\n              </Button>\n            </Link>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {pendingKyc.map((kyc) => (\n                <div key={kyc.id} className=\"flex items-center justify-between\" data-testid={`kyc-${kyc.id}`}>\n                  <div>\n                    <p className=\"font-medium\">{kyc.name}</p>\n                    <p className=\"text-sm text-muted-foreground\">{kyc.documents}</p>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {kyc.status === 'pending' ? (\n                      <Clock className=\"h-4 w-4 text-yellow-600\" />\n                    ) : (\n                      <CheckCircle className=\"h-4 w-4 text-blue-600\" />\n                    )}\n                    <Badge variant={kyc.status === 'pending' ? 'secondary' : 'default'}>\n                      {kyc.status}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* AI Chat Widget */}\n      <AiChatWidget />\n    </div>\n  </div>\n  )\n}","size_bytes":7992},"client/src/pages/documents.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { Search, Filter, Eye, FileText, Download, AlertCircle, CheckCircle, XCircle, Clock, Sparkles, TrendingUp, Building, MapPin, User } from \"lucide-react\"\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\nimport { Investor, KycDocument } from \"@shared/schema\"\n\ninterface KycApplicant extends Investor {\n  documents: KycDocument[]\n  completionPercentage: number\n  riskScore: number\n  aiRecommendation: string\n}\n\nexport default function Documents() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n  const [selectedApplicant, setSelectedApplicant] = useState<KycApplicant | null>(null)\n  const [isViewModalOpen, setIsViewModalOpen] = useState(false)\n  const [isRemarkModalOpen, setIsRemarkModalOpen] = useState(false)\n  const [selectedDocument, setSelectedDocument] = useState<KycDocument | null>(null)\n  const [remarkText, setRemarkText] = useState(\"\")\n\n  // Comprehensive mock KYC applicants data\n  const mockKycApplicants: KycApplicant[] = [\n    {\n      id: '1',\n      name: 'Ahmed Al-Mansouri',\n      firstName: 'Ahmed',\n      lastName: 'Al-Mansouri',\n      email: 'ahmed.mansouri@gmail.com',\n      phone: '+966 50 123 4567',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1985-03-15'),\n      occupation: 'Senior Software Engineer',\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'Al-Malaz District, Riyadh',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'pending',\n      totalInvested: '250000',\n      activeProperties: 2,\n      monthlyIncome: '18500',\n      documentsUploaded: true,\n      applicationProgress: 85,\n      appDownloadedAt: new Date('2024-01-10T08:30:00Z'),\n      kycSubmittedAt: new Date('2024-01-15T14:22:00Z'),\n      aiRiskScore: 25,\n      preferredLanguage: 'en',\n      createdAt: new Date('2024-01-10'),\n      updatedAt: new Date('2024-01-15'),\n      completionPercentage: 85,\n      riskScore: 25,\n      aiRecommendation: 'High-quality candidate with stable income and good document quality. Recommended for approval.',\n      documents: [\n        {\n          id: 'doc1',\n          investorId: '1',\n          documentType: 'national_id',\n          documentUrl: '/documents/ahmed_national_id.pdf',\n          status: 'approved',\n          reviewNotes: null,\n          reviewedBy: 'admin1',\n          isAuthentic: true,\n          confidenceScore: 95,\n          extractedData: JSON.stringify({ name: 'Ahmed Al-Mansouri', id_number: '1234567890', expiry: '2029-03-15' }),\n          uploadedAt: new Date('2024-01-12T10:00:00Z'),\n          reviewedAt: new Date('2024-01-13T09:15:00Z'),\n        },\n        {\n          id: 'doc2',\n          investorId: '1',\n          documentType: 'selfie',\n          documentUrl: '/documents/ahmed_selfie.jpg',\n          status: 'pending',\n          reviewNotes: null,\n          reviewedBy: null,\n          isAuthentic: null,\n          confidenceScore: null,\n          extractedData: null,\n          uploadedAt: new Date('2024-01-15T14:22:00Z'),\n          reviewedAt: null,\n        }\n      ]\n    },\n    {\n      id: '2',\n      name: 'Fatima Al-Zahra',\n      firstName: 'Fatima',\n      lastName: 'Al-Zahra',\n      email: 'fatima.zahra@hotmail.com',\n      phone: '+966 55 987 6543',\n      salutation: 'Mrs',\n      gender: 'female',\n      dateOfBirth: new Date('1990-07-22'),\n      occupation: 'Marketing Manager',\n      city: 'Jeddah',\n      country: 'Saudi Arabia',\n      address: 'Al-Hamra District, Jeddah',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b5b0c8d1?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '180000',\n      activeProperties: 1,\n      monthlyIncome: '15200',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-01-05T12:15:00Z'),\n      kycSubmittedAt: new Date('2024-01-08T16:45:00Z'),\n      aiRiskScore: 15,\n      preferredLanguage: 'ar',\n      createdAt: new Date('2024-01-05'),\n      updatedAt: new Date('2024-01-18'),\n      completionPercentage: 100,\n      riskScore: 15,\n      aiRecommendation: 'Excellent candidate with comprehensive documentation and low risk profile. Top-tier investor.',\n      documents: [\n        {\n          id: 'doc3',\n          investorId: '2',\n          documentType: 'national_id',\n          documentUrl: '/documents/fatima_national_id.pdf',\n          status: 'approved',\n          reviewNotes: 'All information verified successfully',\n          reviewedBy: 'admin2',\n          isAuthentic: true,\n          confidenceScore: 98,\n          extractedData: JSON.stringify({ name: 'Fatima Al-Zahra', id_number: '0987654321', expiry: '2028-07-22' }),\n          uploadedAt: new Date('2024-01-06T11:30:00Z'),\n          reviewedAt: new Date('2024-01-07T14:20:00Z'),\n        },\n        {\n          id: 'doc4',\n          investorId: '2',\n          documentType: 'selfie',\n          documentUrl: '/documents/fatima_selfie.jpg',\n          status: 'approved',\n          reviewNotes: 'Clear photo, face matches ID',\n          reviewedBy: 'admin2',\n          isAuthentic: true,\n          confidenceScore: 92,\n          extractedData: null,\n          uploadedAt: new Date('2024-01-06T11:35:00Z'),\n          reviewedAt: new Date('2024-01-07T14:25:00Z'),\n        }\n      ]\n    },\n    {\n      id: '3',\n      name: 'Omar Hassan',\n      firstName: 'Omar',\n      lastName: 'Hassan',\n      email: 'omar.hassan@gmail.com',\n      phone: '+966 56 456 7890',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1982-11-08'),\n      occupation: 'Business Consultant',\n      city: 'Dammam',\n      country: 'Saudi Arabia',\n      address: 'Al-Faisaliyyah, Dammam',\n      nationality: 'Egypt',\n      profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'rejected',\n      totalInvested: '0',\n      activeProperties: 0,\n      monthlyIncome: '22000',\n      documentsUploaded: true,\n      applicationProgress: 60,\n      appDownloadedAt: new Date('2024-01-12T09:20:00Z'),\n      kycSubmittedAt: new Date('2024-01-18T11:10:00Z'),\n      aiRiskScore: 65,\n      preferredLanguage: 'en',\n      createdAt: new Date('2024-01-12'),\n      updatedAt: new Date('2024-01-19'),\n      completionPercentage: 60,\n      riskScore: 65,\n      aiRecommendation: 'Document quality issues detected. Recommend requesting clearer documents before approval.',\n      documents: [\n        {\n          id: 'doc5',\n          investorId: '3',\n          documentType: 'passport',\n          documentUrl: '/documents/omar_passport.pdf',\n          status: 'rejected',\n          reviewNotes: 'Document quality is poor. Please provide a clearer scan of your passport.',\n          reviewedBy: 'admin1',\n          isAuthentic: false,\n          confidenceScore: 45,\n          extractedData: null,\n          uploadedAt: new Date('2024-01-18T11:10:00Z'),\n          reviewedAt: new Date('2024-01-19T10:30:00Z'),\n        }\n      ]\n    },\n    {\n      id: '4',\n      name: 'Layla Al-Qasimi',\n      firstName: 'Layla',\n      lastName: 'Al-Qasimi',\n      email: 'layla.qasimi@outlook.com',\n      phone: '+966 54 789 0123',\n      salutation: 'Ms',\n      gender: 'female',\n      dateOfBirth: new Date('1993-05-12'),\n      occupation: 'Financial Analyst',\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'King Fahd District, Riyadh',\n      nationality: 'UAE',\n      profilePicture: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'under_review',\n      totalInvested: '0',\n      activeProperties: 0,\n      monthlyIncome: '16800',\n      documentsUploaded: true,\n      applicationProgress: 75,\n      appDownloadedAt: new Date('2024-01-14T15:45:00Z'),\n      kycSubmittedAt: new Date('2024-01-20T13:30:00Z'),\n      aiRiskScore: 30,\n      preferredLanguage: 'en',\n      createdAt: new Date('2024-01-14'),\n      updatedAt: new Date('2024-01-20'),\n      completionPercentage: 75,\n      riskScore: 30,\n      aiRecommendation: 'Strong professional background in finance. Documents pending authentication verification.',\n      documents: [\n        {\n          id: 'doc6',\n          investorId: '4',\n          documentType: 'national_id',\n          documentUrl: '/documents/layla_national_id.pdf',\n          status: 'under_review',\n          reviewNotes: null,\n          reviewedBy: null,\n          isAuthentic: null,\n          confidenceScore: null,\n          extractedData: null,\n          uploadedAt: new Date('2024-01-20T13:30:00Z'),\n          reviewedAt: null,\n        },\n        {\n          id: 'doc7',\n          investorId: '4',\n          documentType: 'employment_letter',\n          documentUrl: '/documents/layla_employment.pdf',\n          status: 'pending',\n          reviewNotes: null,\n          reviewedBy: null,\n          isAuthentic: null,\n          confidenceScore: null,\n          extractedData: null,\n          uploadedAt: new Date('2024-01-20T13:35:00Z'),\n          reviewedAt: null,\n        }\n      ]\n    },\n    {\n      id: '5',\n      name: 'Khalid Al-Mutairi',\n      firstName: 'Khalid',\n      lastName: 'Al-Mutairi',\n      email: 'khalid.mutairi@gmail.com',\n      phone: '+966 53 345 6789',\n      salutation: 'Dr',\n      gender: 'male',\n      dateOfBirth: new Date('1979-09-30'),\n      occupation: 'Medical Doctor',\n      city: 'Mecca',\n      country: 'Saudi Arabia',\n      address: 'Al-Aziziyyah, Mecca',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'pending',\n      totalInvested: '0',\n      activeProperties: 0,\n      monthlyIncome: '35000',\n      documentsUploaded: true,\n      applicationProgress: 90,\n      appDownloadedAt: new Date('2024-01-08T07:20:00Z'),\n      kycSubmittedAt: new Date('2024-01-16T12:45:00Z'),\n      aiRiskScore: 12,\n      preferredLanguage: 'ar',\n      createdAt: new Date('2024-01-08'),\n      updatedAt: new Date('2024-01-16'),\n      completionPercentage: 90,\n      riskScore: 12,\n      aiRecommendation: 'Exceptional candidate with high income and professional credentials. Priority for approval.',\n      documents: [\n        {\n          id: 'doc8',\n          investorId: '5',\n          documentType: 'national_id',\n          documentUrl: '/documents/khalid_national_id.pdf',\n          status: 'approved',\n          reviewNotes: 'Document verified successfully',\n          reviewedBy: 'admin2',\n          isAuthentic: true,\n          confidenceScore: 97,\n          extractedData: JSON.stringify({ name: 'Khalid Al-Mutairi', id_number: '1122334455', expiry: '2027-09-30' }),\n          uploadedAt: new Date('2024-01-16T12:45:00Z'),\n          reviewedAt: new Date('2024-01-17T09:10:00Z'),\n        },\n        {\n          id: 'doc9',\n          investorId: '5',\n          documentType: 'proof_of_income',\n          documentUrl: '/documents/khalid_income.pdf',\n          status: 'pending',\n          reviewNotes: null,\n          reviewedBy: null,\n          isAuthentic: null,\n          confidenceScore: null,\n          extractedData: null,\n          uploadedAt: new Date('2024-01-16T12:50:00Z'),\n          reviewedAt: null,\n        }\n      ]\n    }\n  ]\n\n  const filteredApplicants = mockKycApplicants.filter(applicant => {\n    const matchesSearch = applicant.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         applicant.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (applicant.occupation || '').toLowerCase().includes(searchTerm.toLowerCase())\n    const matchesStatus = statusFilter === \"all\" || applicant.kycStatus === statusFilter\n    return matchesSearch && matchesStatus\n  })\n\n  const pendingKycCount = mockKycApplicants.filter(a => a.kycStatus === 'pending' || a.kycStatus === 'under_review').length\n\n  // AI-powered top profiles based on occupation and risk score\n  const topProfiles = mockKycApplicants\n    .sort((a, b) => {\n      // Prioritize by low risk score and high income\n      const aScore = (100 - a.riskScore) * 0.7 + (parseFloat(a.monthlyIncome || '0') / 1000) * 0.3\n      const bScore = (100 - b.riskScore) * 0.7 + (parseFloat(b.monthlyIncome || '0') / 1000) * 0.3\n      return bScore - aScore\n    })\n    .slice(0, 3)\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case 'approved': return 'default'\n      case 'pending': return 'secondary'\n      case 'under_review': return 'outline'\n      case 'rejected': return 'destructive'\n      default: return 'outline'\n    }\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'approved': return <CheckCircle className=\"h-4 w-4 text-green-600\" />\n      case 'pending': return <Clock className=\"h-4 w-4 text-yellow-600\" />\n      case 'under_review': return <AlertCircle className=\"h-4 w-4 text-blue-600\" />\n      case 'rejected': return <XCircle className=\"h-4 w-4 text-red-600\" />\n      default: return <Clock className=\"h-4 w-4\" />\n    }\n  }\n\n  const formatDate = (date: Date | null) => {\n    if (!date) return 'N/A'\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    }).format(date)\n  }\n\n  const handleViewApplicant = (applicant: KycApplicant) => {\n    setSelectedApplicant(applicant)\n    setIsViewModalOpen(true)\n  }\n\n  const handleAddRemark = (document: KycDocument) => {\n    setSelectedDocument(document)\n    setRemarkText(document.reviewNotes || '')\n    setIsRemarkModalOpen(true)\n  }\n\n  const handleApproveDocument = (documentId: string) => {\n    console.log('Approve document:', documentId)\n    // In real app, this would update document status\n  }\n\n  const handleRejectDocument = (documentId: string) => {\n    console.log('Reject document:', documentId)\n    // In real app, this would update document status\n  }\n\n  const handleSubmitRemark = () => {\n    console.log('Submit remark for document:', selectedDocument?.id, 'Remark:', remarkText)\n    setIsRemarkModalOpen(false)\n    setRemarkText('')\n    setSelectedDocument(null)\n  }\n\n  return (\n    <TooltipProvider>\n      <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5 modern-scrollbar\">\n        <div className=\"p-6 space-y-8\" data-testid=\"page-documents\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center gap-4\">\n                <h1 className=\"text-4xl font-bold bg-gradient-to-r from-foreground via-primary to-primary/70 bg-clip-text text-transparent animate-float\" data-testid=\"text-documents-title\">\n                  KYC Management\n                </h1>\n                {pendingKycCount > 0 && (\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <div className=\"relative\">\n                        <div className=\"w-8 h-8 bg-red-500 rounded-full flex items-center justify-center text-white text-sm font-bold animate-pulse\">\n                          {pendingKycCount}\n                        </div>\n                        <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-red-600 rounded-full animate-ping\" />\n                      </div>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>{pendingKycCount} KYC applications pending review</p>\n                    </TooltipContent>\n                  </Tooltip>\n                )}\n              </div>\n              <p className=\"text-lg text-muted-foreground/80\">\n                Review KYC applications and document verification with AI-powered insights\n              </p>\n              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n                {mockKycApplicants.length} total applicants • {mockKycApplicants.filter(a => a.kycStatus === 'approved').length} approved • {pendingKycCount} pending review\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button variant=\"outline\" data-testid=\"button-export-kyc\">\n                <Download className=\"h-4 w-4 mr-2\" />\n                Export Report\n              </Button>\n            </div>\n          </div>\n\n          {/* AI Insights Panel */}\n          <Card className=\"glass-morphism border-primary/20\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Sparkles className=\"h-5 w-5 text-primary\" />\n                AI-Powered Top Profiles\n              </CardTitle>\n              <CardDescription>\n                Recommended applicants based on professional credentials, risk assessment, and income analysis\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {topProfiles.map((profile, index) => (\n                  <div\n                    key={profile.id}\n                    className=\"p-4 rounded-lg border bg-card/50 hover-elevate cursor-pointer\"\n                    onClick={() => handleViewApplicant(profile)}\n                  >\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <div className=\"relative\">\n                        <Avatar className=\"h-10 w-10\">\n                          <AvatarImage src={profile.profilePicture || undefined} alt={profile.name} />\n                          <AvatarFallback>{profile.firstName?.[0]}{profile.lastName?.[0]}</AvatarFallback>\n                        </Avatar>\n                        <div className=\"absolute -top-1 -right-1 w-5 h-5 bg-primary rounded-full flex items-center justify-center text-white text-xs font-bold\">\n                          {index + 1}\n                        </div>\n                      </div>\n                      <div>\n                        <h4 className=\"font-semibold\">{profile.name}</h4>\n                        <p className=\"text-sm text-muted-foreground\">{profile.occupation}</p>\n                      </div>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span>Risk Score</span>\n                        <Badge variant={profile.riskScore < 30 ? 'default' : profile.riskScore < 50 ? 'secondary' : 'destructive'}>\n                          {profile.riskScore}/100\n                        </Badge>\n                      </div>\n                      <div className=\"flex items-center justify-between text-sm\">\n                        <span>Income</span>\n                        <span className=\"font-medium\">SAR {parseFloat(profile.monthlyIncome || '0').toLocaleString()}/mo</span>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">{profile.aiRecommendation}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Summary Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n            <Card className=\"glass-morphism\" data-testid=\"card-total-applicants\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                  Total Applicants\n                </CardTitle>\n                <User className=\"h-4 w-4 text-muted-foreground\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {mockKycApplicants.length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  KYC applications submitted\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"glass-morphism\" data-testid=\"card-pending-review\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                  Pending Review\n                </CardTitle>\n                <Clock className=\"h-4 w-4 text-yellow-600\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-yellow-600\">\n                  {pendingKycCount}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Awaiting verification\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"glass-morphism\" data-testid=\"card-approved\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                  Approved\n                </CardTitle>\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-green-600\">\n                  {mockKycApplicants.filter(a => a.kycStatus === 'approved').length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Successfully verified\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"glass-morphism\" data-testid=\"card-rejected\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                  Rejected\n                </CardTitle>\n                <XCircle className=\"h-4 w-4 text-red-600\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold text-red-600\">\n                  {mockKycApplicants.filter(a => a.kycStatus === 'rejected').length}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  Need resubmission\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Search and Filter */}\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle>Search & Filter</CardTitle>\n              <CardDescription>Find KYC applicants by name, email, occupation, or status</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex gap-4\">\n                <div className=\"relative flex-1\">\n                  <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search by name, email, or occupation...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-9\"\n                    data-testid=\"input-search-applicants\"\n                  />\n                </div>\n                <Select value={statusFilter} onValueChange={setStatusFilter}>\n                  <SelectTrigger className=\"w-48\" data-testid=\"select-status-filter\">\n                    <Filter className=\"h-4 w-4 mr-2\" />\n                    <SelectValue placeholder=\"Filter by status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Status</SelectItem>\n                    <SelectItem value=\"pending\">Pending</SelectItem>\n                    <SelectItem value=\"under_review\">Under Review</SelectItem>\n                    <SelectItem value=\"approved\">Approved</SelectItem>\n                    <SelectItem value=\"rejected\">Rejected</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* KYC Applicants Table */}\n          <Card className=\"glass-morphism\">\n            <CardHeader>\n              <CardTitle>\n                KYC Applicants ({filteredApplicants.length} applicants)\n              </CardTitle>\n              <CardDescription>\n                Review and manage KYC applications with document verification\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {filteredApplicants.map((applicant) => (\n                  <div\n                    key={applicant.id}\n                    className=\"flex items-center justify-between p-4 rounded-lg border bg-card hover-elevate\"\n                    data-testid={`applicant-row-${applicant.id}`}\n                  >\n                    <div className=\"flex items-center space-x-4\">\n                      <Avatar className=\"h-12 w-12\">\n                        <AvatarImage src={applicant.profilePicture || undefined} alt={applicant.name} />\n                        <AvatarFallback>\n                          {applicant.firstName?.[0]}{applicant.lastName?.[0]}\n                        </AvatarFallback>\n                      </Avatar>\n                      \n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          <h3 className=\"font-semibold\">{applicant.name}</h3>\n                          <Badge variant={getStatusBadgeVariant(applicant.kycStatus)}>\n                            {applicant.kycStatus.replace('_', ' ').toUpperCase()}\n                          </Badge>\n                          {applicant.riskScore < 30 && (\n                            <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\n                              <TrendingUp className=\"h-3 w-3 mr-1\" />\n                              TOP CANDIDATE\n                            </Badge>\n                          )}\n                        </div>\n                        <p className=\"text-sm text-muted-foreground\">{applicant.email}</p>\n                        <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                          <span className=\"flex items-center gap-1\">\n                            <Building className=\"h-3 w-3\" />\n                            {applicant.occupation}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <MapPin className=\"h-3 w-3\" />\n                            {applicant.city}\n                          </span>\n                          <span>Risk Score: {applicant.riskScore}/100</span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-xs text-muted-foreground\">Completion:</span>\n                          <Progress value={applicant.completionPercentage} className=\"w-24 h-2\" />\n                          <span className=\"text-xs text-muted-foreground\">{applicant.completionPercentage}%</span>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"text-right space-y-1\">\n                        <div className=\"text-sm\">\n                          Documents: {applicant.documents.length}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground\">\n                          Submitted: {formatDate(applicant.kycSubmittedAt).split(',')[0]}\n                        </div>\n                      </div>\n                      \n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => handleViewApplicant(applicant)}\n                        data-testid={`button-view-${applicant.id}`}\n                      >\n                        <Eye className=\"h-4 w-4 mr-2\" />\n                        View\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {filteredApplicants.length === 0 && (\n                <div className=\"text-center py-12\">\n                  <p className=\"text-muted-foreground mb-4\">No KYC applicants found matching your criteria</p>\n                  <Button variant=\"outline\" onClick={() => {\n                    setSearchTerm(\"\")\n                    setStatusFilter(\"all\")\n                  }} data-testid=\"button-clear-filters\">\n                    Clear Filters\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Detailed View Modal */}\n          <Dialog open={isViewModalOpen} onOpenChange={setIsViewModalOpen}>\n            <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n              <DialogHeader>\n                <DialogTitle className=\"flex items-center gap-2\">\n                  <User className=\"h-5 w-5\" />\n                  KYC Application Details\n                </DialogTitle>\n                <DialogDescription>\n                  Complete applicant information and document verification status\n                </DialogDescription>\n              </DialogHeader>\n              \n              {selectedApplicant && (\n                <div className=\"space-y-6\">\n                  {/* Applicant Header */}\n                  <div className=\"flex items-start gap-6 p-4 bg-card/50 rounded-lg\">\n                    <Avatar className=\"h-20 w-20\">\n                      <AvatarImage src={selectedApplicant.profilePicture || undefined} alt={selectedApplicant.name} />\n                      <AvatarFallback className=\"text-2xl\">\n                        {selectedApplicant.firstName?.[0]}{selectedApplicant.lastName?.[0]}\n                      </AvatarFallback>\n                    </Avatar>\n                    \n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <h2 className=\"text-2xl font-bold\">{selectedApplicant.salutation} {selectedApplicant.name}</h2>\n                        <Badge variant={getStatusBadgeVariant(selectedApplicant.kycStatus)}>\n                          {getStatusIcon(selectedApplicant.kycStatus)}\n                          {selectedApplicant.kycStatus.replace('_', ' ').toUpperCase()}\n                        </Badge>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                        <div><strong>Email:</strong> {selectedApplicant.email}</div>\n                        <div><strong>Phone:</strong> {selectedApplicant.phone}</div>\n                        <div><strong>Gender:</strong> {selectedApplicant.gender}</div>\n                        <div><strong>Nationality:</strong> {selectedApplicant.nationality}</div>\n                        <div><strong>City:</strong> {selectedApplicant.city}</div>\n                        <div><strong>Occupation:</strong> {selectedApplicant.occupation}</div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right space-y-2\">\n                      <div className=\"text-2xl font-bold text-primary\">\n                        {selectedApplicant.riskScore}/100\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Risk Score</div>\n                      <div className=\"text-lg font-semibold\">\n                        SAR {parseFloat(selectedApplicant.monthlyIncome || '0').toLocaleString()}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Monthly Income</div>\n                    </div>\n                  </div>\n\n                  {/* Timeline */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    <Card>\n                      <CardContent className=\"p-4 text-center\">\n                        <div className=\"text-lg font-semibold\">App Downloaded</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {formatDate(selectedApplicant.appDownloadedAt)}\n                        </div>\n                      </CardContent>\n                    </Card>\n                    <Card>\n                      <CardContent className=\"p-4 text-center\">\n                        <div className=\"text-lg font-semibold\">KYC Submitted</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {formatDate(selectedApplicant.kycSubmittedAt)}\n                        </div>\n                      </CardContent>\n                    </Card>\n                    <Card>\n                      <CardContent className=\"p-4 text-center\">\n                        <div className=\"text-lg font-semibold\">Completion</div>\n                        <div className=\"flex items-center justify-center gap-2 mt-2\">\n                          <Progress value={selectedApplicant.completionPercentage} className=\"w-16 h-2\" />\n                          <span className=\"text-sm\">{selectedApplicant.completionPercentage}%</span>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  {/* AI Recommendation */}\n                  <Card className=\"border-primary/20\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Sparkles className=\"h-4 w-4 text-primary\" />\n                        AI Risk Assessment & Recommendation\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-sm\">{selectedApplicant.aiRecommendation}</p>\n                    </CardContent>\n                  </Card>\n\n                  {/* Documents */}\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <FileText className=\"h-4 w-4\" />\n                        Submitted Documents ({selectedApplicant.documents.length})\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        {selectedApplicant.documents.map((document) => (\n                          <div\n                            key={document.id}\n                            className=\"flex items-center justify-between p-3 rounded-lg border bg-card/30\"\n                          >\n                            <div className=\"flex items-center gap-3\">\n                              {getStatusIcon(document.status)}\n                              <div>\n                                <div className=\"font-medium\">\n                                  {document.documentType.replace('_', ' ').toUpperCase()}\n                                </div>\n                                <div className=\"text-sm text-muted-foreground\">\n                                  Uploaded: {formatDate(document.uploadedAt)}\n                                </div>\n                                {document.isAuthentic !== null && (\n                                  <div className=\"flex items-center gap-2 text-sm\">\n                                    {document.isAuthentic ? (\n                                      <Badge variant=\"default\" className=\"text-xs\">\n                                        <CheckCircle className=\"h-3 w-3 mr-1\" />\n                                        Authentic ({document.confidenceScore}%)\n                                      </Badge>\n                                    ) : (\n                                      <Badge variant=\"destructive\" className=\"text-xs\">\n                                        <XCircle className=\"h-3 w-3 mr-1\" />\n                                        Suspicious ({document.confidenceScore}%)\n                                      </Badge>\n                                    )}\n                                  </div>\n                                )}\n                                {document.reviewNotes && (\n                                  <p className=\"text-xs text-muted-foreground mt-1\">\n                                    Note: {document.reviewNotes}\n                                  </p>\n                                )}\n                              </div>\n                            </div>\n                            \n                            <div className=\"flex items-center gap-2\">\n                              <Badge variant={getStatusBadgeVariant(document.status)}>\n                                {document.status.replace('_', ' ').toUpperCase()}\n                              </Badge>\n                              \n                              <DropdownMenu>\n                                <DropdownMenuTrigger asChild>\n                                  <Button variant=\"outline\" size=\"sm\">\n                                    Actions\n                                  </Button>\n                                </DropdownMenuTrigger>\n                                <DropdownMenuContent>\n                                  <DropdownMenuItem onClick={() => console.log('View document:', document.id)}>\n                                    <Eye className=\"h-4 w-4 mr-2\" />\n                                    View Document\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem onClick={() => handleAddRemark(document)}>\n                                    <FileText className=\"h-4 w-4 mr-2\" />\n                                    Add Remark\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem onClick={() => handleApproveDocument(document.id)}>\n                                    <CheckCircle className=\"h-4 w-4 mr-2\" />\n                                    Approve\n                                  </DropdownMenuItem>\n                                  <DropdownMenuItem \n                                    onClick={() => handleRejectDocument(document.id)}\n                                    className=\"text-destructive\"\n                                  >\n                                    <XCircle className=\"h-4 w-4 mr-2\" />\n                                    Reject\n                                  </DropdownMenuItem>\n                                </DropdownMenuContent>\n                              </DropdownMenu>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              )}\n            </DialogContent>\n          </Dialog>\n\n          {/* Remark Modal */}\n          <Dialog open={isRemarkModalOpen} onOpenChange={setIsRemarkModalOpen}>\n            <DialogContent>\n              <DialogHeader>\n                <DialogTitle>Add Review Remark</DialogTitle>\n                <DialogDescription>\n                  Add notes for document review or resubmission requirements\n                </DialogDescription>\n              </DialogHeader>\n              <div className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"remark\">Review Notes</Label>\n                  <Textarea\n                    id=\"remark\"\n                    placeholder=\"Enter your review notes or resubmission requirements...\"\n                    value={remarkText}\n                    onChange={(e) => setRemarkText(e.target.value)}\n                    rows={4}\n                  />\n                </div>\n              </div>\n              <DialogFooter>\n                <Button variant=\"outline\" onClick={() => setIsRemarkModalOpen(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={handleSubmitRemark}>\n                  Save Remark\n                </Button>\n              </DialogFooter>\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n    </TooltipProvider>\n  )\n}","size_bytes":41231},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/notifications.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { NotificationCard } from \"@/components/notification-card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Plus, Send, Bookmark } from \"lucide-react\"\nimport { Notification } from \"@shared/schema\"\nimport { useToast } from \"@/hooks/use-toast\"\n\nexport default function Notifications() {\n  // todo: remove mock functionality\n  const [showCreateForm, setShowCreateForm] = useState(false)\n  const [newNotification, setNewNotification] = useState({\n    title: '',\n    message: '',\n    type: 'info'\n  })\n\n  const { toast } = useToast()\n\n  const mockNotifications: Notification[] = [\n    {\n      id: '1',\n      title: 'New Property Added',\n      message: 'A new luxury apartment complex has been added to the platform and is now available for investment.',\n      type: 'info',\n      isRead: false,\n      createdAt: new Date('2024-01-15T10:30:00'),\n    },\n    {\n      id: '2',\n      title: 'KYC Approved',\n      message: 'Ahmed Al-Rashid\\'s KYC verification has been successfully approved and they can now start investing.',\n      type: 'success',\n      isRead: false,\n      createdAt: new Date('2024-01-14T15:45:00'),\n    },\n    {\n      id: '3',\n      title: 'Payment Failed',\n      message: 'Investment payment for Property #2847 failed due to insufficient funds. Please review the transaction.',\n      type: 'error',\n      isRead: true,\n      createdAt: new Date('2024-01-13T09:15:00'),\n    },\n    {\n      id: '4',\n      title: 'Document Review Required',\n      message: 'Multiple KYC documents are pending review. Please check the Users & KYC section.',\n      type: 'warning',\n      isRead: false,\n      createdAt: new Date('2024-01-12T14:20:00'),\n    },\n    {\n      id: '5',\n      title: 'Monthly Payout Processed',\n      message: 'Monthly rental payouts have been successfully processed for all active investments.',\n      type: 'success',\n      isRead: true,\n      createdAt: new Date('2024-01-11T11:00:00'),\n    },\n    {\n      id: '6',\n      title: 'New User Registration',\n      message: 'Sarah Johnson has successfully registered and completed the onboarding process.',\n      type: 'info',\n      isRead: false,\n      createdAt: new Date('2024-01-10T16:30:00'),\n    },\n  ]\n\n  const unreadCount = mockNotifications.filter(n => !n.isRead).length\n\n  const handleMarkAsRead = (id: string) => {\n    console.log('Marked as read:', id)\n    // In real app, this would update the notification status\n  }\n\n  const handleDelete = (id: string) => {\n    console.log('Deleted notification:', id)\n    // In real app, this would delete the notification\n  }\n\n  const handleMarkAllAsRead = () => {\n    console.log('Mark all as read triggered')\n    toast({\n      title: \"All Notifications Marked as Read\",\n      description: \"All notifications have been marked as read.\",\n    })\n  }\n\n  const handleCreateNotification = (e: React.FormEvent) => {\n    e.preventDefault()\n    console.log('Create notification:', newNotification)\n    \n    toast({\n      title: \"Notification Sent\",\n      description: \"Your notification has been sent to all users.\",\n    })\n    \n    setNewNotification({ title: '', message: '', type: 'info' })\n    setShowCreateForm(false)\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\" data-testid=\"page-notifications\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\" data-testid=\"text-notifications-title\">\n            Notifications\n            {unreadCount > 0 && (\n              <Badge variant=\"destructive\" className=\"ml-2\">\n                {unreadCount} unread\n              </Badge>\n            )}\n          </h1>\n          <p className=\"text-muted-foreground\">Manage system notifications and send announcements</p>\n        </div>\n        <div className=\"flex gap-2\">\n          {unreadCount > 0 && (\n            <Button variant=\"outline\" onClick={handleMarkAllAsRead} data-testid=\"button-mark-all-read\">\n              <Bookmark className=\"h-4 w-4 mr-2\" />\n              Mark All Read\n            </Button>\n          )}\n          <Button onClick={() => setShowCreateForm(!showCreateForm)} data-testid=\"button-create-notification\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Create Notification\n          </Button>\n        </div>\n      </div>\n\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n        <Card data-testid=\"card-total-notifications\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n              Total Notifications\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {mockNotifications.length}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              All time\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-unread-notifications\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n              Unread\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {unreadCount}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Require attention\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-system-alerts\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n              System Alerts\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600\">\n              {mockNotifications.filter(n => n.type === 'error').length}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Critical issues\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-warnings\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n              Warnings\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-600\">\n              {mockNotifications.filter(n => n.type === 'warning').length}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Need review\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Create Notification Form */}\n      {showCreateForm && (\n        <Card data-testid=\"card-create-notification\">\n          <CardHeader>\n            <CardTitle>Create New Notification</CardTitle>\n            <CardDescription>Send a notification to all platform users</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form onSubmit={handleCreateNotification} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"title\" className=\"text-sm font-medium\">Title</label>\n                  <Input\n                    id=\"title\"\n                    value={newNotification.title}\n                    onChange={(e) => setNewNotification(prev => ({ ...prev, title: e.target.value }))}\n                    placeholder=\"Enter notification title\"\n                    required\n                    data-testid=\"input-notification-title\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"type\" className=\"text-sm font-medium\">Type</label>\n                  <Select value={newNotification.type} onValueChange={(value) => setNewNotification(prev => ({ ...prev, type: value }))}>\n                    <SelectTrigger data-testid=\"select-notification-type\">\n                      <SelectValue placeholder=\"Select type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"info\">Info</SelectItem>\n                      <SelectItem value=\"success\">Success</SelectItem>\n                      <SelectItem value=\"warning\">Warning</SelectItem>\n                      <SelectItem value=\"error\">Error</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <label htmlFor=\"message\" className=\"text-sm font-medium\">Message</label>\n                <Textarea\n                  id=\"message\"\n                  value={newNotification.message}\n                  onChange={(e) => setNewNotification(prev => ({ ...prev, message: e.target.value }))}\n                  placeholder=\"Enter notification message\"\n                  rows={3}\n                  required\n                  data-testid=\"textarea-notification-message\"\n                />\n              </div>\n              <div className=\"flex gap-2\">\n                <Button type=\"submit\" data-testid=\"button-send-notification\">\n                  <Send className=\"h-4 w-4 mr-2\" />\n                  Send Notification\n                </Button>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowCreateForm(false)} data-testid=\"button-cancel-notification\">\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Notifications List */}\n      <div className=\"space-y-4\">\n        <h2 className=\"text-xl font-semibold\">Recent Notifications</h2>\n        {mockNotifications.map((notification) => (\n          <NotificationCard\n            key={notification.id}\n            notification={notification}\n            onMarkAsRead={handleMarkAsRead}\n            onDelete={handleDelete}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}","size_bytes":10494},"client/src/pages/properties.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { PropertyCard } from \"@/components/property-card\"\nimport { PropertyForm } from \"@/components/property-form\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Search, Filter, Plus, ArrowLeft, Shield, AlertTriangle } from \"lucide-react\"\nimport { Property } from \"@shared/schema\"\nimport apartmentImg from '@assets/generated_images/luxury_apartment_building_exterior_e11af77f.png'\nimport officeImg from '@assets/generated_images/commercial_office_building_f8c8d53a.png'\nimport villaImg from '@assets/generated_images/luxury_villa_property_b02d7e37.png'\nimport retailImg from '@assets/generated_images/retail_shopping_complex_10ee6fbf.png'\n\nexport default function Properties() {\n  const { toast } = useToast()\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n  const [showForm, setShowForm] = useState(false)\n  const [editingProperty, setEditingProperty] = useState<Property | null>(null)\n  const [isDeactivateDialogOpen, setIsDeactivateDialogOpen] = useState(false)\n  const [selectedPropertyId, setSelectedPropertyId] = useState<string | null>(null)\n  const [authPassword, setAuthPassword] = useState(\"\")\n  const [deactivationReason, setDeactivationReason] = useState(\"\")\n  const [deactivationComment, setDeactivationComment] = useState(\"\")\n\n  const [properties, setProperties] = useState<Property[]>([\n    {\n      id: '1',\n      title: 'Luxury Apartment Complex',\n      description: 'Modern residential complex in the heart of Riyadh with premium amenities and excellent rental yield potential.',\n      location: 'Olaya District, Riyadh',\n      price: '2500000',\n      propertyType: 'residential',\n      yield: '8.5',\n      ownershipCap: 75,\n      status: 'live',\n      images: [apartmentImg],\n      // Investment tracking data\n      totalInvestment: '1875000', // 75% of price invested\n      investorCount: 43,\n      currentOwnership: '75.0', // percentage owned\n      monthlyRevenue: '18750',\n      totalRevenue: '562500', // 30 months of revenue\n      occupancyRate: '92.5',\n      performance: 'excellent',\n      lastDividendDate: new Date('2024-01-15'),\n      deactivationReason: null,\n      deactivatedAt: null,\n      deactivatedBy: null,\n      createdAt: new Date('2023-06-15'),\n    },\n    {\n      id: '2',\n      title: 'Commercial Office Tower',\n      description: 'Prime commercial space in the business district with high-end office facilities and parking.',\n      location: 'King Fahd District, Riyadh',\n      price: '8750000',\n      propertyType: 'commercial',\n      yield: '12.2',\n      ownershipCap: 60,\n      status: 'upcoming',\n      images: [officeImg],\n      // Investment tracking data\n      totalInvestment: '0', // upcoming property, no investments yet\n      investorCount: 0,\n      currentOwnership: '0',\n      monthlyRevenue: '0',\n      totalRevenue: '0',\n      occupancyRate: '0',\n      performance: 'stable',\n      lastDividendDate: null,\n      deactivationReason: null,\n      deactivatedAt: null,\n      deactivatedBy: null,\n      createdAt: new Date('2023-09-10'),\n    },\n    {\n      id: '3',\n      title: 'Luxury Villa Compound',\n      description: 'Exclusive villa compound with traditional Saudi architecture and modern amenities.',\n      location: 'Diplomatic Quarter, Riyadh',\n      price: '15000000',\n      propertyType: 'residential',\n      yield: '6.8',\n      ownershipCap: 40,\n      status: 'upcoming',\n      images: [villaImg],\n      // Investment tracking data\n      totalInvestment: '0', // upcoming property, no investments yet\n      investorCount: 0,\n      currentOwnership: '0',\n      monthlyRevenue: '0',\n      totalRevenue: '0',\n      occupancyRate: '0',\n      performance: 'stable',\n      lastDividendDate: null,\n      deactivationReason: null,\n      deactivatedAt: null,\n      deactivatedBy: null,\n      createdAt: new Date('2023-11-20'),\n    },\n    {\n      id: '4',\n      title: 'Retail Shopping Complex',\n      description: 'Modern retail center in a high-traffic area with diverse shopping and dining options.',\n      location: 'Al Malaz District, Riyadh',\n      price: '12000000',\n      propertyType: 'retail',\n      yield: '10.5',\n      ownershipCap: 80,\n      status: 'live',\n      images: [retailImg],\n      // Investment tracking data\n      totalInvestment: '9600000', // 80% of price invested\n      investorCount: 67,\n      currentOwnership: '80.0',\n      monthlyRevenue: '84000',\n      totalRevenue: '1680000', // 20 months of revenue\n      occupancyRate: '88.0',\n      performance: 'good',\n      lastDividendDate: new Date('2024-01-31'),\n      deactivationReason: null,\n      deactivatedAt: null,\n      deactivatedBy: null,\n      createdAt: new Date('2023-07-22'),\n    },\n  ])\n\n  const filteredProperties = properties.filter(property => {\n    const matchesSearch = property.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         property.location.toLowerCase().includes(searchTerm.toLowerCase())\n    const matchesStatus = statusFilter === \"all\" || property.status === statusFilter\n    return matchesSearch && matchesStatus\n  })\n\n  const handleAddProperty = () => {\n    setEditingProperty(null)\n    setShowForm(true)\n  }\n\n  const handleEditProperty = (id: string) => {\n    const property = properties.find(p => p.id === id)\n    if (property) {\n      setEditingProperty(property)\n      setShowForm(true)\n    }\n  }\n\n  const DUMMY_PASSWORD = \"1234\"\n\n  const deactivationReasons = [\n    { value: \"maintenance_required\", label: \"Maintenance Required\" },\n    { value: \"market_conditions\", label: \"Unfavorable Market Conditions\" },\n    { value: \"regulatory_issues\", label: \"Regulatory Issues\" },\n    { value: \"investor_request\", label: \"Investor Request\" },\n    { value: \"performance_issues\", label: \"Performance Issues\" },\n    { value: \"strategic_decision\", label: \"Strategic Business Decision\" },\n    { value: \"other\", label: \"Other\" }\n  ]\n\n  const handleDeleteProperty = (id: string) => {\n    const property = properties.find(p => p.id === id)\n    if (!property) return\n\n    // Only allow deletion of non-live properties without investments\n    if (property.status === 'live' || Number(property.totalInvestment || 0) > 0) {\n      toast({\n        title: \"Cannot Delete Property\",\n        description: \"Live properties with investments cannot be deleted. Use deactivate instead.\",\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    // In real app, this would delete the property\n    setProperties(prev => prev.filter(p => p.id !== id))\n    toast({\n      title: \"Property Deleted\",\n      description: \"Property has been successfully deleted.\",\n    })\n  }\n\n  const handleDeactivateProperty = (id: string) => {\n    setSelectedPropertyId(id)\n    setIsDeactivateDialogOpen(true)\n  }\n\n  const handleConfirmDeactivation = () => {\n    if (authPassword !== DUMMY_PASSWORD) {\n      toast({\n        title: \"Invalid Password\",\n        description: \"Please enter the correct 4-digit authentication code.\",\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    if (!deactivationReason) {\n      toast({\n        title: \"Reason Required\",\n        description: \"Please select a reason for deactivation.\",\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    if (!selectedPropertyId) return\n\n    // Update property status to closed\n    setProperties(prev => prev.map(property => \n      property.id === selectedPropertyId \n        ? {\n            ...property,\n            status: 'closed',\n            deactivationReason,\n            deactivatedAt: new Date(),\n            deactivatedBy: 'admin-current' // In real app, this would be the current admin\n          }\n        : property\n    ))\n\n    // Reset form and close dialog\n    setIsDeactivateDialogOpen(false)\n    setSelectedPropertyId(null)\n    setAuthPassword(\"\")\n    setDeactivationReason(\"\")\n    setDeactivationComment(\"\")\n\n    toast({\n      title: \"Property Deactivated\",\n      description: \"Property has been successfully deactivated and marked as closed.\",\n    })\n  }\n\n  const handleCancelDeactivation = () => {\n    setIsDeactivateDialogOpen(false)\n    setSelectedPropertyId(null)\n    setAuthPassword(\"\")\n    setDeactivationReason(\"\")\n    setDeactivationComment(\"\")\n  }\n\n  const handleFormSubmit = (data: any) => {\n    console.log('Property form submitted:', data)\n    setShowForm(false)\n    setEditingProperty(null)\n  }\n\n  const handleFormCancel = () => {\n    setShowForm(false)\n    setEditingProperty(null)\n  }\n\n  if (showForm) {\n    return (\n      <div className=\"p-6 space-y-6\" data-testid=\"page-property-form\">\n        <div className=\"flex items-center gap-4\">\n          <Button variant=\"ghost\" onClick={handleFormCancel} data-testid=\"button-back-to-properties\">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back to Properties\n          </Button>\n          <h1 className=\"text-3xl font-bold\">\n            {editingProperty ? 'Edit Property' : 'Add New Property'}\n          </h1>\n        </div>\n        <PropertyForm\n          initialData={editingProperty}\n          onSubmit={handleFormSubmit}\n          onCancel={handleFormCancel}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\" data-testid=\"page-properties\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\" data-testid=\"text-properties-title\">Property Management</h1>\n          <p className=\"text-muted-foreground\">Manage property listings and track investment opportunities</p>\n        </div>\n        <Button onClick={handleAddProperty} data-testid=\"button-add-property\">\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Add Property\n        </Button>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Search & Filter</CardTitle>\n          <CardDescription>Find properties by title, location, or status</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search by title or location...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-9\"\n                data-testid=\"input-search-properties\"\n              />\n            </div>\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className=\"w-48\" data-testid=\"select-status-filter\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                <SelectValue placeholder=\"Filter by status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"live\">Live</SelectItem>\n                <SelectItem value=\"upcoming\">Upcoming</SelectItem>\n                <SelectItem value=\"closed\">Closed</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent>\n      </Card>\n\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <h2 className=\"text-xl font-semibold\">\n            Properties ({filteredProperties.length})\n          </h2>\n          <div className=\"flex gap-2\">\n            <Badge variant=\"outline\">\n              {properties.filter(p => p.status === 'live').length} Live\n            </Badge>\n            <Badge variant=\"outline\">\n              {properties.filter(p => p.status === 'upcoming').length} Upcoming\n            </Badge>\n            <Badge variant=\"outline\">\n              {properties.filter(p => p.status === 'closed').length} Closed\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n        {filteredProperties.map((property) => (\n          <PropertyCard\n            key={property.id}\n            property={property}\n            onEdit={handleEditProperty}\n            onDelete={handleDeleteProperty}\n            onDeactivate={handleDeactivateProperty}\n          />\n        ))}\n      </div>\n\n      {filteredProperties.length === 0 && (\n        <Card>\n          <CardContent className=\"flex flex-col items-center justify-center py-12\">\n            <p className=\"text-muted-foreground mb-4\">No properties found matching your criteria</p>\n            <Button variant=\"outline\" onClick={() => {\n              setSearchTerm(\"\")\n              setStatusFilter(\"all\")\n            }} data-testid=\"button-clear-filters\">\n              Clear Filters\n            </Button>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Deactivation Dialog */}\n      <Dialog open={isDeactivateDialogOpen} onOpenChange={setIsDeactivateDialogOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2\">\n              <Shield className=\"h-5 w-5 text-orange-600\" />\n              Deactivate Property\n            </DialogTitle>\n            <DialogDescription>\n              This will deactivate the property and mark it as closed. This action requires authentication and a reason.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"bg-orange-50 dark:bg-orange-950/30 p-3 rounded-lg\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <AlertTriangle className=\"h-4 w-4 text-orange-600\" />\n                <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">Warning</span>\n              </div>\n              <p className=\"text-sm text-orange-700 dark:text-orange-300\">\n                This property has active investments. Deactivating will mark it as closed but preserve investor data and history.\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"auth-password\">4-Digit Authentication Code</Label>\n              <Input\n                id=\"auth-password\"\n                type=\"password\"\n                placeholder=\"Enter 4-digit code\"\n                value={authPassword}\n                onChange={(e) => setAuthPassword(e.target.value)}\n                maxLength={4}\n                className=\"text-center text-lg tracking-widest\"\n                data-testid=\"input-deactivation-password\"\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                Demo code: 1234\n              </p>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label>Deactivation Reason</Label>\n              <Select value={deactivationReason} onValueChange={setDeactivationReason}>\n                <SelectTrigger data-testid=\"select-deactivation-reason\">\n                  <SelectValue placeholder=\"Select reason for deactivation\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {deactivationReasons.map((reason) => (\n                    <SelectItem key={reason.value} value={reason.value}>\n                      {reason.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"deactivation-comment\">Additional Comments (Optional)</Label>\n              <Textarea\n                id=\"deactivation-comment\"\n                placeholder=\"Provide additional details about the deactivation...\"\n                value={deactivationComment}\n                onChange={(e) => setDeactivationComment(e.target.value)}\n                rows={3}\n                data-testid=\"textarea-deactivation-comment\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={handleCancelDeactivation}>\n              Cancel\n            </Button>\n            <Button \n              onClick={handleConfirmDeactivation}\n              disabled={authPassword !== DUMMY_PASSWORD || !deactivationReason}\n              variant=\"destructive\"\n              data-testid=\"button-confirm-deactivation\"\n            >\n              Deactivate Property\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}","size_bytes":16912},"client/src/pages/settings.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { \n  Settings as SettingsIcon, \n  Bell, \n  Shield, \n  Globe, \n  Database,\n  Mail,\n  Smartphone,\n  Save,\n  RefreshCw\n} from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\n\nexport default function Settings() {\n  const { toast } = useToast()\n  \n  // todo: remove mock functionality\n  const [settings, setSettings] = useState({\n    // General Settings\n    platformName: 'Zaron',\n    defaultLanguage: 'en',\n    timezone: 'Asia/Riyadh',\n    dateFormat: 'DD/MM/YYYY',\n    currency: 'SAR',\n    \n    // Notification Settings\n    emailNotifications: true,\n    smsNotifications: false,\n    pushNotifications: true,\n    weeklyReports: true,\n    \n    // Security Settings\n    twoFactorAuth: true,\n    sessionTimeout: '8',\n    passwordPolicy: 'strong',\n    ipWhitelist: true,\n    \n    // Business Settings\n    minimumInvestment: '10000',\n    maximumInvestment: '1000000',\n    platformFee: '2.5',\n    kycRequirement: true,\n    autoApproval: false,\n    \n    // Integration Settings\n    emailProvider: 'sendgrid',\n    smsProvider: 'twilio',\n    paymentGateway: 'stripe',\n    storageProvider: 'aws_s3'\n  })\n\n  const [isSaving, setIsSaving] = useState(false)\n\n  const handleSettingChange = (key: string, value: any) => {\n    setSettings(prev => ({ ...prev, [key]: value }))\n  }\n\n  const handleSaveSettings = async () => {\n    setIsSaving(true)\n    console.log('Saving settings:', settings)\n    \n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000))\n    \n    toast({\n      title: \"Settings Saved\",\n      description: \"All settings have been successfully updated.\",\n    })\n    \n    setIsSaving(false)\n  }\n\n  const handleResetToDefaults = () => {\n    console.log('Reset to defaults triggered')\n    toast({\n      title: \"Settings Reset\",\n      description: \"All settings have been reset to default values.\",\n    })\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\" data-testid=\"page-settings\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\" data-testid=\"text-settings-title\">Platform Settings</h1>\n          <p className=\"text-muted-foreground\">Configure platform-wide settings and preferences</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" onClick={handleResetToDefaults} data-testid=\"button-reset-settings\">\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Reset to Defaults\n          </Button>\n          <Button onClick={handleSaveSettings} disabled={isSaving} data-testid=\"button-save-settings\">\n            <Save className=\"h-4 w-4 mr-2\" />\n            {isSaving ? \"Saving...\" : \"Save Changes\"}\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* General Settings */}\n        <Card data-testid=\"card-general-settings\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <SettingsIcon className=\"h-4 w-4\" />\n              General Settings\n            </CardTitle>\n            <CardDescription>Basic platform configuration</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"platformName\">Platform Name</Label>\n              <Input\n                id=\"platformName\"\n                value={settings.platformName}\n                onChange={(e) => handleSettingChange('platformName', e.target.value)}\n                data-testid=\"input-platform-name\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"defaultLanguage\">Default Language</Label>\n                <Select value={settings.defaultLanguage} onValueChange={(value) => handleSettingChange('defaultLanguage', value)}>\n                  <SelectTrigger data-testid=\"select-default-language\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"en\">English</SelectItem>\n                    <SelectItem value=\"ar\">Arabic</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"timezone\">Timezone</Label>\n                <Select value={settings.timezone} onValueChange={(value) => handleSettingChange('timezone', value)}>\n                  <SelectTrigger data-testid=\"select-timezone\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Asia/Riyadh\">Asia/Riyadh</SelectItem>\n                    <SelectItem value=\"UTC\">UTC</SelectItem>\n                    <SelectItem value=\"America/New_York\">America/New_York</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dateFormat\">Date Format</Label>\n                <Select value={settings.dateFormat} onValueChange={(value) => handleSettingChange('dateFormat', value)}>\n                  <SelectTrigger data-testid=\"select-date-format\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"DD/MM/YYYY\">DD/MM/YYYY</SelectItem>\n                    <SelectItem value=\"MM/DD/YYYY\">MM/DD/YYYY</SelectItem>\n                    <SelectItem value=\"YYYY-MM-DD\">YYYY-MM-DD</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"currency\">Currency</Label>\n                <Select value={settings.currency} onValueChange={(value) => handleSettingChange('currency', value)}>\n                  <SelectTrigger data-testid=\"select-currency\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"SAR\">SAR (Saudi Riyal)</SelectItem>\n                    <SelectItem value=\"USD\">USD (US Dollar)</SelectItem>\n                    <SelectItem value=\"EUR\">EUR (Euro)</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Notification Settings */}\n        <Card data-testid=\"card-notification-settings\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Bell className=\"h-4 w-4\" />\n              Notification Settings\n            </CardTitle>\n            <CardDescription>Configure notification preferences</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Email Notifications</Label>\n                <div className=\"text-sm text-muted-foreground\">Send notifications via email</div>\n              </div>\n              <Switch\n                checked={settings.emailNotifications}\n                onCheckedChange={(checked) => handleSettingChange('emailNotifications', checked)}\n                data-testid=\"switch-email-notifications\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">SMS Notifications</Label>\n                <div className=\"text-sm text-muted-foreground\">Send notifications via SMS</div>\n              </div>\n              <Switch\n                checked={settings.smsNotifications}\n                onCheckedChange={(checked) => handleSettingChange('smsNotifications', checked)}\n                data-testid=\"switch-sms-notifications\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Push Notifications</Label>\n                <div className=\"text-sm text-muted-foreground\">Send push notifications to mobile apps</div>\n              </div>\n              <Switch\n                checked={settings.pushNotifications}\n                onCheckedChange={(checked) => handleSettingChange('pushNotifications', checked)}\n                data-testid=\"switch-push-notifications\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Weekly Reports</Label>\n                <div className=\"text-sm text-muted-foreground\">Send weekly analytics reports</div>\n              </div>\n              <Switch\n                checked={settings.weeklyReports}\n                onCheckedChange={(checked) => handleSettingChange('weeklyReports', checked)}\n                data-testid=\"switch-weekly-reports\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Security Settings */}\n        <Card data-testid=\"card-security-settings\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Shield className=\"h-4 w-4\" />\n              Security Settings\n            </CardTitle>\n            <CardDescription>Platform security configuration</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Two-Factor Authentication</Label>\n                <div className=\"text-sm text-muted-foreground\">Require 2FA for admin access</div>\n              </div>\n              <Switch\n                checked={settings.twoFactorAuth}\n                onCheckedChange={(checked) => handleSettingChange('twoFactorAuth', checked)}\n                data-testid=\"switch-2fa\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"sessionTimeout\">Session Timeout (hours)</Label>\n              <Select value={settings.sessionTimeout} onValueChange={(value) => handleSettingChange('sessionTimeout', value)}>\n                <SelectTrigger data-testid=\"select-session-timeout\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"1\">1 hour</SelectItem>\n                  <SelectItem value=\"4\">4 hours</SelectItem>\n                  <SelectItem value=\"8\">8 hours</SelectItem>\n                  <SelectItem value=\"24\">24 hours</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"passwordPolicy\">Password Policy</Label>\n              <Select value={settings.passwordPolicy} onValueChange={(value) => handleSettingChange('passwordPolicy', value)}>\n                <SelectTrigger data-testid=\"select-password-policy\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"basic\">Basic (8+ characters)</SelectItem>\n                  <SelectItem value=\"strong\">Strong (12+ chars, mixed case, numbers)</SelectItem>\n                  <SelectItem value=\"enterprise\">Enterprise (16+ chars, symbols required)</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">IP Whitelist</Label>\n                <div className=\"text-sm text-muted-foreground\">Restrict access to approved IPs</div>\n              </div>\n              <Switch\n                checked={settings.ipWhitelist}\n                onCheckedChange={(checked) => handleSettingChange('ipWhitelist', checked)}\n                data-testid=\"switch-ip-whitelist\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Business Settings */}\n        <Card data-testid=\"card-business-settings\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Database className=\"h-4 w-4\" />\n              Business Settings\n            </CardTitle>\n            <CardDescription>Investment and business rules</CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"minimumInvestment\">Minimum Investment (SAR)</Label>\n                <Input\n                  id=\"minimumInvestment\"\n                  type=\"number\"\n                  value={settings.minimumInvestment}\n                  onChange={(e) => handleSettingChange('minimumInvestment', e.target.value)}\n                  data-testid=\"input-minimum-investment\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"maximumInvestment\">Maximum Investment (SAR)</Label>\n                <Input\n                  id=\"maximumInvestment\"\n                  type=\"number\"\n                  value={settings.maximumInvestment}\n                  onChange={(e) => handleSettingChange('maximumInvestment', e.target.value)}\n                  data-testid=\"input-maximum-investment\"\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"platformFee\">Platform Fee (%)</Label>\n              <Input\n                id=\"platformFee\"\n                type=\"number\"\n                step=\"0.1\"\n                value={settings.platformFee}\n                onChange={(e) => handleSettingChange('platformFee', e.target.value)}\n                data-testid=\"input-platform-fee\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">KYC Requirement</Label>\n                <div className=\"text-sm text-muted-foreground\">Require KYC verification for investments</div>\n              </div>\n              <Switch\n                checked={settings.kycRequirement}\n                onCheckedChange={(checked) => handleSettingChange('kycRequirement', checked)}\n                data-testid=\"switch-kyc-requirement\"\n              />\n            </div>\n\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label className=\"text-base\">Auto-Approval</Label>\n                <div className=\"text-sm text-muted-foreground\">Automatically approve small investments</div>\n              </div>\n              <Switch\n                checked={settings.autoApproval}\n                onCheckedChange={(checked) => handleSettingChange('autoApproval', checked)}\n                data-testid=\"switch-auto-approval\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Integration Settings */}\n      <Card data-testid=\"card-integration-settings\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Globe className=\"h-4 w-4\" />\n            Integration Settings\n          </CardTitle>\n          <CardDescription>Third-party service configurations</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"emailProvider\">Email Provider</Label>\n              <Select value={settings.emailProvider} onValueChange={(value) => handleSettingChange('emailProvider', value)}>\n                <SelectTrigger data-testid=\"select-email-provider\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"sendgrid\">SendGrid</SelectItem>\n                  <SelectItem value=\"mailgun\">Mailgun</SelectItem>\n                  <SelectItem value=\"ses\">Amazon SES</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"smsProvider\">SMS Provider</Label>\n              <Select value={settings.smsProvider} onValueChange={(value) => handleSettingChange('smsProvider', value)}>\n                <SelectTrigger data-testid=\"select-sms-provider\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"twilio\">Twilio</SelectItem>\n                  <SelectItem value=\"nexmo\">Nexmo</SelectItem>\n                  <SelectItem value=\"local\">Local SMS</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"paymentGateway\">Payment Gateway</Label>\n              <Select value={settings.paymentGateway} onValueChange={(value) => handleSettingChange('paymentGateway', value)}>\n                <SelectTrigger data-testid=\"select-payment-gateway\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"stripe\">Stripe</SelectItem>\n                  <SelectItem value=\"paypal\">PayPal</SelectItem>\n                  <SelectItem value=\"local_bank\">Local Banking</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"storageProvider\">Storage Provider</Label>\n              <Select value={settings.storageProvider} onValueChange={(value) => handleSettingChange('storageProvider', value)}>\n                <SelectTrigger data-testid=\"select-storage-provider\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"aws_s3\">AWS S3</SelectItem>\n                  <SelectItem value=\"google_cloud\">Google Cloud</SelectItem>\n                  <SelectItem value=\"azure\">Azure Storage</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* System Status */}\n      <Card data-testid=\"card-system-status\">\n        <CardHeader>\n          <CardTitle>System Status</CardTitle>\n          <CardDescription>Current system health and service status</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <div className=\"flex items-center justify-between p-3 border rounded\">\n              <div>\n                <div className=\"font-medium\">Database</div>\n                <div className=\"text-sm text-muted-foreground\">Connected</div>\n              </div>\n              <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                Healthy\n              </Badge>\n            </div>\n            \n            <div className=\"flex items-center justify-between p-3 border rounded\">\n              <div>\n                <div className=\"font-medium\">Email Service</div>\n                <div className=\"text-sm text-muted-foreground\">SendGrid</div>\n              </div>\n              <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                Active\n              </Badge>\n            </div>\n            \n            <div className=\"flex items-center justify-between p-3 border rounded\">\n              <div>\n                <div className=\"font-medium\">File Storage</div>\n                <div className=\"text-sm text-muted-foreground\">AWS S3</div>\n              </div>\n              <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                Online\n              </Badge>\n            </div>\n            \n            <div className=\"flex items-center justify-between p-3 border rounded\">\n              <div>\n                <div className=\"font-medium\">Payment Gateway</div>\n                <div className=\"text-sm text-muted-foreground\">Stripe</div>\n              </div>\n              <Badge className=\"bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200\">\n                Maintenance\n              </Badge>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}","size_bytes":21301},"client/src/pages/transactions.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { \n  Search, \n  Filter, \n  Download, \n  TrendingUp, \n  TrendingDown, \n  Banknote, \n  Eye, \n  CheckCircle, \n  XCircle,\n  Clock,\n  AlertTriangle,\n  Shield,\n  Brain,\n  BarChart3,\n  FileText,\n  Lock,\n  Users,\n  Building2,\n  CreditCard,\n  Calendar,\n  MapPin\n} from \"lucide-react\"\nimport { Transaction, WithdrawalRequest, Investor } from \"@shared/schema\"\nimport { format } from \"date-fns\"\nimport { useToast } from \"@/hooks/use-toast\"\n\n// Mock data for enhanced transactions with investor details\nconst mockInvestors: Investor[] = [\n  {\n    id: 'investor-1',\n    name: 'Ahmed Al-Mahmoud',\n    email: 'ahmed.mahmoud@email.com',\n    phone: '+966 50 123 4567',\n    kycStatus: 'approved',\n    totalInvested: '275000',\n    activeProperties: 3,\n    monthlyIncome: '15000',\n    nationality: 'Saudi Arabia',\n    documentsUploaded: true,\n    firstName: 'Ahmed',\n    lastName: 'Al-Mahmoud',\n    salutation: 'Mr',\n    gender: 'male',\n    dateOfBirth: new Date('1985-03-15'),\n    occupation: 'Business Executive',\n    jobCategory: 'executive',\n    jobTitle: 'CEO',\n    company: 'Al-Mahmoud Holdings',\n    workExperience: 15,\n    city: 'Riyadh',\n    country: 'Saudi Arabia',\n    address: '123 King Abdul Aziz Road, Riyadh, Saudi Arabia',\n    profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n    applicationProgress: 100,\n    appDownloadedAt: new Date('2023-06-01'),\n    kycSubmittedAt: new Date('2023-06-10'),\n    aiRiskScore: 15,\n    investorTier: 'top',\n    preferredLanguage: 'ar',\n    languagesSpoken: ['ar', 'en'],\n    createdAt: new Date('2023-06-15'),\n    updatedAt: new Date('2024-01-20'),\n  },\n  {\n    id: 'investor-2', \n    name: 'Fatima Al-Zahra',\n    email: 'fatima.zahra@email.com',\n    phone: '+966 55 987 6543',\n    kycStatus: 'approved',\n    totalInvested: '150000',\n    activeProperties: 2,\n    monthlyIncome: '12000',\n    nationality: 'UAE',\n    documentsUploaded: true,\n    firstName: 'Fatima',\n    lastName: 'Al-Zahra',\n    salutation: 'Ms',\n    gender: 'female',\n    dateOfBirth: new Date('1990-07-22'),\n    occupation: 'Senior Manager',\n    jobCategory: 'management',\n    jobTitle: 'Marketing Director',\n    company: 'Emirates Business Group',\n    workExperience: 8,\n    city: 'Dubai',\n    country: 'UAE',\n    address: '456 Sheikh Zayed Road, Dubai, UAE',\n    profilePicture: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\n    applicationProgress: 100,\n    appDownloadedAt: new Date('2023-07-15'),\n    kycSubmittedAt: new Date('2023-08-05'),\n    aiRiskScore: 25,\n    investorTier: 'medium',\n    preferredLanguage: 'en',\n    languagesSpoken: ['ar', 'en'],\n    createdAt: new Date('2023-08-10'),\n    updatedAt: new Date('2024-01-19'),\n  },\n  {\n    id: 'investor-3',\n    name: 'Omar Hassan',\n    email: 'omar.hassan@email.com', \n    phone: '+966 56 456 7890',\n    kycStatus: 'approved',\n    totalInvested: '95000',\n    activeProperties: 1,\n    monthlyIncome: '8500',\n    nationality: 'Kuwait',\n    documentsUploaded: true,\n    firstName: 'Omar',\n    lastName: 'Hassan',\n    salutation: 'Mr',\n    gender: 'male',\n    dateOfBirth: new Date('1988-12-03'),\n    occupation: 'Professional',\n    jobCategory: 'professional',\n    jobTitle: 'Software Engineer',\n    company: 'Kuwait Tech Solutions',\n    workExperience: 6,\n    city: 'Kuwait City',\n    country: 'Kuwait',\n    address: '789 Al-Fahad Street, Kuwait City, Kuwait',\n    profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n    applicationProgress: 100,\n    appDownloadedAt: new Date('2023-09-01'),\n    kycSubmittedAt: new Date('2023-09-18'),\n    aiRiskScore: 35,\n    investorTier: 'medium',\n    preferredLanguage: 'en',\n    languagesSpoken: ['ar', 'en'],\n    createdAt: new Date('2023-09-22'),\n    updatedAt: new Date('2024-01-18'),\n  },\n  {\n    id: 'investor-4',\n    name: 'Sarah Al-Qasimi',\n    email: 'sarah.qasimi@email.com',\n    phone: '+966 53 345 6789',\n    kycStatus: 'approved',\n    totalInvested: '320000',\n    activeProperties: 4,\n    monthlyIncome: '18000',\n    nationality: 'Qatar',\n    documentsUploaded: true,\n    firstName: 'Sarah',\n    lastName: 'Al-Qasimi',\n    salutation: 'Ms',\n    gender: 'female',\n    dateOfBirth: new Date('1982-11-28'),\n    occupation: 'Executive',\n    jobCategory: 'executive',\n    jobTitle: 'Investment Director',\n    company: 'Qatar Investment Fund',\n    workExperience: 12,\n    city: 'Doha',\n    country: 'Qatar',\n    address: '321 Corniche Street, Doha, Qatar',\n    profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b5b0c8d1?w=150&h=150&fit=crop&crop=face',\n    applicationProgress: 100,\n    appDownloadedAt: new Date('2023-10-20'),\n    kycSubmittedAt: new Date('2023-11-02'),\n    aiRiskScore: 8,\n    investorTier: 'top',\n    preferredLanguage: 'en',\n    languagesSpoken: ['ar', 'en', 'fr'],\n    createdAt: new Date('2023-11-05'),\n    updatedAt: new Date('2024-01-17'),\n  }\n]\n\nexport default function Transactions() {\n  const { toast } = useToast()\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [typeFilter, setTypeFilter] = useState(\"all\")\n  const [statusFilter, setStatusFilter] = useState(\"all\")\n  const [activeTab, setActiveTab] = useState(\"transactions\")\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null)\n  const [selectedWithdrawal, setSelectedWithdrawal] = useState<WithdrawalRequest | null>(null)\n  const [authPassword, setAuthPassword] = useState(\"\")\n  const [isAuthDialogOpen, setIsAuthDialogOpen] = useState(false)\n  const [isTransactionDetailOpen, setIsTransactionDetailOpen] = useState(false)\n  const [isWithdrawalDetailOpen, setIsWithdrawalDetailOpen] = useState(false)\n  const [rejectionReason, setRejectionReason] = useState(\"\")\n  const [rejectionComment, setRejectionComment] = useState(\"\")\n  const [pendingAction, setPendingAction] = useState<{ type: 'approve' | 'reject', id: string } | null>(null)\n  const [isProcessing, setIsProcessing] = useState(false)\n  const [isExporting, setIsExporting] = useState(false)\n\n  // Enhanced transactions data with state management\n  const [transactions, setTransactions] = useState<Transaction[]>([\n    {\n      id: 'tx-001',\n      investorId: 'investor-1',\n      propertyId: 'property-1',\n      type: 'investment',\n      amount: '150000',\n      fee: '750',\n      description: 'Initial investment in Al-Noor Residential Complex',\n      reference: 'TXN-2024-001',\n      status: 'completed',\n      paymentMethod: 'bank_transfer',\n      bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****1234' }),\n      processedAt: new Date('2024-01-16T10:30:00Z'),\n      processedBy: 'admin-1',\n      rejectionReason: null,\n      rejectionComment: null,\n      aiAnalysis: 'Low risk transaction. Investor has excellent payment history.',\n      aiRiskScore: 15,\n      aiRecommendation: 'Approved - Standard processing',\n      createdAt: new Date('2024-01-15T09:00:00Z'),\n      updatedAt: new Date('2024-01-16T10:30:00Z'),\n    },\n    {\n      id: 'tx-002',\n      investorId: 'investor-2',\n      propertyId: 'property-2',\n      type: 'payout',\n      amount: '8250',\n      fee: '0',\n      description: 'Quarterly dividend payment',\n      reference: 'TXN-2024-002',\n      status: 'completed',\n      paymentMethod: 'bank_transfer',\n      bankDetails: JSON.stringify({ bank: 'Emirates NBD', account: '****5678' }),\n      processedAt: new Date('2024-01-20T14:22:00Z'),\n      processedBy: 'admin-2',\n      rejectionReason: null,\n      rejectionComment: null,\n      aiAnalysis: 'Regular dividend payout. No anomalies detected.',\n      aiRiskScore: 5,\n      aiRecommendation: 'Auto-approved - Scheduled payment',\n      createdAt: new Date('2024-01-20T08:00:00Z'),\n      updatedAt: new Date('2024-01-20T14:22:00Z'),\n    },\n    {\n      id: 'tx-003',\n      investorId: 'investor-3',\n      propertyId: 'property-1',\n      type: 'investment',\n      amount: '95000',\n      fee: '475',\n      description: 'Secondary investment opportunity',\n      reference: 'TXN-2024-003',\n      status: 'pending',\n      paymentMethod: 'bank_transfer',\n      bankDetails: null,\n      processedAt: null,\n      processedBy: null,\n      rejectionReason: null,\n      rejectionComment: null,\n      aiAnalysis: 'Medium risk. Investor tier: medium. Recommended for manual review.',\n      aiRiskScore: 35,\n      aiRecommendation: 'Manual review required - Medium risk investor',\n      createdAt: new Date('2024-02-01T11:15:00Z'),\n      updatedAt: new Date('2024-02-01T11:15:00Z'),\n    },\n    {\n      id: 'tx-004',\n      investorId: 'investor-4',\n      propertyId: 'property-3',\n      type: 'investment',\n      amount: '275000',\n      fee: '1375',\n      description: 'Premium investment in Marina Tower',\n      reference: 'TXN-2024-004',\n      status: 'completed',\n      paymentMethod: 'bank_transfer',\n      bankDetails: JSON.stringify({ bank: 'Qatar National Bank', account: '****9012' }),\n      processedAt: new Date('2024-02-05T16:45:00Z'),\n      processedBy: 'admin-1',\n      rejectionReason: null,\n      rejectionComment: null,\n      aiAnalysis: 'High-value transaction from top-tier investor. Excellent risk profile.',\n      aiRiskScore: 8,\n      aiRecommendation: 'Fast-track approved - Top tier investor',\n      createdAt: new Date('2024-02-05T09:30:00Z'),\n      updatedAt: new Date('2024-02-05T16:45:00Z'),\n    }\n  ])\n\n  // Withdrawal requests data with state management\n  const [withdrawalRequests, setWithdrawalRequests] = useState<WithdrawalRequest[]>([\n    {\n      id: 'wd-001',\n      investorId: 'investor-2',\n      amount: '25000',\n      reason: 'Emergency medical expenses',\n      bankAccount: JSON.stringify({ \n        bank: 'Emirates NBD', \n        account: 'AE070331234567890123456',\n        iban: 'AE070331234567890123456',\n        beneficiary: 'Fatima Al-Zahra'\n      }),\n      status: 'pending',\n      requestedAt: new Date('2024-02-08T10:00:00Z'),\n      reviewedAt: null,\n      reviewedBy: null,\n      rejectionReason: null,\n      rejectionComment: null,\n      processedAt: null,\n      transactionId: null,\n      aiAnalysis: 'Medium priority withdrawal. Investor has sufficient balance.',\n      aiRiskScore: 25,\n      aiRecommendation: 'Approve with documentation - Medical emergency',\n      priority: 'high',\n      createdAt: new Date('2024-02-08T10:00:00Z'),\n      updatedAt: new Date('2024-02-08T10:00:00Z'),\n    },\n    {\n      id: 'wd-002',\n      investorId: 'investor-1',\n      amount: '50000',\n      reason: 'Partial portfolio rebalancing',\n      bankAccount: JSON.stringify({\n        bank: 'Al Rajhi Bank',\n        account: 'SA0380000000608010167519',\n        iban: 'SA0380000000608010167519',\n        beneficiary: 'Ahmed Al-Mahmoud'\n      }),\n      status: 'approved',\n      requestedAt: new Date('2024-02-06T14:30:00Z'),\n      reviewedAt: new Date('2024-02-06T15:45:00Z'),\n      reviewedBy: 'admin-1',\n      rejectionReason: null,\n      rejectionComment: null,\n      processedAt: new Date('2024-02-07T09:00:00Z'),\n      transactionId: 'tx-005',\n      aiAnalysis: 'Standard withdrawal from high-tier investor. No red flags.',\n      aiRiskScore: 12,\n      aiRecommendation: 'Auto-approve - Top tier investor, standard amount',\n      priority: 'normal',\n      createdAt: new Date('2024-02-06T14:30:00Z'),\n      updatedAt: new Date('2024-02-07T09:00:00Z'),\n    },\n    {\n      id: 'wd-003',\n      investorId: 'investor-3',\n      amount: '15000',\n      reason: 'Personal investment opportunity',\n      bankAccount: JSON.stringify({\n        bank: 'Kuwait Finance House',\n        account: 'KW81CBKU0000000000001234560101',\n        iban: 'KW81CBKU0000000000001234560101', \n        beneficiary: 'Omar Hassan'\n      }),\n      status: 'rejected',\n      requestedAt: new Date('2024-02-05T16:20:00Z'),\n      reviewedAt: new Date('2024-02-05T17:30:00Z'),\n      reviewedBy: 'admin-2',\n      rejectionReason: 'insufficient_funds',\n      rejectionComment: 'Current portfolio balance insufficient for requested withdrawal amount. Please consider a smaller amount.',\n      processedAt: null,\n      transactionId: null,\n      aiAnalysis: 'Withdrawal amount exceeds available liquid funds. High risk.',\n      aiRiskScore: 75,\n      aiRecommendation: 'Reject - Insufficient liquid balance',\n      priority: 'normal',\n      createdAt: new Date('2024-02-05T16:20:00Z'),\n      updatedAt: new Date('2024-02-05T17:30:00Z'),\n    }\n  ])\n\n  const getInvestorById = (id: string) => mockInvestors.find(inv => inv.id === id)\n\n  const filteredTransactions = transactions.filter(transaction => {\n    const investor = getInvestorById(transaction.investorId || '')\n    const matchesSearch = investor?.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         transaction.reference?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         transaction.description?.toLowerCase().includes(searchTerm.toLowerCase())\n    const matchesType = typeFilter === \"all\" || transaction.type === typeFilter\n    const matchesStatus = statusFilter === \"all\" || transaction.status === statusFilter\n    return matchesSearch && matchesType && matchesStatus\n  })\n\n  const filteredWithdrawals = withdrawalRequests.filter(withdrawal => {\n    const investor = getInvestorById(withdrawal.investorId)\n    const matchesSearch = investor?.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         withdrawal.reason?.toLowerCase().includes(searchTerm.toLowerCase())\n    const matchesStatus = statusFilter === \"all\" || withdrawal.status === statusFilter\n    return matchesSearch && matchesStatus\n  })\n\n  const DUMMY_PASSWORD = \"1234\"\n\n  const rejectionReasons = [\n    { value: \"insufficient_funds\", label: \"Insufficient Funds\" },\n    { value: \"verification_required\", label: \"Additional Verification Required\" },\n    { value: \"policy_violation\", label: \"Policy Violation\" },\n    { value: \"suspicious_activity\", label: \"Suspicious Activity\" },\n    { value: \"document_issues\", label: \"Document Issues\" },\n    { value: \"other\", label: \"Other\" }\n  ]\n\n  const handleAuthSubmit = async () => {\n    if (authPassword === DUMMY_PASSWORD && pendingAction) {\n      setIsProcessing(true)\n      \n      try {\n        // Simulate processing delay for realistic UX\n        await new Promise(resolve => setTimeout(resolve, 1500))\n        \n        if (pendingAction.type === 'approve') {\n          setWithdrawalRequests(prev => prev.map(withdrawal => \n            withdrawal.id === pendingAction.id\n              ? {\n                  ...withdrawal,\n                  status: 'approved',\n                  reviewedAt: new Date(),\n                  reviewedBy: 'admin-demo',\n                  processedAt: new Date(),\n                  updatedAt: new Date()\n                }\n              : withdrawal\n          ))\n          \n          toast({\n            title: \"Withdrawal Approved\",\n            description: \"The withdrawal request has been successfully approved and processed.\",\n          })\n        } else {\n          setWithdrawalRequests(prev => prev.map(withdrawal => \n            withdrawal.id === pendingAction.id\n              ? {\n                  ...withdrawal,\n                  status: 'rejected',\n                  reviewedAt: new Date(),\n                  reviewedBy: 'admin-demo',\n                  rejectionReason,\n                  rejectionComment,\n                  updatedAt: new Date()\n                }\n              : withdrawal\n          ))\n          \n          toast({\n            title: \"Withdrawal Rejected\",\n            description: \"The withdrawal request has been rejected with the specified reason.\",\n            variant: \"destructive\"\n          })\n        }\n        \n        setIsAuthDialogOpen(false)\n        setAuthPassword(\"\")\n        setPendingAction(null)\n        setRejectionReason(\"\")\n        setRejectionComment(\"\")\n      } catch (error) {\n        toast({\n          title: \"Error\",\n          description: \"Failed to process the withdrawal request. Please try again.\",\n          variant: \"destructive\"\n        })\n      } finally {\n        setIsProcessing(false)\n      }\n    }\n  }\n\n  const handleApproveWithdrawal = (withdrawalId: string) => {\n    setPendingAction({ type: 'approve', id: withdrawalId })\n    setIsAuthDialogOpen(true)\n  }\n\n  const handleRejectWithdrawal = (withdrawalId: string) => {\n    setPendingAction({ type: 'reject', id: withdrawalId })\n    setIsAuthDialogOpen(true)\n  }\n\n  const handleViewTransaction = (transaction: Transaction) => {\n    setSelectedTransaction(transaction)\n    setIsTransactionDetailOpen(true)\n  }\n\n  const handleViewWithdrawal = (withdrawal: WithdrawalRequest) => {\n    setSelectedWithdrawal(withdrawal)\n    setIsWithdrawalDetailOpen(true)\n  }\n\n  const getStatusBadgeVariant = (status: string) => {\n    switch (status) {\n      case 'completed':\n      case 'approved':\n        return 'default'\n      case 'pending':\n        return 'secondary'\n      case 'rejected':\n      case 'failed':\n        return 'destructive'\n      default:\n        return 'outline'\n    }\n  }\n\n  const getTypeBadgeVariant = (type: string) => {\n    switch (type) {\n      case 'investment':\n        return 'default'\n      case 'payout':\n      case 'dividend':\n        return 'secondary'\n      case 'withdrawal':\n        return 'outline'\n      default:\n        return 'outline'\n    }\n  }\n\n  const getPriorityBadgeVariant = (priority: string) => {\n    switch (priority) {\n      case 'urgent':\n        return 'destructive'\n      case 'high':\n        return 'secondary'\n      case 'normal':\n        return 'outline'\n      default:\n        return 'outline'\n    }\n  }\n\n  // Export functionality\n  const exportToCSV = async (data: any[], filename: string, headers: string[]) => {\n    setIsExporting(true)\n    try {\n      // Simulate export processing\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      const csvContent = [\n        headers.join(','),\n        ...data.map(row => headers.map(header => {\n          const value = header.split('.').reduce((obj, key) => obj?.[key], row)\n          return typeof value === 'string' && value.includes(',') ? `\"${value}\"` : value || ''\n        }).join(','))\n      ].join('\\n')\n      \n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\n      const link = document.createElement('a')\n      const url = URL.createObjectURL(blob)\n      link.setAttribute('href', url)\n      link.setAttribute('download', filename)\n      link.style.visibility = 'hidden'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n      \n      toast({\n        title: \"Export Successful\",\n        description: `${filename} has been downloaded successfully.`,\n      })\n    } catch (error) {\n      toast({\n        title: \"Export Failed\",\n        description: \"Failed to export data. Please try again.\",\n        variant: \"destructive\"\n      })\n    } finally {\n      setIsExporting(false)\n    }\n  }\n\n  const handleExportTransactions = () => {\n    const headers = ['id', 'reference', 'type', 'amount', 'fee', 'status', 'investorName', 'description', 'createdAt']\n    const exportData = filteredTransactions.map(transaction => ({\n      ...transaction,\n      investorName: getInvestorById(transaction.investorId || '')?.name || 'Unknown',\n      createdAt: format(new Date(transaction.createdAt!), 'yyyy-MM-dd HH:mm:ss')\n    }))\n    exportToCSV(exportData, `transactions_${format(new Date(), 'yyyy-MM-dd')}.csv`, headers)\n  }\n\n  const handleExportWithdrawals = () => {\n    const headers = ['id', 'amount', 'reason', 'status', 'priority', 'investorName', 'requestedAt', 'reviewedAt']\n    const exportData = filteredWithdrawals.map(withdrawal => ({\n      ...withdrawal,\n      investorName: getInvestorById(withdrawal.investorId)?.name || 'Unknown',\n      requestedAt: format(new Date(withdrawal.requestedAt!), 'yyyy-MM-dd HH:mm:ss'),\n      reviewedAt: withdrawal.reviewedAt ? format(new Date(withdrawal.reviewedAt), 'yyyy-MM-dd HH:mm:ss') : ''\n    }))\n    exportToCSV(exportData, `withdrawals_${format(new Date(), 'yyyy-MM-dd')}.csv`, headers)\n  }\n\n  const handleGenerateReport = async () => {\n    setIsExporting(true)\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      toast({\n        title: \"Report Generated\",\n        description: \"Comprehensive transaction report has been generated successfully.\",\n      })\n    } catch (error) {\n      toast({\n        title: \"Report Generation Failed\",\n        description: \"Failed to generate report. Please try again.\",\n        variant: \"destructive\"\n      })\n    } finally {\n      setIsExporting(false)\n    }\n  }\n\n  const getAIRiskColor = (score: number | null | undefined) => {\n    if (!score) return 'text-muted-foreground'\n    if (score <= 25) return 'text-green-600'\n    if (score <= 50) return 'text-yellow-600'\n    if (score <= 75) return 'text-orange-600'\n    return 'text-red-600'\n  }\n\n  // Statistics calculations\n  const totalInvestments = transactions\n    .filter(t => t.type === 'investment' && t.status === 'completed')\n    .reduce((sum, t) => sum + Number(t.amount), 0)\n\n  const totalPayouts = transactions\n    .filter(t => t.type === 'payout' && t.status === 'completed')\n    .reduce((sum, t) => sum + Number(t.amount), 0)\n\n  const totalWithdrawals = withdrawalRequests\n    .filter(w => w.status === 'completed' || w.status === 'approved')\n    .reduce((sum, w) => sum + Number(w.amount), 0)\n\n  const pendingWithdrawals = withdrawalRequests.filter(w => w.status === 'pending').length\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5 modern-scrollbar\">\n      <div className=\"p-6 space-y-8\" data-testid=\"page-transactions\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"space-y-2\">\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-foreground via-primary to-primary/70 bg-clip-text text-transparent animate-float\" data-testid=\"text-transactions-title\">\n              Transaction Center\n            </h1>\n            <p className=\"text-lg text-muted-foreground/80\">\n              Comprehensive transaction management with AI-powered insights\n            </p>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n              {transactions.length} transactions • {pendingWithdrawals} pending withdrawals\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button \n              variant=\"outline\" \n              onClick={handleGenerateReport}\n              disabled={isExporting}\n              data-testid=\"button-export-report\"\n            >\n              <FileText className=\"h-4 w-4 mr-2\" />\n              {isExporting ? 'Generating...' : 'Generate Report'}\n            </Button>\n            <Button \n              onClick={handleExportTransactions}\n              disabled={isExporting}\n              data-testid=\"button-export-transactions\"\n            >\n              <Download className=\"h-4 w-4 mr-2\" />\n              {isExporting ? 'Exporting...' : 'Export Data'}\n            </Button>\n          </div>\n        </div>\n\n        {/* AI Insights Card */}\n        <Card className=\"glass-morphism border-primary/20\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-lg flex items-center gap-2\">\n              <Brain className=\"h-5 w-5 text-primary\" />\n              AI Transaction Insights\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"bg-green-50 dark:bg-green-950/30 p-4 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"text-sm font-medium text-green-800 dark:text-green-200\">Low Risk Detected</span>\n                </div>\n                <p className=\"text-sm text-green-700 dark:text-green-300\">\n                  87% of recent transactions show low risk patterns. System confidence: 94%\n                </p>\n              </div>\n              <div className=\"bg-blue-50 dark:bg-blue-950/30 p-4 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <BarChart3 className=\"h-4 w-4 text-blue-600\" />\n                  <span className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">Transaction Velocity</span>\n                </div>\n                <p className=\"text-sm text-blue-700 dark:text-blue-300\">\n                  Average processing time: 2.3 hours. 15% faster than last month.\n                </p>\n              </div>\n              <div className=\"bg-orange-50 dark:bg-orange-950/30 p-4 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-orange-600\" />\n                  <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">Manual Review</span>\n                </div>\n                <p className=\"text-sm text-orange-700 dark:text-orange-300\">\n                  3 transactions require manual review based on AI risk assessment.\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Summary Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <Card className=\"glass-morphism\" data-testid=\"card-total-investments\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Total Investments\n              </CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-green-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-600\">\n                {totalInvestments.toLocaleString()}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                From completed transactions\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"glass-morphism\" data-testid=\"card-total-payouts\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Total Payouts\n              </CardTitle>\n              <Banknote className=\"h-4 w-4 text-blue-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-blue-600\">\n                {totalPayouts.toLocaleString()}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Distributed to investors\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"glass-morphism\" data-testid=\"card-total-withdrawals\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Total Withdrawals\n              </CardTitle>\n              <TrendingDown className=\"h-4 w-4 text-orange-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-orange-600\">\n                {totalWithdrawals.toLocaleString()}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Processed withdrawals\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"glass-morphism\" data-testid=\"card-pending-withdrawals\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Pending Requests\n              </CardTitle>\n              <Clock className=\"h-4 w-4 text-yellow-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-yellow-600\">\n                {pendingWithdrawals}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Awaiting approval\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Search and Filter */}\n        <Card className=\"glass-morphism\">\n          <CardHeader>\n            <CardTitle>Search & Filter</CardTitle>\n            <CardDescription>Find transactions and withdrawals by investor name, reference, or description</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex gap-4\">\n              <div className=\"relative flex-1\">\n                <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search by investor name, reference, or description...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-9\"\n                  data-testid=\"input-search-transactions\"\n                />\n              </div>\n              <Select value={typeFilter} onValueChange={setTypeFilter}>\n                <SelectTrigger className=\"w-48\" data-testid=\"select-type-filter\">\n                  <Filter className=\"h-4 w-4 mr-2\" />\n                  <SelectValue placeholder=\"Filter by type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Types</SelectItem>\n                  <SelectItem value=\"investment\">Investment</SelectItem>\n                  <SelectItem value=\"payout\">Payout</SelectItem>\n                  <SelectItem value=\"withdrawal\">Withdrawal</SelectItem>\n                  <SelectItem value=\"dividend\">Dividend</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger className=\"w-48\" data-testid=\"select-status-filter\">\n                  <Filter className=\"h-4 w-4 mr-2\" />\n                  <SelectValue placeholder=\"Filter by status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Status</SelectItem>\n                  <SelectItem value=\"pending\">Pending</SelectItem>\n                  <SelectItem value=\"completed\">Completed</SelectItem>\n                  <SelectItem value=\"approved\">Approved</SelectItem>\n                  <SelectItem value=\"rejected\">Rejected</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Main Content Tabs */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"grid w-full grid-cols-3 bg-card/50 backdrop-blur-sm\">\n            <TabsTrigger value=\"transactions\" className=\"flex items-center gap-2\" data-testid=\"tab-transactions\">\n              <CreditCard className=\"h-4 w-4\" />\n              All Transactions\n            </TabsTrigger>\n            <TabsTrigger value=\"withdrawals\" className=\"flex items-center gap-2\" data-testid=\"tab-withdrawals\">\n              <Shield className=\"h-4 w-4\" />\n              Withdrawal Requests\n              {pendingWithdrawals > 0 && (\n                <Badge variant=\"destructive\" className=\"ml-1 px-1.5 py-0.5 text-xs\">\n                  {pendingWithdrawals}\n                </Badge>\n              )}\n            </TabsTrigger>\n            <TabsTrigger value=\"reports\" className=\"flex items-center gap-2\" data-testid=\"tab-reports\">\n              <BarChart3 className=\"h-4 w-4\" />\n              Reports & Analytics\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Transactions Tab */}\n          <TabsContent value=\"transactions\" className=\"space-y-6\">\n            <Card className=\"glass-morphism\">\n              <CardHeader>\n                <CardTitle>\n                  Transaction History ({filteredTransactions.length} transactions)\n                </CardTitle>\n                <CardDescription>\n                  Complete transaction details with AI risk assessment and investor information\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"rounded-md border\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Date</TableHead>\n                        <TableHead>Investor</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Amount</TableHead>\n                        <TableHead>Reference</TableHead>\n                        <TableHead>AI Risk</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {filteredTransactions.map((transaction) => {\n                        const investor = getInvestorById(transaction.investorId || '')\n                        return (\n                          <TableRow key={transaction.id} data-testid={`row-transaction-${transaction.id}`}>\n                            <TableCell>\n                              <div className=\"text-sm\">\n                                {format(new Date(transaction.createdAt!), 'MMM dd, yyyy')}\n                                <div className=\"text-xs text-muted-foreground\">\n                                  {format(new Date(transaction.createdAt!), 'HH:mm')}\n                                </div>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center gap-2\">\n                                <Avatar className=\"h-8 w-8\">\n                                  <AvatarImage src={investor?.profilePicture || undefined} alt={investor?.name || undefined} />\n                                  <AvatarFallback className=\"text-xs\">\n                                    {investor?.name?.split(' ').map(n => n[0]).join('') || 'U'}\n                                  </AvatarFallback>\n                                </Avatar>\n                                <div>\n                                  <div className=\"font-medium text-sm\">{investor?.name || 'Unknown'}</div>\n                                  <div className=\"text-xs text-muted-foreground\">{investor?.email}</div>\n                                </div>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={getTypeBadgeVariant(transaction.type)}>\n                                {transaction.type}\n                              </Badge>\n                            </TableCell>\n                            <TableCell className=\"font-mono\">\n                              <div className=\"text-sm font-bold\">\n                                {Number(transaction.amount).toLocaleString()}\n                              </div>\n                              {transaction.fee && Number(transaction.fee) > 0 && (\n                                <div className=\"text-xs text-muted-foreground\">\n                                  Fee: {Number(transaction.fee).toLocaleString()}\n                                </div>\n                              )}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"text-sm font-mono\">{transaction.reference}</div>\n                              <div className=\"text-xs text-muted-foreground\">\n                                {transaction.paymentMethod?.replace('_', ' ')}\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <div className={`text-sm font-bold ${getAIRiskColor(transaction.aiRiskScore)}`}>\n                                {transaction.aiRiskScore || '--'}/100\n                              </div>\n                              <div className=\"text-xs text-muted-foreground\">\n                                AI Score\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={getStatusBadgeVariant(transaction.status)}>\n                                {transaction.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => handleViewTransaction(transaction)}\n                                data-testid={`button-view-${transaction.id}`}\n                              >\n                                <Eye className=\"h-3 w-3 mr-1\" />\n                                View\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      })}\n                    </TableBody>\n                  </Table>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Withdrawals Tab */}\n          <TabsContent value=\"withdrawals\" className=\"space-y-6\">\n            <Card className=\"glass-morphism\">\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Shield className=\"h-5 w-5 text-primary\" />\n                      Withdrawal Requests ({filteredWithdrawals.length} requests)\n                    </CardTitle>\n                    <CardDescription>\n                      Manage investor withdrawal requests with secure approval workflow\n                    </CardDescription>\n                  </div>\n                  <div className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                    <Lock className=\"h-4 w-4\" />\n                    Secure authentication required\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"rounded-md border\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Date</TableHead>\n                        <TableHead>Investor</TableHead>\n                        <TableHead>Amount</TableHead>\n                        <TableHead>Reason</TableHead>\n                        <TableHead>Priority</TableHead>\n                        <TableHead>AI Risk</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {filteredWithdrawals.map((withdrawal) => {\n                        const investor = getInvestorById(withdrawal.investorId)\n                        return (\n                          <TableRow key={withdrawal.id} data-testid={`row-withdrawal-${withdrawal.id}`}>\n                            <TableCell>\n                              <div className=\"text-sm\">\n                                {format(new Date(withdrawal.requestedAt!), 'MMM dd, yyyy')}\n                                <div className=\"text-xs text-muted-foreground\">\n                                  {format(new Date(withdrawal.requestedAt!), 'HH:mm')}\n                                </div>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center gap-2\">\n                                <Avatar className=\"h-8 w-8\">\n                                  <AvatarImage src={investor?.profilePicture || undefined} alt={investor?.name || undefined} />\n                                  <AvatarFallback className=\"text-xs\">\n                                    {investor?.name?.split(' ').map(n => n[0]).join('') || 'U'}\n                                  </AvatarFallback>\n                                </Avatar>\n                                <div>\n                                  <div className=\"font-medium text-sm\">{investor?.name || 'Unknown'}</div>\n                                  <div className=\"text-xs text-muted-foreground\">\n                                    Tier: {investor?.investorTier || 'Unknown'}\n                                  </div>\n                                </div>\n                              </div>\n                            </TableCell>\n                            <TableCell className=\"font-mono font-bold\">\n                              {Number(withdrawal.amount).toLocaleString()}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"text-sm max-w-48 truncate\" title={withdrawal.reason || ''}>\n                                {withdrawal.reason || 'No reason provided'}\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={getPriorityBadgeVariant(withdrawal.priority || 'normal')}>\n                                {withdrawal.priority || 'normal'}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className={`text-sm font-bold ${getAIRiskColor(withdrawal.aiRiskScore)}`}>\n                                {withdrawal.aiRiskScore || '--'}/100\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={getStatusBadgeVariant(withdrawal.status)}>\n                                {withdrawal.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-1\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => handleViewWithdrawal(withdrawal)}\n                                  data-testid={`button-view-withdrawal-${withdrawal.id}`}\n                                >\n                                  <Eye className=\"h-3 w-3 mr-1\" />\n                                  View\n                                </Button>\n                                {withdrawal.status === 'pending' && (\n                                  <>\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"default\"\n                                      onClick={() => handleApproveWithdrawal(withdrawal.id)}\n                                      data-testid={`button-approve-withdrawal-${withdrawal.id}`}\n                                    >\n                                      <CheckCircle className=\"h-3 w-3 mr-1\" />\n                                      Approve\n                                    </Button>\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"destructive\"\n                                      onClick={() => handleRejectWithdrawal(withdrawal.id)}\n                                      data-testid={`button-reject-withdrawal-${withdrawal.id}`}\n                                    >\n                                      <XCircle className=\"h-3 w-3 mr-1\" />\n                                      Reject\n                                    </Button>\n                                  </>\n                                )}\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      })}\n                    </TableBody>\n                  </Table>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Reports Tab */}\n          <TabsContent value=\"reports\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <Card className=\"glass-morphism\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <BarChart3 className=\"h-5 w-5 text-primary\" />\n                    Transaction Analytics\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-3 bg-green-50 dark:bg-green-950/30 rounded-lg\">\n                    <span className=\"text-sm font-medium\">Completed Transactions</span>\n                    <span className=\"text-xl font-bold text-green-600\">\n                      {transactions.filter((t: Transaction) => t.status === 'completed').length}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-yellow-50 dark:bg-yellow-950/30 rounded-lg\">\n                    <span className=\"text-sm font-medium\">Pending Transactions</span>\n                    <span className=\"text-xl font-bold text-yellow-600\">\n                      {transactions.filter(t => t.status === 'pending').length}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-950/30 rounded-lg\">\n                    <span className=\"text-sm font-medium\">Average Processing Time</span>\n                    <span className=\"text-xl font-bold text-blue-600\">2.3h</span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"glass-morphism\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Brain className=\"h-5 w-5 text-primary\" />\n                    AI Performance Metrics\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between p-3 bg-green-50 dark:bg-green-950/30 rounded-lg\">\n                    <span className=\"text-sm font-medium\">AI Accuracy</span>\n                    <span className=\"text-xl font-bold text-green-600\">94.2%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 dark:bg-blue-950/30 rounded-lg\">\n                    <span className=\"text-sm font-medium\">Auto-Approved</span>\n                    <span className=\"text-xl font-bold text-blue-600\">78%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-orange-50 dark:bg-orange-950/30 rounded-lg\">\n                    <span className=\"text-sm font-medium\">Manual Reviews</span>\n                    <span className=\"text-xl font-bold text-orange-600\">22%</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n\n            <Card className=\"glass-morphism\">\n              <CardHeader>\n                <CardTitle>Export Reports</CardTitle>\n                <CardDescription>Generate comprehensive reports for analysis and compliance</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                  <Button \n                    variant=\"outline\" \n                    className=\"flex items-center gap-2\"\n                    onClick={handleExportTransactions}\n                    disabled={isExporting}\n                  >\n                    <FileText className=\"h-4 w-4\" />\n                    {isExporting ? 'Exporting...' : 'Transaction Summary'}\n                  </Button>\n                  <Button \n                    variant=\"outline\" \n                    className=\"flex items-center gap-2\"\n                    onClick={handleExportWithdrawals}\n                    disabled={isExporting}\n                  >\n                    <Shield className=\"h-4 w-4\" />\n                    {isExporting ? 'Exporting...' : 'Withdrawal Report'}\n                  </Button>\n                  <Button \n                    variant=\"outline\" \n                    className=\"flex items-center gap-2\"\n                    onClick={handleGenerateReport}\n                    disabled={isExporting}\n                  >\n                    <Brain className=\"h-4 w-4\" />\n                    {isExporting ? 'Generating...' : 'AI Analysis Report'}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Authentication Modal */}\n        <Dialog open={isAuthDialogOpen} onOpenChange={setIsAuthDialogOpen}>\n          <DialogContent className=\"sm:max-w-md\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <Shield className=\"h-5 w-5 text-primary\" />\n                Secure Authentication Required\n              </DialogTitle>\n              <DialogDescription>\n                Enter the 4-digit authentication code to {pendingAction?.type} this withdrawal request.\n              </DialogDescription>\n            </DialogHeader>\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"auth-password\">Authentication Code</Label>\n                <Input\n                  id=\"auth-password\"\n                  type=\"password\"\n                  placeholder=\"Enter 4-digit code\"\n                  value={authPassword}\n                  onChange={(e) => setAuthPassword(e.target.value)}\n                  maxLength={4}\n                  className=\"text-center text-lg tracking-widest\"\n                />\n                <p className=\"text-xs text-muted-foreground\">\n                  Demo code: 1234\n                </p>\n              </div>\n\n              {pendingAction?.type === 'reject' && (\n                <div className=\"space-y-4 border-t pt-4\">\n                  <div className=\"space-y-2\">\n                    <Label>Rejection Reason</Label>\n                    <Select value={rejectionReason} onValueChange={setRejectionReason}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select reason for rejection\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {rejectionReasons.map((reason) => (\n                          <SelectItem key={reason.value} value={reason.value}>\n                            {reason.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"rejection-comment\">Additional Comments</Label>\n                    <Textarea\n                      id=\"rejection-comment\"\n                      placeholder=\"Provide additional details for the rejection...\"\n                      value={rejectionComment}\n                      onChange={(e) => setRejectionComment(e.target.value)}\n                      rows={3}\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n            <DialogFooter>\n              <Button variant=\"outline\" onClick={() => setIsAuthDialogOpen(false)}>\n                Cancel\n              </Button>\n              <Button \n                onClick={handleAuthSubmit}\n                disabled={isProcessing || authPassword !== DUMMY_PASSWORD || (pendingAction?.type === 'reject' && !rejectionReason)}\n                variant={pendingAction?.type === 'reject' ? 'destructive' : 'default'}\n              >\n                {isProcessing ? (\n                  <>\n                    <Clock className=\"h-4 w-4 mr-2 animate-spin\" />\n                    Processing...\n                  </>\n                ) : (\n                  <>{pendingAction?.type === 'approve' ? 'Approve' : 'Reject'} Request</>\n                )}\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Transaction Detail Modal */}\n        <Dialog open={isTransactionDetailOpen} onOpenChange={setIsTransactionDetailOpen}>\n          <DialogContent className=\"sm:max-w-2xl max-h-[80vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <CreditCard className=\"h-5 w-5 text-primary\" />\n                Transaction Details\n              </DialogTitle>\n            </DialogHeader>\n            {selectedTransaction && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Transaction ID</Label>\n                    <p className=\"font-mono text-sm\">{selectedTransaction.id}</p>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Reference</Label>\n                    <p className=\"font-mono text-sm\">{selectedTransaction.reference}</p>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Amount</Label>\n                    <p className=\"font-bold\">{Number(selectedTransaction.amount).toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Fee</Label>\n                    <p className=\"font-mono text-sm\">{Number(selectedTransaction.fee || 0).toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Type</Label>\n                    <Badge variant={getTypeBadgeVariant(selectedTransaction.type)}>\n                      {selectedTransaction.type}\n                    </Badge>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Status</Label>\n                    <Badge variant={getStatusBadgeVariant(selectedTransaction.status)}>\n                      {selectedTransaction.status}\n                    </Badge>\n                  </div>\n                </div>\n\n                {selectedTransaction.description && (\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Description</Label>\n                    <p className=\"text-sm\">{selectedTransaction.description}</p>\n                  </div>\n                )}\n\n                {selectedTransaction.aiAnalysis && (\n                  <div className=\"bg-blue-50 dark:bg-blue-950/30 p-4 rounded-lg\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <Brain className=\"h-4 w-4 text-blue-600\" />\n                      <Label className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">AI Analysis</Label>\n                    </div>\n                    <p className=\"text-sm text-blue-700 dark:text-blue-300 mb-2\">{selectedTransaction.aiAnalysis}</p>\n                    <div className=\"flex items-center gap-4 text-xs\">\n                      <span>Risk Score: <span className={getAIRiskColor(selectedTransaction.aiRiskScore)}>{selectedTransaction.aiRiskScore}/100</span></span>\n                      <span>Recommendation: {selectedTransaction.aiRecommendation}</span>\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"grid grid-cols-2 gap-4 text-xs text-muted-foreground\">\n                  <div>\n                    <Label className=\"text-xs text-muted-foreground\">Created</Label>\n                    <p>{format(new Date(selectedTransaction.createdAt!), 'MMM dd, yyyy HH:mm')}</p>\n                  </div>\n                  {selectedTransaction.processedAt && (\n                    <div>\n                      <Label className=\"text-xs text-muted-foreground\">Processed</Label>\n                      <p>{format(new Date(selectedTransaction.processedAt), 'MMM dd, yyyy HH:mm')}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </DialogContent>\n        </Dialog>\n\n        {/* Withdrawal Detail Modal */}\n        <Dialog open={isWithdrawalDetailOpen} onOpenChange={setIsWithdrawalDetailOpen}>\n          <DialogContent className=\"sm:max-w-2xl max-h-[80vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <Shield className=\"h-5 w-5 text-primary\" />\n                Withdrawal Request Details\n              </DialogTitle>\n            </DialogHeader>\n            {selectedWithdrawal && (\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Request ID</Label>\n                    <p className=\"font-mono text-sm\">{selectedWithdrawal.id}</p>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Amount</Label>\n                    <p className=\"font-bold text-lg\">{Number(selectedWithdrawal.amount).toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Priority</Label>\n                    <Badge variant={getPriorityBadgeVariant(selectedWithdrawal.priority || 'normal')}>\n                      {selectedWithdrawal.priority || 'normal'}\n                    </Badge>\n                  </div>\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Status</Label>\n                    <Badge variant={getStatusBadgeVariant(selectedWithdrawal.status)}>\n                      {selectedWithdrawal.status}\n                    </Badge>\n                  </div>\n                </div>\n\n                {selectedWithdrawal.reason && (\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Reason for Withdrawal</Label>\n                    <p className=\"text-sm\">{selectedWithdrawal.reason}</p>\n                  </div>\n                )}\n\n                {selectedWithdrawal.bankAccount && (\n                  <div>\n                    <Label className=\"text-sm text-muted-foreground\">Bank Account Details</Label>\n                    <div className=\"bg-muted/50 p-3 rounded-lg text-sm font-mono\">\n                      {JSON.stringify(JSON.parse(selectedWithdrawal.bankAccount), null, 2)}\n                    </div>\n                  </div>\n                )}\n\n                {selectedWithdrawal.aiAnalysis && (\n                  <div className=\"bg-blue-50 dark:bg-blue-950/30 p-4 rounded-lg\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <Brain className=\"h-4 w-4 text-blue-600\" />\n                      <Label className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">AI Analysis</Label>\n                    </div>\n                    <p className=\"text-sm text-blue-700 dark:text-blue-300 mb-2\">{selectedWithdrawal.aiAnalysis}</p>\n                    <div className=\"flex items-center gap-4 text-xs\">\n                      <span>Risk Score: <span className={getAIRiskColor(selectedWithdrawal.aiRiskScore)}>{selectedWithdrawal.aiRiskScore}/100</span></span>\n                      <span>Recommendation: {selectedWithdrawal.aiRecommendation}</span>\n                    </div>\n                  </div>\n                )}\n\n                {selectedWithdrawal.status === 'rejected' && selectedWithdrawal.rejectionReason && (\n                  <div className=\"bg-red-50 dark:bg-red-950/30 p-4 rounded-lg\">\n                    <div className=\"flex items-center gap-2 mb-2\">\n                      <XCircle className=\"h-4 w-4 text-red-600\" />\n                      <Label className=\"text-sm font-medium text-red-800 dark:text-red-200\">Rejection Details</Label>\n                    </div>\n                    <p className=\"text-sm text-red-700 dark:text-red-300 mb-1\">\n                      Reason: {rejectionReasons.find(r => r.value === selectedWithdrawal.rejectionReason)?.label}\n                    </p>\n                    {selectedWithdrawal.rejectionComment && (\n                      <p className=\"text-sm text-red-700 dark:text-red-300\">\n                        Comment: {selectedWithdrawal.rejectionComment}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n                <div className=\"grid grid-cols-2 gap-4 text-xs text-muted-foreground\">\n                  <div>\n                    <Label className=\"text-xs text-muted-foreground\">Requested</Label>\n                    <p>{format(new Date(selectedWithdrawal.requestedAt!), 'MMM dd, yyyy HH:mm')}</p>\n                  </div>\n                  {selectedWithdrawal.reviewedAt && (\n                    <div>\n                      <Label className=\"text-xs text-muted-foreground\">Reviewed</Label>\n                      <p>{format(new Date(selectedWithdrawal.reviewedAt), 'MMM dd, yyyy HH:mm')}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  )\n}","size_bytes":62785},"client/src/components/examples/app-sidebar.tsx":{"content":"import { AppSidebar } from '../app-sidebar'\nimport { SidebarProvider } from \"@/components/ui/sidebar\"\n\nexport default function AppSidebarExample() {\n  const style = {\n    \"--sidebar-width\": \"20rem\",\n    \"--sidebar-width-icon\": \"4rem\",\n  };\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AppSidebar />\n        <div className=\"flex-1 p-6\">\n          <h2 className=\"text-2xl font-bold\">Main Content Area</h2>\n          <p className=\"text-muted-foreground\">The sidebar navigation is on the left</p>\n        </div>\n      </div>\n    </SidebarProvider>\n  )\n}","size_bytes":629},"client/src/components/examples/dashboard-chart.tsx":{"content":"import { DashboardChart } from '../dashboard-chart'\n\nconst mockData = [\n  { name: 'Jan', value: 2400 },\n  { name: 'Feb', value: 2210 },\n  { name: 'Mar', value: 2290 },\n  { name: 'Apr', value: 2000 },\n  { name: 'May', value: 2181 },\n  { name: 'Jun', value: 2500 },\n  { name: 'Jul', value: 2100 },\n]\n\nexport default function DashboardChartExample() {\n  return (\n    <div className=\"p-4 space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <DashboardChart\n          title=\"Monthly Investments\"\n          description=\"Investment volume over the last 7 months\"\n          data={mockData}\n          type=\"bar\"\n          dataKey=\"value\"\n        />\n        <DashboardChart\n          title=\"User Growth\"\n          description=\"New user registrations trend\"\n          data={mockData}\n          type=\"line\"\n          dataKey=\"value\"\n        />\n      </div>\n    </div>\n  )\n}","size_bytes":890},"client/src/components/examples/document-card.tsx":{"content":"import { DocumentCard } from '../document-card'\nimport { KycDocument } from '@shared/schema'\n\n// todo: remove mock functionality\nconst mockDocuments: KycDocument[] = [\n  {\n    id: '1',\n    investorId: 'investor-1',\n    documentType: 'national_id',\n    documentUrl: '/documents/national_id_001.pdf',\n    status: 'approved',\n    reviewNotes: null,\n    uploadedAt: new Date('2024-01-10'),\n  },\n  {\n    id: '2',\n    investorId: 'investor-1',\n    documentType: 'selfie',\n    documentUrl: '/documents/selfie_001.jpg',\n    status: 'pending',\n    reviewNotes: null,\n    uploadedAt: new Date('2024-01-12'),\n  },\n  {\n    id: '3',\n    investorId: 'investor-2',\n    documentType: 'proof_of_income',\n    documentUrl: '/documents/income_002.pdf',\n    status: 'rejected',\n    reviewNotes: 'Document is not clear enough. Please provide a higher quality scan.',\n    uploadedAt: new Date('2024-01-08'),\n  },\n  {\n    id: '4',\n    investorId: 'investor-3',\n    documentType: 'employment_letter',\n    documentUrl: '/documents/employment_003.pdf',\n    status: 'approved',\n    reviewNotes: null,\n    uploadedAt: new Date('2024-01-05'),\n  },\n]\n\nexport default function DocumentCardExample() {\n  const handleView = (id: string) => {\n    console.log('View document:', id)\n  }\n\n  const handleDownload = (id: string) => {\n    console.log('Download document:', id)\n  }\n\n  const handleDelete = (id: string) => {\n    console.log('Delete document:', id)\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4\">KYC Documents</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {mockDocuments.map((document) => (\n          <DocumentCard\n            key={document.id}\n            document={document}\n            onView={handleView}\n            onDownload={handleDownload}\n            onDelete={handleDelete}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}","size_bytes":1900},"client/src/components/examples/investor-table.tsx":{"content":"import { InvestorTable } from '../investor-table'\nimport { Investor } from '@shared/schema'\n\n// todo: remove mock functionality\nconst mockInvestors: Investor[] = [\n  {\n    id: '1',\n    name: 'Ahmed Al-Rashid',\n    email: 'ahmed.rashid@example.com',\n    phone: '+966 50 123 4567',\n    kycStatus: 'pending',\n    totalInvested: '150000',\n    activeProperties: 3,\n    monthlyIncome: '12500',\n    nationality: 'Saudi Arabia',\n    documentsUploaded: true,\n    createdAt: new Date('2024-01-15'),\n  },\n  {\n    id: '2',\n    name: 'Sarah Johnson',\n    email: 'sarah.johnson@example.com',\n    phone: '+966 55 987 6543',\n    kycStatus: 'approved',\n    totalInvested: '320000',\n    activeProperties: 5,\n    monthlyIncome: '28400',\n    nationality: 'United States',\n    documentsUploaded: true,\n    createdAt: new Date('2024-02-20'),\n  },\n  {\n    id: '3',\n    name: 'Mohammad Al-Zahra',\n    email: 'mohammad.zahra@example.com',\n    phone: '+966 56 456 7890',\n    kycStatus: 'rejected',\n    totalInvested: '0',\n    activeProperties: 0,\n    monthlyIncome: '0',\n    nationality: 'Saudi Arabia',\n    documentsUploaded: false,\n    createdAt: new Date('2024-03-10'),\n  },\n]\n\nexport default function InvestorTableExample() {\n  const handleApproveKyc = (investorId: string) => {\n    console.log('Approved KYC for investor:', investorId)\n  }\n\n  const handleRejectKyc = (investorId: string) => {\n    console.log('Rejected KYC for investor:', investorId)\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4\">Investor Management</h3>\n      <InvestorTable\n        investors={mockInvestors}\n        onApproveKyc={handleApproveKyc}\n        onRejectKyc={handleRejectKyc}\n      />\n    </div>\n  )\n}","size_bytes":1704},"client/src/components/examples/notification-card.tsx":{"content":"import { NotificationCard } from '../notification-card'\nimport { Notification } from '@shared/schema'\n\n// todo: remove mock functionality\nconst mockNotifications: Notification[] = [\n  {\n    id: '1',\n    title: 'New Property Added',\n    message: 'A new luxury apartment complex has been added to the platform and is now available for investment.',\n    type: 'info',\n    isRead: false,\n    createdAt: new Date('2024-01-15T10:30:00'),\n  },\n  {\n    id: '2',\n    title: 'KYC Approved',\n    message: 'Ahmed Al-Rashid\\'s KYC verification has been successfully approved and they can now start investing.',\n    type: 'success',\n    isRead: false,\n    createdAt: new Date('2024-01-14T15:45:00'),\n  },\n  {\n    id: '3',\n    title: 'Payment Failed',\n    message: 'Investment payment for Property #2847 failed due to insufficient funds. Please review the transaction.',\n    type: 'error',\n    isRead: true,\n    createdAt: new Date('2024-01-13T09:15:00'),\n  },\n  {\n    id: '4',\n    title: 'Document Review Required',\n    message: 'Multiple KYC documents are pending review. Please check the Users & KYC section.',\n    type: 'warning',\n    isRead: false,\n    createdAt: new Date('2024-01-12T14:20:00'),\n  },\n]\n\nexport default function NotificationCardExample() {\n  const handleMarkAsRead = (id: string) => {\n    console.log('Marked as read:', id)\n  }\n\n  const handleDelete = (id: string) => {\n    console.log('Deleted notification:', id)\n  }\n\n  return (\n    <div className=\"p-4 space-y-4\">\n      <h3 className=\"text-lg font-semibold\">Notifications</h3>\n      <div className=\"space-y-3\">\n        {mockNotifications.map((notification) => (\n          <NotificationCard\n            key={notification.id}\n            notification={notification}\n            onMarkAsRead={handleMarkAsRead}\n            onDelete={handleDelete}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}","size_bytes":1858},"client/src/components/examples/property-card.tsx":{"content":"import { PropertyCard } from '../property-card'\nimport { Property } from '@shared/schema'\nimport apartmentImg from '@assets/generated_images/luxury_apartment_building_exterior_e11af77f.png'\nimport officeImg from '@assets/generated_images/commercial_office_building_f8c8d53a.png'\n\nconst mockProperties: Property[] = [\n  {\n    id: '1',\n    title: 'Luxury Apartment Complex',\n    description: 'Modern residential complex in the heart of Riyadh with premium amenities and excellent rental yield potential.',\n    location: 'Olaya District, Riyadh',\n    price: '2500000',\n    propertyType: 'residential',\n    yield: '8.5',\n    ownershipCap: 75,\n    status: 'live',\n    images: [apartmentImg],\n    createdAt: new Date(),\n  },\n  {\n    id: '2',\n    title: 'Commercial Office Tower',\n    description: 'Prime commercial space in the business district with high-end office facilities and parking.',\n    location: 'King Fahd District, Riyadh',\n    price: '8750000',\n    propertyType: 'commercial',\n    yield: '12.2',\n    ownershipCap: 60,\n    status: 'upcoming',\n    images: [officeImg],\n    createdAt: new Date(),\n  }\n]\n\nexport default function PropertyCardExample() {\n  const handleEdit = (id: string) => {\n    console.log('Edit property:', id)\n  }\n\n  const handleDelete = (id: string) => {\n    console.log('Delete property:', id)\n  }\n\n  return (\n    <div className=\"p-4 grid grid-cols-1 md:grid-cols-2 gap-6\">\n      {mockProperties.map((property) => (\n        <PropertyCard\n          key={property.id}\n          property={property}\n          onEdit={handleEdit}\n          onDelete={handleDelete}\n        />\n      ))}\n    </div>\n  )\n}","size_bytes":1623},"client/src/components/examples/property-form.tsx":{"content":"import { PropertyForm } from '../property-form'\n\nexport default function PropertyFormExample() {\n  const handleSubmit = (data: any) => {\n    console.log('Form submitted with data:', data)\n  }\n\n  const handleCancel = () => {\n    console.log('Form cancelled')\n  }\n\n  return (\n    <div className=\"p-4 max-w-4xl mx-auto\">\n      <h3 className=\"text-lg font-semibold mb-4\">Property Form</h3>\n      <PropertyForm\n        onSubmit={handleSubmit}\n        onCancel={handleCancel}\n      />\n    </div>\n  )\n}","size_bytes":495},"client/src/components/examples/stat-card.tsx":{"content":"import { StatCard } from '../stat-card'\nimport { Users, Building2, TrendingUp, DollarSign } from 'lucide-react'\n\nexport default function StatCardExample() {\n  return (\n    <div className=\"p-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n      <StatCard\n        title=\"Total Users\"\n        value=\"2,847\"\n        change=\"+12% from last month\"\n        changeType=\"positive\"\n        icon={Users}\n      />\n      <StatCard\n        title=\"Active Properties\"\n        value=\"24\"\n        change=\"+3 new this week\"\n        changeType=\"positive\"\n        icon={Building2}\n      />\n      <StatCard\n        title=\"Total Investments\"\n        value=\"SAR 14.2M\"\n        change=\"+8% from last month\"\n        changeType=\"positive\"\n        icon={TrendingUp}\n      />\n      <StatCard\n        title=\"Monthly Revenue\"\n        value=\"SAR 890K\"\n        change=\"-2% from last month\"\n        changeType=\"negative\"\n        icon={DollarSign}\n      />\n    </div>\n  )\n}","size_bytes":947},"client/src/components/examples/theme-toggle.tsx":{"content":"import { ThemeProvider } from '../theme-provider'\nimport { ThemeToggle } from '../theme-toggle'\n\nexport default function ThemeToggleExample() {\n  return (\n    <ThemeProvider>\n      <div className=\"p-4 space-y-4\">\n        <h3 className=\"text-lg font-semibold\">Theme Toggle</h3>\n        <ThemeToggle />\n      </div>\n    </ThemeProvider>\n  )\n}","size_bytes":340},"client/src/components/examples/transaction-table.tsx":{"content":"import { TransactionTable } from '../transaction-table'\nimport { Transaction } from '@shared/schema'\n\n// todo: remove mock functionality\nconst mockTransactions: Transaction[] = [\n  {\n    id: '1',\n    investorId: 'investor-1',\n    propertyId: 'property-1',\n    type: 'investment',\n    amount: '50000',\n    status: 'pending',\n    createdAt: new Date('2024-01-15'),\n  },\n  {\n    id: '2',\n    investorId: 'investor-2',\n    propertyId: 'property-2',\n    type: 'payout',\n    amount: '5250',\n    status: 'completed',\n    createdAt: new Date('2024-01-20'),\n  },\n  {\n    id: '3',\n    investorId: 'investor-1',\n    propertyId: null,\n    type: 'withdrawal',\n    amount: '15000',\n    status: 'pending',\n    createdAt: new Date('2024-02-01'),\n  },\n  {\n    id: '4',\n    investorId: 'investor-3',\n    propertyId: 'property-1',\n    type: 'investment',\n    amount: '75000',\n    status: 'rejected',\n    createdAt: new Date('2024-02-05'),\n  },\n]\n\nexport default function TransactionTableExample() {\n  const handleApprove = (transactionId: string) => {\n    console.log('Approved transaction:', transactionId)\n  }\n\n  const handleReject = (transactionId: string) => {\n    console.log('Rejected transaction:', transactionId)\n  }\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4\">Transaction Management</h3>\n      <TransactionTable\n        transactions={mockTransactions}\n        onApprove={handleApprove}\n        onReject={handleReject}\n      />\n    </div>\n  )\n}","size_bytes":1476},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/investors.tsx":{"content":"import { useState } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Search, Filter, Eye, TrendingUp, TrendingDown, Building, Wallet, ArrowUpRight, ArrowDownRight, Calendar, MapPin, Phone, Mail, User, FileText, CreditCard, Banknote, PieChart, Shield, CheckCircle, XCircle, Clock, AlertTriangle, Download, ExternalLink } from \"lucide-react\"\nimport { Investor, Investment, Transaction, PortfolioSummary, KycDocument } from \"@shared/schema\"\n\n// Safe helper functions for nullable values\nconst safeParseNumber = (value: string | number | null | undefined, defaultValue: number = 0): number => {\n  if (value === null || value === undefined) return defaultValue\n  const parsed = typeof value === 'string' ? parseFloat(value) : value\n  return isNaN(parsed) ? defaultValue : parsed\n}\n\nconst safeParseString = (value: string | null | undefined, defaultValue: string = '0'): string => {\n  return value ?? defaultValue\n}\n\nconst safePerformanceScore = (score: number | null | undefined): number => {\n  return score ?? 50 // Default performance score\n}\n\ninterface InvestorWithPortfolio extends Investor {\n  investments: Investment[]\n  transactions: Transaction[]\n  portfolio: PortfolioSummary\n  kycDocuments?: KycDocument[]\n}\n\nexport default function Investors() {\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [jobCategoryFilter, setJobCategoryFilter] = useState(\"all\")\n  const [investorTierFilter, setInvestorTierFilter] = useState(\"all\")\n  const [languageFilter, setLanguageFilter] = useState(\"all\")\n  const [selectedInvestor, setSelectedInvestor] = useState<InvestorWithPortfolio | null>(null)\n  const [isProfileModalOpen, setIsProfileModalOpen] = useState(false)\n\n  // Comprehensive mock investors data - only KYC approved customers\n  const mockInvestors: InvestorWithPortfolio[] = [\n    // TOP TIER INVESTORS (Executives)\n    {\n      // Executive - High Investment\n      id: '1',\n      name: 'Ahmed Al-Mansouri',\n      firstName: 'Ahmed',\n      lastName: 'Al-Mansouri',\n      email: 'ahmed.mansouri@aramco.com',\n      phone: '+966 50 123 4567',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1975-03-15'),\n      occupation: 'Chief Technology Officer',\n      jobCategory: 'executive',\n      jobTitle: 'Chief Technology Officer',\n      company: 'Saudi Aramco',\n      workExperience: 25,\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'King Fahd District, Riyadh',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '2850000',\n      activeProperties: 8,\n      monthlyIncome: '85000',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-01-05T08:30:00Z'),\n      kycSubmittedAt: new Date('2024-01-10T14:22:00Z'),\n      aiRiskScore: 8,\n      investorTier: 'top',\n      preferredLanguage: 'en',\n      languagesSpoken: ['en', 'ar'],\n      createdAt: new Date('2024-01-05'),\n      updatedAt: new Date('2024-01-15'),\n\n      // Portfolio summary - High tier investor\n      portfolio: {\n        id: 'port1',\n        investorId: '1',\n        totalInvestment: '2850000',\n        currentValue: '3265000',\n        totalReturns: '415000',\n        totalDividends: '128500',\n        totalWithdrawals: '50000',\n        unrealizedGains: '286500',\n        realizedGains: '128500',\n        riskScore: 8,\n        performanceScore: 96,\n        lastUpdated: new Date('2024-04-15'),\n      },\n\n      // Investments - Multiple large properties\n      investments: [\n        {\n          id: 'inv1',\n          investorId: '1',\n          propertyId: 'prop1',\n          investmentAmount: '800000',\n          ownershipPercentage: '25.5',\n          expectedReturn: '8.2',\n          currentValue: '912000',\n          totalReturns: '112000',\n          totalDividends: '42000',\n          status: 'active',\n          investmentDate: new Date('2024-01-10T10:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-01-10'),\n          updatedAt: new Date('2024-01-10'),\n        },\n        {\n          id: 'inv2',\n          investorId: '1',\n          propertyId: 'prop2',\n          investmentAmount: '650000',\n          ownershipPercentage: '22.3',\n          expectedReturn: '7.8',\n          currentValue: '739000',\n          totalReturns: '89000',\n          totalDividends: '35500',\n          status: 'active',\n          investmentDate: new Date('2024-01-25T14:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-01-25'),\n          updatedAt: new Date('2024-01-25'),\n        },\n        {\n          id: 'inv3',\n          investorId: '1',\n          propertyId: 'prop3',\n          investmentAmount: '500000',\n          ownershipPercentage: '18.7',\n          expectedReturn: '9.1',\n          currentValue: '585000',\n          totalReturns: '85000',\n          totalDividends: '28500',\n          status: 'active',\n          investmentDate: new Date('2024-02-15T16:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-15'),\n          updatedAt: new Date('2024-02-15'),\n        },\n        {\n          id: 'inv4',\n          investorId: '1',\n          propertyId: 'prop4',\n          investmentAmount: '450000',\n          ownershipPercentage: '16.2',\n          expectedReturn: '8.5',\n          currentValue: '518000',\n          totalReturns: '68000',\n          totalDividends: '22500',\n          status: 'active',\n          investmentDate: new Date('2024-03-01T11:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-01'),\n          updatedAt: new Date('2024-03-01'),\n        },\n        {\n          id: 'inv5',\n          investorId: '1',\n          propertyId: 'prop5',\n          investmentAmount: '450000',\n          ownershipPercentage: '15.8',\n          expectedReturn: '7.9',\n          currentValue: '511000',\n          totalReturns: '61000',\n          totalDividends: '19000',\n          status: 'active',\n          investmentDate: new Date('2024-03-20T09:15:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-20'),\n          updatedAt: new Date('2024-03-20'),\n        }\n      ],\n\n      // Transactions - High value transactions\n      transactions: [\n        {\n          id: 'tx1',\n          investorId: '1',\n          propertyId: 'prop1',\n          type: 'investment',\n          amount: '800000',\n          fee: '8000',\n          description: 'Major investment in Premium Commercial Tower',\n          reference: 'INV-001-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****4567' }),\n          processedAt: new Date('2024-01-10T10:30:00Z'),\n          createdAt: new Date('2024-01-10T08:15:00Z'),\n          updatedAt: new Date('2024-01-10T10:30:00Z'),\n        },\n        {\n          id: 'tx2',\n          investorId: '1',\n          propertyId: null,\n          type: 'dividend',\n          amount: '128500',\n          fee: '0',\n          description: 'Quarterly dividend payments (all properties)',\n          reference: 'DIV-Q1-2024-ALL',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****4567' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        },\n        {\n          id: 'tx3',\n          investorId: '1',\n          propertyId: null,\n          type: 'withdrawal',\n          amount: '50000',\n          fee: '500',\n          description: 'Partial profit withdrawal for personal use',\n          reference: 'WTH-001-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****4567' }),\n          processedAt: new Date('2024-03-15T14:20:00Z'),\n          createdAt: new Date('2024-03-15T13:10:00Z'),\n          updatedAt: new Date('2024-03-15T14:20:00Z'),\n        }\n      ],\n\n      // KYC Documents - Executive level comprehensive documentation\n      kycDocuments: [\n        {\n          id: 'kyc1',\n          investorId: '1',\n          documentType: 'national_id',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-national-id.pdf',\n          status: 'approved',\n          reviewNotes: 'High-quality scan, all security features verified. Document issued by Ministry of Interior.',\n          reviewedBy: 'admin1',\n          isAuthentic: true,\n          confidenceScore: 98,\n          extractedData: JSON.stringify({\n            idNumber: '1234567890',\n            fullName: 'Ahmed bin Abdullah Al-Mansouri',\n            dateOfBirth: '1975-03-15',\n            placeOfBirth: 'Riyadh',\n            nationality: 'Saudi Arabia',\n            issueDate: '2020-01-15',\n            expiryDate: '2030-01-15'\n          }),\n          uploadedAt: new Date('2024-01-08T14:30:00Z'),\n          reviewedAt: new Date('2024-01-09T10:15:00Z'),\n        },\n        {\n          id: 'kyc2',\n          investorId: '1',\n          documentType: 'passport',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-passport.pdf',\n          status: 'approved',\n          reviewNotes: 'Saudi passport with multiple travel stamps. All security features authentic.',\n          reviewedBy: 'admin1',\n          isAuthentic: true,\n          confidenceScore: 97,\n          extractedData: JSON.stringify({\n            passportNumber: 'A12345678',\n            fullName: 'Ahmed Abdullah Al-Mansouri',\n            nationality: 'Saudi Arabia',\n            dateOfBirth: '1975-03-15',\n            placeOfBirth: 'Riyadh',\n            issueDate: '2022-05-20',\n            expiryDate: '2032-05-20'\n          }),\n          uploadedAt: new Date('2024-01-08T14:45:00Z'),\n          reviewedAt: new Date('2024-01-09T10:30:00Z'),\n        },\n        {\n          id: 'kyc3',\n          investorId: '1',\n          documentType: 'selfie',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-selfie.jpg',\n          status: 'approved',\n          reviewNotes: 'Clear facial biometric match with official documents. Liveness detection passed.',\n          reviewedBy: 'admin1',\n          isAuthentic: true,\n          confidenceScore: 99,\n          extractedData: JSON.stringify({\n            biometricMatch: 'verified',\n            livenessDetection: 'passed',\n            faceMatchConfidence: 99.2,\n            qualityScore: 95\n          }),\n          uploadedAt: new Date('2024-01-08T15:00:00Z'),\n          reviewedAt: new Date('2024-01-09T11:00:00Z'),\n        },\n        {\n          id: 'kyc4',\n          investorId: '1',\n          documentType: 'employment_letter',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-employment.pdf',\n          status: 'approved',\n          reviewNotes: 'Official Saudi Aramco letterhead with HR seal. Position and salary confirmed.',\n          reviewedBy: 'admin2',\n          isAuthentic: true,\n          confidenceScore: 96,\n          extractedData: JSON.stringify({\n            company: 'Saudi Aramco',\n            position: 'Chief Technology Officer',\n            employmentType: 'permanent',\n            monthlySalary: '85000',\n            currency: 'SAR',\n            startDate: '2019-01-15',\n            hrContact: '+966-13-872-0000'\n          }),\n          uploadedAt: new Date('2024-01-08T15:30:00Z'),\n          reviewedAt: new Date('2024-01-09T14:20:00Z'),\n        },\n        {\n          id: 'kyc5',\n          investorId: '1',\n          documentType: 'bank_statement',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-bank-statement.pdf',\n          status: 'approved',\n          reviewNotes: 'Al Rajhi Bank statement showing consistent high income and substantial savings.',\n          reviewedBy: 'admin2',\n          isAuthentic: true,\n          confidenceScore: 95,\n          extractedData: JSON.stringify({\n            bank: 'Al Rajhi Bank',\n            accountType: 'current',\n            averageBalance: '2450000',\n            currency: 'SAR',\n            statementPeriod: '2023-10 to 2024-01',\n            regularIncome: true,\n            transactionVolume: 'high'\n          }),\n          uploadedAt: new Date('2024-01-09T09:00:00Z'),\n          reviewedAt: new Date('2024-01-09T16:45:00Z'),\n        },\n        {\n          id: 'kyc6',\n          investorId: '1',\n          documentType: 'address_proof',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-utility-bill.pdf',\n          status: 'approved',\n          reviewNotes: 'Saudi Electricity Company bill matching address on official documents.',\n          reviewedBy: 'admin1',\n          isAuthentic: true,\n          confidenceScore: 94,\n          extractedData: JSON.stringify({\n            address: 'King Fahd District, Riyadh',\n            utilityProvider: 'Saudi Electricity Company',\n            billDate: '2024-01-05',\n            accountHolder: 'Ahmed Al-Mansouri',\n            serviceAddress: 'King Fahd District, Riyadh 12271'\n          }),\n          uploadedAt: new Date('2024-01-09T10:15:00Z'),\n          reviewedAt: new Date('2024-01-10T09:30:00Z'),\n        },\n        {\n          id: 'kyc7',\n          investorId: '1',\n          documentType: 'proof_of_income',\n          documentUrl: 'https://docs.example.com/kyc/ahmed-mansouri-tax-certificate.pdf',\n          status: 'approved',\n          reviewNotes: 'ZATCA tax certificate confirming declared income and tax compliance.',\n          reviewedBy: 'admin2',\n          isAuthentic: true,\n          confidenceScore: 97,\n          extractedData: JSON.stringify({\n            taxAuthority: 'ZATCA',\n            taxYear: '2023',\n            declaredIncome: '1020000',\n            currency: 'SAR',\n            taxStatus: 'compliant',\n            certificateNumber: 'TAX-2023-891234'\n          }),\n          uploadedAt: new Date('2024-01-09T11:30:00Z'),\n          reviewedAt: new Date('2024-01-10T13:15:00Z'),\n        }\n      ]\n    },\n\n    // SECOND TOP TIER INVESTOR (Executive - International)\n    {\n      id: '2',\n      name: 'Dr. Sarah Al-Qahtani',\n      firstName: 'Sarah',\n      lastName: 'Al-Qahtani',\n      email: 'sarah.qahtani@kfsh.med.sa',\n      phone: '+966 55 234 5678',\n      salutation: 'Dr',\n      gender: 'female',\n      dateOfBirth: new Date('1978-11-22'),\n      occupation: 'Hospital Chief Executive',\n      jobCategory: 'executive',\n      jobTitle: 'Chief Executive Officer',\n      company: 'King Faisal Specialist Hospital',\n      workExperience: 22,\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'Diplomatic Quarter, Riyadh',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b5b0c8d1?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '1950000',\n      activeProperties: 6,\n      monthlyIncome: '72000',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-01-08T09:15:00Z'),\n      kycSubmittedAt: new Date('2024-01-12T16:30:00Z'),\n      aiRiskScore: 12,\n      investorTier: 'top',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en', 'fr'],\n      createdAt: new Date('2024-01-08'),\n      updatedAt: new Date('2024-01-18'),\n\n      portfolio: {\n        id: 'port2',\n        investorId: '2',\n        totalInvestment: '1950000',\n        currentValue: '2243000',\n        totalReturns: '293000',\n        totalDividends: '89500',\n        totalWithdrawals: '25000',\n        unrealizedGains: '203500',\n        realizedGains: '89500',\n        riskScore: 12,\n        performanceScore: 94,\n        lastUpdated: new Date('2024-04-10'),\n      },\n\n      investments: [\n        {\n          id: 'inv6',\n          investorId: '2',\n          propertyId: 'prop6',\n          investmentAmount: '600000',\n          ownershipPercentage: '21.5',\n          expectedReturn: '8.5',\n          currentValue: '696000',\n          totalReturns: '96000',\n          totalDividends: '32000',\n          status: 'active',\n          investmentDate: new Date('2024-01-18T13:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-01-18'),\n          updatedAt: new Date('2024-01-18'),\n        },\n        {\n          id: 'inv7',\n          investorId: '2',\n          propertyId: 'prop7',\n          investmentAmount: '450000',\n          ownershipPercentage: '17.4',\n          expectedReturn: '9.1',\n          currentValue: '531000',\n          totalReturns: '81000',\n          totalDividends: '28500',\n          status: 'active',\n          investmentDate: new Date('2024-02-05T10:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-05'),\n          updatedAt: new Date('2024-02-05'),\n        },\n        {\n          id: 'inv8',\n          investorId: '2',\n          propertyId: 'prop8',\n          investmentAmount: '450000',\n          ownershipPercentage: '16.8',\n          expectedReturn: '7.9',\n          currentValue: '512000',\n          totalReturns: '62000',\n          totalDividends: '29000',\n          status: 'active',\n          investmentDate: new Date('2024-02-25T15:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-25'),\n          updatedAt: new Date('2024-02-25'),\n        },\n        {\n          id: 'inv9',\n          investorId: '2',\n          propertyId: 'prop9',\n          investmentAmount: '450000',\n          ownershipPercentage: '15.2',\n          expectedReturn: '8.3',\n          currentValue: '504000',\n          totalReturns: '54000',\n          totalDividends: '18500',\n          status: 'active',\n          investmentDate: new Date('2024-03-12T12:00:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-12'),\n          updatedAt: new Date('2024-03-12'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx4',\n          investorId: '2',\n          propertyId: 'prop6',\n          type: 'investment',\n          amount: '600000',\n          fee: '6000',\n          description: 'Investment in Medical District Complex',\n          reference: 'INV-002-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'SABB Bank', account: '****9876' }),\n          processedAt: new Date('2024-01-18T13:20:00Z'),\n          createdAt: new Date('2024-01-18T11:00:00Z'),\n          updatedAt: new Date('2024-01-18T13:20:00Z'),\n        },\n        {\n          id: 'tx5',\n          investorId: '2',\n          propertyId: null,\n          type: 'dividend',\n          amount: '89500',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'SABB Bank', account: '****9876' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    // MANAGEMENT TIER INVESTORS\n    {\n      id: '3',\n      name: 'Khalid Al-Mutairi',\n      firstName: 'Khalid',\n      lastName: 'Al-Mutairi',\n      email: 'khalid.mutairi@sabic.com',\n      phone: '+966 53 345 6789',\n      salutation: 'Eng',\n      gender: 'male',\n      dateOfBirth: new Date('1982-09-30'),\n      occupation: 'Regional Operations Manager',\n      jobCategory: 'management',\n      jobTitle: 'Regional Operations Manager',\n      company: 'SABIC',\n      workExperience: 18,\n      city: 'Dammam',\n      country: 'Saudi Arabia',\n      address: 'Al-Khobar, Eastern Province',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1612349317150-e413f6a5b16d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '875000',\n      activeProperties: 4,\n      monthlyIncome: '35000',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-01-12T07:20:00Z'),\n      kycSubmittedAt: new Date('2024-01-18T12:45:00Z'),\n      aiRiskScore: 18,\n      investorTier: 'medium',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-01-12'),\n      updatedAt: new Date('2024-01-25'),\n\n      portfolio: {\n        id: 'port3',\n        investorId: '3',\n        totalInvestment: '875000',\n        currentValue: '1015000',\n        totalReturns: '140000',\n        totalDividends: '52500',\n        totalWithdrawals: '15000',\n        unrealizedGains: '87500',\n        realizedGains: '52500',\n        riskScore: 18,\n        performanceScore: 88,\n        lastUpdated: new Date('2024-04-08'),\n      },\n\n      investments: [\n        {\n          id: 'inv10',\n          investorId: '3',\n          propertyId: 'prop10',\n          investmentAmount: '300000',\n          ownershipPercentage: '19.3',\n          expectedReturn: '8.2',\n          currentValue: '345000',\n          totalReturns: '45000',\n          totalDividends: '18200',\n          status: 'active',\n          investmentDate: new Date('2024-01-25T13:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-01-25'),\n          updatedAt: new Date('2024-01-25'),\n        },\n        {\n          id: 'inv11',\n          investorId: '3',\n          propertyId: 'prop11',\n          investmentAmount: '250000',\n          ownershipPercentage: '17.4',\n          expectedReturn: '9.1',\n          currentValue: '290000',\n          totalReturns: '40000',\n          totalDividends: '15500',\n          status: 'active',\n          investmentDate: new Date('2024-02-10T10:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-10'),\n          updatedAt: new Date('2024-02-10'),\n        },\n        {\n          id: 'inv12',\n          investorId: '3',\n          propertyId: 'prop12',\n          investmentAmount: '175000',\n          ownershipPercentage: '12.1',\n          expectedReturn: '7.9',\n          currentValue: '196000',\n          totalReturns: '21000',\n          totalDividends: '9800',\n          status: 'active',\n          investmentDate: new Date('2024-03-05T15:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-05'),\n          updatedAt: new Date('2024-03-05'),\n        },\n        {\n          id: 'inv13',\n          investorId: '3',\n          propertyId: 'prop13',\n          investmentAmount: '150000',\n          ownershipPercentage: '11.2',\n          expectedReturn: '8.7',\n          currentValue: '184000',\n          totalReturns: '34000',\n          totalDividends: '9000',\n          status: 'active',\n          investmentDate: new Date('2024-03-22T12:00:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-22'),\n          updatedAt: new Date('2024-03-22'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx6',\n          investorId: '3',\n          propertyId: 'prop10',\n          type: 'investment',\n          amount: '300000',\n          fee: '3000',\n          description: 'Investment in Eastern Province Industrial Complex',\n          reference: 'INV-003-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'NCB Bank', account: '****1234' }),\n          processedAt: new Date('2024-01-25T13:20:00Z'),\n          createdAt: new Date('2024-01-25T11:00:00Z'),\n          updatedAt: new Date('2024-01-25T13:20:00Z'),\n        },\n        {\n          id: 'tx7',\n          investorId: '3',\n          propertyId: null,\n          type: 'dividend',\n          amount: '52500',\n          fee: '0',\n          description: 'Quarterly dividend payments (all properties)',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'NCB Bank', account: '****1234' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '4',\n      name: 'Fatima Al-Zahra',\n      firstName: 'Fatima',\n      lastName: 'Al-Zahra',\n      email: 'fatima.zahra@stc.com.sa',\n      phone: '+966 55 987 6543',\n      salutation: 'Mrs',\n      gender: 'female',\n      dateOfBirth: new Date('1985-07-22'),\n      occupation: 'Marketing Director',\n      jobCategory: 'management',\n      jobTitle: 'Marketing Director',\n      company: 'Saudi Telecom Company',\n      workExperience: 15,\n      city: 'Jeddah',\n      country: 'Saudi Arabia',\n      address: 'Al-Hamra District, Jeddah',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '625000',\n      activeProperties: 3,\n      monthlyIncome: '28500',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-01-15T12:15:00Z'),\n      kycSubmittedAt: new Date('2024-01-20T16:45:00Z'),\n      aiRiskScore: 22,\n      investorTier: 'medium',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-01-15'),\n      updatedAt: new Date('2024-01-28'),\n\n      portfolio: {\n        id: 'port4',\n        investorId: '4',\n        totalInvestment: '625000',\n        currentValue: '718750',\n        totalReturns: '93750',\n        totalDividends: '38200',\n        totalWithdrawals: '0',\n        unrealizedGains: '55550',\n        realizedGains: '38200',\n        riskScore: 22,\n        performanceScore: 91,\n        lastUpdated: new Date('2024-04-05'),\n      },\n\n      investments: [\n        {\n          id: 'inv14',\n          investorId: '4',\n          propertyId: 'prop14',\n          investmentAmount: '275000',\n          ownershipPercentage: '16.6',\n          expectedReturn: '8.5',\n          currentValue: '315000',\n          totalReturns: '40000',\n          totalDividends: '16200',\n          status: 'active',\n          investmentDate: new Date('2024-01-28T09:15:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-01-28'),\n          updatedAt: new Date('2024-01-28'),\n        },\n        {\n          id: 'inv15',\n          investorId: '4',\n          propertyId: 'prop15',\n          investmentAmount: '200000',\n          ownershipPercentage: '13.8',\n          expectedReturn: '9.2',\n          currentValue: '235000',\n          totalReturns: '35000',\n          totalDividends: '12500',\n          status: 'active',\n          investmentDate: new Date('2024-02-18T11:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-18'),\n          updatedAt: new Date('2024-02-18'),\n        },\n        {\n          id: 'inv16',\n          investorId: '4',\n          propertyId: 'prop16',\n          investmentAmount: '150000',\n          ownershipPercentage: '11.2',\n          expectedReturn: '7.8',\n          currentValue: '168750',\n          totalReturns: '18750',\n          totalDividends: '9500',\n          status: 'active',\n          investmentDate: new Date('2024-03-08T14:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-08'),\n          updatedAt: new Date('2024-03-08'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx8',\n          investorId: '4',\n          propertyId: 'prop14',\n          type: 'investment',\n          amount: '275000',\n          fee: '2750',\n          description: 'Investment in Jeddah Commercial Hub',\n          reference: 'INV-004-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Arab National Bank', account: '****5432' }),\n          processedAt: new Date('2024-01-28T09:15:00Z'),\n          createdAt: new Date('2024-01-28T08:00:00Z'),\n          updatedAt: new Date('2024-01-28T09:15:00Z'),\n        },\n        {\n          id: 'tx9',\n          investorId: '4',\n          propertyId: null,\n          type: 'dividend',\n          amount: '38200',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Arab National Bank', account: '****5432' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    // PROFESSIONAL TIER INVESTORS\n    {\n      id: '5',\n      name: 'Dr. Omar Al-Rashid',\n      firstName: 'Omar',\n      lastName: 'Al-Rashid',\n      email: 'omar.rashid@ksu.edu.sa',\n      phone: '+966 56 456 7890',\n      salutation: 'Dr',\n      gender: 'male',\n      dateOfBirth: new Date('1980-04-12'),\n      occupation: 'Petroleum Engineer',\n      jobCategory: 'professional',\n      jobTitle: 'Senior Petroleum Engineer',\n      company: 'King Saud University',\n      workExperience: 20,\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'Al-Narjis District, Riyadh',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '485000',\n      activeProperties: 3,\n      monthlyIncome: '22500',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-01-20T10:30:00Z'),\n      kycSubmittedAt: new Date('2024-01-25T14:22:00Z'),\n      aiRiskScore: 28,\n      investorTier: 'medium',\n      preferredLanguage: 'en',\n      languagesSpoken: ['en', 'ar'],\n      createdAt: new Date('2024-01-20'),\n      updatedAt: new Date('2024-02-05'),\n\n      portfolio: {\n        id: 'port5',\n        investorId: '5',\n        totalInvestment: '485000',\n        currentValue: '548000',\n        totalReturns: '63000',\n        totalDividends: '28500',\n        totalWithdrawals: '8000',\n        unrealizedGains: '34500',\n        realizedGains: '28500',\n        riskScore: 28,\n        performanceScore: 82,\n        lastUpdated: new Date('2024-04-02'),\n      },\n\n      investments: [\n        {\n          id: 'inv17',\n          investorId: '5',\n          propertyId: 'prop17',\n          investmentAmount: '200000',\n          ownershipPercentage: '14.5',\n          expectedReturn: '8.2',\n          currentValue: '225000',\n          totalReturns: '25000',\n          totalDividends: '12500',\n          status: 'active',\n          investmentDate: new Date('2024-02-05T10:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-05'),\n          updatedAt: new Date('2024-02-05'),\n        },\n        {\n          id: 'inv18',\n          investorId: '5',\n          propertyId: 'prop18',\n          investmentAmount: '185000',\n          ownershipPercentage: '12.8',\n          expectedReturn: '7.9',\n          currentValue: '205000',\n          totalReturns: '20000',\n          totalDividends: '9500',\n          status: 'active',\n          investmentDate: new Date('2024-02-20T14:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-20'),\n          updatedAt: new Date('2024-02-20'),\n        },\n        {\n          id: 'inv19',\n          investorId: '5',\n          propertyId: 'prop19',\n          investmentAmount: '100000',\n          ownershipPercentage: '8.2',\n          expectedReturn: '9.0',\n          currentValue: '118000',\n          totalReturns: '18000',\n          totalDividends: '6500',\n          status: 'active',\n          investmentDate: new Date('2024-03-10T16:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-10'),\n          updatedAt: new Date('2024-03-10'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx10',\n          investorId: '5',\n          propertyId: 'prop17',\n          type: 'investment',\n          amount: '200000',\n          fee: '2000',\n          description: 'Investment in Engineering Hub Complex',\n          reference: 'INV-005-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Banque Saudi Fransi', account: '****7890' }),\n          processedAt: new Date('2024-02-05T10:30:00Z'),\n          createdAt: new Date('2024-02-05T08:15:00Z'),\n          updatedAt: new Date('2024-02-05T10:30:00Z'),\n        },\n        {\n          id: 'tx11',\n          investorId: '5',\n          propertyId: null,\n          type: 'dividend',\n          amount: '28500',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Banque Saudi Fransi', account: '****7890' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '6',\n      name: 'Amina Khoury',\n      firstName: 'Amina',\n      lastName: 'Khoury',\n      email: 'amina.khoury@health.gov.sa',\n      phone: '+966 57 567 8901',\n      salutation: 'Dr',\n      gender: 'female',\n      dateOfBirth: new Date('1983-09-18'),\n      occupation: 'Cardiologist',\n      jobCategory: 'professional',\n      jobTitle: 'Senior Cardiologist',\n      company: 'Ministry of Health',\n      workExperience: 16,\n      city: 'Mecca',\n      country: 'Saudi Arabia',\n      address: 'Al-Aziziyyah, Mecca',\n      nationality: 'Lebanon',\n      profilePicture: 'https://images.unsplash.com/photo-1559839734-2b71ea197ec2?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '365000',\n      activeProperties: 2,\n      monthlyIncome: '28000',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-02-01T11:45:00Z'),\n      kycSubmittedAt: new Date('2024-02-08T15:30:00Z'),\n      aiRiskScore: 32,\n      investorTier: 'medium',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en', 'fr'],\n      createdAt: new Date('2024-02-01'),\n      updatedAt: new Date('2024-02-15'),\n\n      portfolio: {\n        id: 'port6',\n        investorId: '6',\n        totalInvestment: '365000',\n        currentValue: '405000',\n        totalReturns: '40000',\n        totalDividends: '22500',\n        totalWithdrawals: '5000',\n        unrealizedGains: '17500',\n        realizedGains: '22500',\n        riskScore: 32,\n        performanceScore: 78,\n        lastUpdated: new Date('2024-03-28'),\n      },\n\n      investments: [\n        {\n          id: 'inv20',\n          investorId: '6',\n          propertyId: 'prop20',\n          investmentAmount: '200000',\n          ownershipPercentage: '13.2',\n          expectedReturn: '8.1',\n          currentValue: '218000',\n          totalReturns: '18000',\n          totalDividends: '12000',\n          status: 'active',\n          investmentDate: new Date('2024-02-15T09:15:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-15'),\n          updatedAt: new Date('2024-02-15'),\n        },\n        {\n          id: 'inv21',\n          investorId: '6',\n          propertyId: 'prop21',\n          investmentAmount: '165000',\n          ownershipPercentage: '11.4',\n          expectedReturn: '7.8',\n          currentValue: '187000',\n          totalReturns: '22000',\n          totalDividends: '10500',\n          status: 'active',\n          investmentDate: new Date('2024-03-05T11:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-05'),\n          updatedAt: new Date('2024-03-05'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx12',\n          investorId: '6',\n          propertyId: 'prop20',\n          type: 'investment',\n          amount: '200000',\n          fee: '2000',\n          description: 'Investment in Healthcare District',\n          reference: 'INV-006-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Bilad Bank', account: '****2345' }),\n          processedAt: new Date('2024-02-15T09:15:00Z'),\n          createdAt: new Date('2024-02-15T08:00:00Z'),\n          updatedAt: new Date('2024-02-15T09:15:00Z'),\n        },\n        {\n          id: 'tx13',\n          investorId: '6',\n          propertyId: null,\n          type: 'dividend',\n          amount: '22500',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Bilad Bank', account: '****2345' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '7',\n      name: 'Rajesh Patel',\n      firstName: 'Rajesh',\n      lastName: 'Patel',\n      email: 'rajesh.patel@aramco.com',\n      phone: '+966 58 678 9012',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1987-02-14'),\n      occupation: 'IT Architect',\n      jobCategory: 'professional',\n      jobTitle: 'Senior IT Architect',\n      company: 'Saudi Aramco',\n      workExperience: 12,\n      city: 'Dhahran',\n      country: 'Saudi Arabia',\n      address: 'Aramco Compound, Dhahran',\n      nationality: 'India',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '275000',\n      activeProperties: 2,\n      monthlyIncome: '19500',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-02-10T13:20:00Z'),\n      kycSubmittedAt: new Date('2024-02-18T16:45:00Z'),\n      aiRiskScore: 35,\n      investorTier: 'medium',\n      preferredLanguage: 'en',\n      languagesSpoken: ['en', 'hi', 'ar'],\n      createdAt: new Date('2024-02-10'),\n      updatedAt: new Date('2024-02-25'),\n\n      portfolio: {\n        id: 'port7',\n        investorId: '7',\n        totalInvestment: '275000',\n        currentValue: '301500',\n        totalReturns: '26500',\n        totalDividends: '16200',\n        totalWithdrawals: '0',\n        unrealizedGains: '10300',\n        realizedGains: '16200',\n        riskScore: 35,\n        performanceScore: 75,\n        lastUpdated: new Date('2024-03-25'),\n      },\n\n      investments: [\n        {\n          id: 'inv22',\n          investorId: '7',\n          propertyId: 'prop22',\n          investmentAmount: '150000',\n          ownershipPercentage: '10.8',\n          expectedReturn: '8.4',\n          currentValue: '165000',\n          totalReturns: '15000',\n          totalDividends: '9200',\n          status: 'active',\n          investmentDate: new Date('2024-02-25T12:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-02-25'),\n          updatedAt: new Date('2024-02-25'),\n        },\n        {\n          id: 'inv23',\n          investorId: '7',\n          propertyId: 'prop23',\n          investmentAmount: '125000',\n          ownershipPercentage: '9.2',\n          expectedReturn: '7.6',\n          currentValue: '136500',\n          totalReturns: '11500',\n          totalDividends: '7000',\n          status: 'active',\n          investmentDate: new Date('2024-03-15T14:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-15'),\n          updatedAt: new Date('2024-03-15'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx14',\n          investorId: '7',\n          propertyId: 'prop22',\n          type: 'investment',\n          amount: '150000',\n          fee: '1500',\n          description: 'Investment in Tech Park Complex',\n          reference: 'INV-007-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'SAMBA Bank', account: '****3456' }),\n          processedAt: new Date('2024-02-25T12:30:00Z'),\n          createdAt: new Date('2024-02-25T11:00:00Z'),\n          updatedAt: new Date('2024-02-25T12:30:00Z'),\n        },\n        {\n          id: 'tx15',\n          investorId: '7',\n          propertyId: null,\n          type: 'dividend',\n          amount: '16200',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'SAMBA Bank', account: '****3456' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    // SKILLED WORKER TIER INVESTORS  \n    {\n      id: '8',\n      name: 'Nadia Al-Harbi',\n      firstName: 'Nadia',\n      lastName: 'Al-Harbi',\n      email: 'nadia.harbi@education.gov.sa',\n      phone: '+966 59 789 0123',\n      salutation: 'Ms',\n      gender: 'female',\n      dateOfBirth: new Date('1988-06-25'),\n      occupation: 'High School Teacher',\n      jobCategory: 'skilled_worker',\n      jobTitle: 'Mathematics Teacher',\n      company: 'Ministry of Education',\n      workExperience: 10,\n      city: 'Medina',\n      country: 'Saudi Arabia',\n      address: 'Al-Haram District, Medina',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b5b0c8d1?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '125000',\n      activeProperties: 2,\n      monthlyIncome: '9500',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-02-18T14:15:00Z'),\n      kycSubmittedAt: new Date('2024-02-25T10:30:00Z'),\n      aiRiskScore: 42,\n      investorTier: 'low',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-02-18'),\n      updatedAt: new Date('2024-03-02'),\n\n      portfolio: {\n        id: 'port8',\n        investorId: '8',\n        totalInvestment: '125000',\n        currentValue: '133000',\n        totalReturns: '8000',\n        totalDividends: '7200',\n        totalWithdrawals: '0',\n        unrealizedGains: '800',\n        realizedGains: '7200',\n        riskScore: 42,\n        performanceScore: 68,\n        lastUpdated: new Date('2024-03-20'),\n      },\n\n      investments: [\n        {\n          id: 'inv24',\n          investorId: '8',\n          propertyId: 'prop24',\n          investmentAmount: '75000',\n          ownershipPercentage: '6.8',\n          expectedReturn: '7.2',\n          currentValue: '79500',\n          totalReturns: '4500',\n          totalDividends: '4200',\n          status: 'active',\n          investmentDate: new Date('2024-03-02T11:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-02'),\n          updatedAt: new Date('2024-03-02'),\n        },\n        {\n          id: 'inv25',\n          investorId: '8',\n          propertyId: 'prop25',\n          investmentAmount: '50000',\n          ownershipPercentage: '4.9',\n          expectedReturn: '6.8',\n          currentValue: '53500',\n          totalReturns: '3500',\n          totalDividends: '3000',\n          status: 'active',\n          investmentDate: new Date('2024-03-18T09:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-18'),\n          updatedAt: new Date('2024-03-18'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx16',\n          investorId: '8',\n          propertyId: 'prop24',\n          type: 'investment',\n          amount: '75000',\n          fee: '750',\n          description: 'Investment in Educational Hub',\n          reference: 'INV-008-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Alinma Bank', account: '****4567' }),\n          processedAt: new Date('2024-03-02T11:20:00Z'),\n          createdAt: new Date('2024-03-02T10:00:00Z'),\n          updatedAt: new Date('2024-03-02T11:20:00Z'),\n        },\n        {\n          id: 'tx17',\n          investorId: '8',\n          propertyId: null,\n          type: 'dividend',\n          amount: '7200',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Alinma Bank', account: '****4567' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '9',\n      name: 'Mohammad Al-Sayed',\n      firstName: 'Mohammad',\n      lastName: 'Al-Sayed',\n      email: 'mohammad.sayed@gmail.com',\n      phone: '+966 50 890 1234',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1984-12-03'),\n      occupation: 'Aircraft Mechanic',\n      jobCategory: 'skilled_worker',\n      jobTitle: 'Senior Aircraft Mechanic',\n      company: 'Saudia Airlines',\n      workExperience: 16,\n      city: 'Jeddah',\n      country: 'Saudi Arabia',\n      address: 'King Abdulaziz International Airport',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '185000',\n      activeProperties: 2,\n      monthlyIncome: '12500',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-02-22T16:30:00Z'),\n      kycSubmittedAt: new Date('2024-03-01T14:15:00Z'),\n      aiRiskScore: 38,\n      investorTier: 'low',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-02-22'),\n      updatedAt: new Date('2024-03-08'),\n\n      portfolio: {\n        id: 'port9',\n        investorId: '9',\n        totalInvestment: '185000',\n        currentValue: '198500',\n        totalReturns: '13500',\n        totalDividends: '11800',\n        totalWithdrawals: '2500',\n        unrealizedGains: '1700',\n        realizedGains: '11800',\n        riskScore: 38,\n        performanceScore: 72,\n        lastUpdated: new Date('2024-03-15'),\n      },\n\n      investments: [\n        {\n          id: 'inv26',\n          investorId: '9',\n          propertyId: 'prop26',\n          investmentAmount: '100000',\n          ownershipPercentage: '8.5',\n          expectedReturn: '7.5',\n          currentValue: '107000',\n          totalReturns: '7000',\n          totalDividends: '6500',\n          status: 'active',\n          investmentDate: new Date('2024-03-08T13:40:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-08'),\n          updatedAt: new Date('2024-03-08'),\n        },\n        {\n          id: 'inv27',\n          investorId: '9',\n          propertyId: 'prop27',\n          investmentAmount: '85000',\n          ownershipPercentage: '7.2',\n          expectedReturn: '7.8',\n          currentValue: '91500',\n          totalReturns: '6500',\n          totalDividends: '5300',\n          status: 'active',\n          investmentDate: new Date('2024-03-25T15:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-25'),\n          updatedAt: new Date('2024-03-25'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx18',\n          investorId: '9',\n          propertyId: 'prop26',\n          type: 'investment',\n          amount: '100000',\n          fee: '1000',\n          description: 'Investment in Airport Commercial Zone',\n          reference: 'INV-009-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****5678' }),\n          processedAt: new Date('2024-03-08T13:40:00Z'),\n          createdAt: new Date('2024-03-08T12:00:00Z'),\n          updatedAt: new Date('2024-03-08T13:40:00Z'),\n        },\n        {\n          id: 'tx19',\n          investorId: '9',\n          propertyId: null,\n          type: 'dividend',\n          amount: '11800',\n          fee: '0',\n          description: 'Quarterly dividend payments',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****5678' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        },\n        {\n          id: 'tx20',\n          investorId: '9',\n          propertyId: null,\n          type: 'withdrawal',\n          amount: '2500',\n          fee: '25',\n          description: 'Small withdrawal for family expenses',\n          reference: 'WTH-003-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****5678' }),\n          processedAt: new Date('2024-03-22T10:15:00Z'),\n          createdAt: new Date('2024-03-22T09:30:00Z'),\n          updatedAt: new Date('2024-03-22T10:15:00Z'),\n        }\n      ]\n    },\n\n    // ENTRY LEVEL WORKERS\n    {\n      id: '10',\n      name: 'Yusuf Chen',\n      firstName: 'Yusuf',\n      lastName: 'Chen',\n      email: 'yusuf.chen@outlook.com',\n      phone: '+966 51 901 2345',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1993-08-15'),\n      occupation: 'Junior Accountant',\n      jobCategory: 'entry_level',\n      jobTitle: 'Junior Accountant',\n      company: 'Local Accounting Firm',\n      workExperience: 3,\n      city: 'Abha',\n      country: 'Saudi Arabia',\n      address: 'Al-Manhal District, Abha',\n      nationality: 'China',\n      profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '45000',\n      activeProperties: 1,\n      monthlyIncome: '4200',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-03-05T08:45:00Z'),\n      kycSubmittedAt: new Date('2024-03-12T11:20:00Z'),\n      aiRiskScore: 58,\n      investorTier: 'low',\n      preferredLanguage: 'en',\n      languagesSpoken: ['en', 'ar', 'zh'],\n      createdAt: new Date('2024-03-05'),\n      updatedAt: new Date('2024-03-18'),\n\n      portfolio: {\n        id: 'port10',\n        investorId: '10',\n        totalInvestment: '45000',\n        currentValue: '47500',\n        totalReturns: '2500',\n        totalDividends: '2100',\n        totalWithdrawals: '0',\n        unrealizedGains: '400',\n        realizedGains: '2100',\n        riskScore: 58,\n        performanceScore: 62,\n        lastUpdated: new Date('2024-03-30'),\n      },\n\n      investments: [\n        {\n          id: 'inv28',\n          investorId: '10',\n          propertyId: 'prop28',\n          investmentAmount: '45000',\n          ownershipPercentage: '3.8',\n          expectedReturn: '6.9',\n          currentValue: '47500',\n          totalReturns: '2500',\n          totalDividends: '2100',\n          status: 'active',\n          investmentDate: new Date('2024-03-18T14:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-18'),\n          updatedAt: new Date('2024-03-18'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx21',\n          investorId: '10',\n          propertyId: 'prop28',\n          type: 'investment',\n          amount: '45000',\n          fee: '450',\n          description: 'First investment in Residential Complex',\n          reference: 'INV-010-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Bank AlJazira', account: '****6789' }),\n          processedAt: new Date('2024-03-18T14:30:00Z'),\n          createdAt: new Date('2024-03-18T13:15:00Z'),\n          updatedAt: new Date('2024-03-18T14:30:00Z'),\n        },\n        {\n          id: 'tx22',\n          investorId: '10',\n          propertyId: 'prop28',\n          type: 'dividend',\n          amount: '2100',\n          fee: '0',\n          description: 'First dividend payment',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Bank AlJazira', account: '****6789' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '11',\n      name: 'Layla Al-Dosari',\n      firstName: 'Layla',\n      lastName: 'Al-Dosari',\n      email: 'layla.dosari@gmail.com',\n      phone: '+966 52 012 3456',\n      salutation: 'Ms',\n      gender: 'female',\n      dateOfBirth: new Date('1996-01-20'),\n      occupation: 'Customer Service Representative',\n      jobCategory: 'entry_level',\n      jobTitle: 'Customer Service Representative',\n      company: 'STC Customer Care',\n      workExperience: 2,\n      city: 'Tabuk',\n      country: 'Saudi Arabia',\n      address: 'Prince Fahd bin Sultan, Tabuk',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b5b0c8d1?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '32000',\n      activeProperties: 1,\n      monthlyIncome: '3800',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-03-08T10:15:00Z'),\n      kycSubmittedAt: new Date('2024-03-15T14:40:00Z'),\n      aiRiskScore: 62,\n      investorTier: 'low',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-03-08'),\n      updatedAt: new Date('2024-03-22'),\n\n      portfolio: {\n        id: 'port11',\n        investorId: '11',\n        totalInvestment: '32000',\n        currentValue: '33200',\n        totalReturns: '1200',\n        totalDividends: '1800',\n        totalWithdrawals: '0',\n        unrealizedGains: '-600',\n        realizedGains: '1800',\n        riskScore: 62,\n        performanceScore: 58,\n        lastUpdated: new Date('2024-03-28'),\n      },\n\n      investments: [\n        {\n          id: 'inv29',\n          investorId: '11',\n          propertyId: 'prop29',\n          investmentAmount: '32000',\n          ownershipPercentage: '2.9',\n          expectedReturn: '6.5',\n          currentValue: '33200',\n          totalReturns: '1200',\n          totalDividends: '1800',\n          status: 'active',\n          investmentDate: new Date('2024-03-22T16:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-22'),\n          updatedAt: new Date('2024-03-22'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx23',\n          investorId: '11',\n          propertyId: 'prop29',\n          type: 'investment',\n          amount: '32000',\n          fee: '320',\n          description: 'Initial small investment',\n          reference: 'INV-011-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Riyad Bank', account: '****7890' }),\n          processedAt: new Date('2024-03-22T16:20:00Z'),\n          createdAt: new Date('2024-03-22T15:00:00Z'),\n          updatedAt: new Date('2024-03-22T16:20:00Z'),\n        },\n        {\n          id: 'tx24',\n          investorId: '11',\n          propertyId: 'prop29',\n          type: 'dividend',\n          amount: '1800',\n          fee: '0',\n          description: 'First dividend payment',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Riyad Bank', account: '****7890' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '12',\n      name: 'Ahmed Hassan',\n      firstName: 'Ahmed',\n      lastName: 'Hassan',\n      email: 'ahmed.hassan@retailco.sa',\n      phone: '+966 53 123 4567',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1991-11-08'),\n      occupation: 'Retail Sales Associate',\n      jobCategory: 'entry_level',\n      jobTitle: 'Senior Sales Associate',\n      company: 'Electronics Retail Chain',\n      workExperience: 5,\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'Al-Suwaidi District, Riyadh',\n      nationality: 'Egypt',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '65000',\n      activeProperties: 1,\n      monthlyIncome: '5200',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-03-12T12:30:00Z'),\n      kycSubmittedAt: new Date('2024-03-20T09:15:00Z'),\n      aiRiskScore: 55,\n      investorTier: 'low',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-03-12'),\n      updatedAt: new Date('2024-03-26'),\n\n      portfolio: {\n        id: 'port12',\n        investorId: '12',\n        totalInvestment: '65000',\n        currentValue: '68500',\n        totalReturns: '3500',\n        totalDividends: '3200',\n        totalWithdrawals: '1000',\n        unrealizedGains: '300',\n        realizedGains: '3200',\n        riskScore: 55,\n        performanceScore: 64,\n        lastUpdated: new Date('2024-03-25'),\n      },\n\n      investments: [\n        {\n          id: 'inv30',\n          investorId: '12',\n          propertyId: 'prop30',\n          investmentAmount: '65000',\n          ownershipPercentage: '5.2',\n          expectedReturn: '7.1',\n          currentValue: '68500',\n          totalReturns: '3500',\n          totalDividends: '3200',\n          status: 'active',\n          investmentDate: new Date('2024-03-26T11:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-03-26'),\n          updatedAt: new Date('2024-03-26'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx25',\n          investorId: '12',\n          propertyId: 'prop30',\n          type: 'investment',\n          amount: '65000',\n          fee: '650',\n          description: 'Investment in Mixed-Use Development',\n          reference: 'INV-012-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****8901' }),\n          processedAt: new Date('2024-03-26T11:45:00Z'),\n          createdAt: new Date('2024-03-26T10:30:00Z'),\n          updatedAt: new Date('2024-03-26T11:45:00Z'),\n        },\n        {\n          id: 'tx26',\n          investorId: '12',\n          propertyId: 'prop30',\n          type: 'dividend',\n          amount: '3200',\n          fee: '0',\n          description: 'Quarterly dividend payment',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****8901' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        },\n        {\n          id: 'tx27',\n          investorId: '12',\n          propertyId: null,\n          type: 'withdrawal',\n          amount: '1000',\n          fee: '10',\n          description: 'Small emergency withdrawal',\n          reference: 'WTH-004-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****8901' }),\n          processedAt: new Date('2024-03-30T14:20:00Z'),\n          createdAt: new Date('2024-03-30T13:45:00Z'),\n          updatedAt: new Date('2024-03-30T14:20:00Z'),\n        }\n      ]\n    },\n\n    // LABOR TIER WORKERS\n    {\n      id: '13',\n      name: 'Rizwan Ali',\n      firstName: 'Rizwan',\n      lastName: 'Ali', \n      email: 'rizwan.ali@constructionco.sa',\n      phone: '+966 54 234 5678',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1986-05-12'),\n      occupation: 'Construction Worker',\n      jobCategory: 'labor',\n      jobTitle: 'Senior Construction Worker',\n      company: 'Al-Rashid Construction',\n      workExperience: 8,\n      city: 'Riyadh',\n      country: 'Saudi Arabia',\n      address: 'Workers Housing, Industrial District',\n      nationality: 'Pakistan',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '15000',\n      activeProperties: 1,\n      monthlyIncome: '2800',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-03-18T17:45:00Z'),\n      kycSubmittedAt: new Date('2024-03-25T16:30:00Z'),\n      aiRiskScore: 68,\n      investorTier: 'low',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ur', 'ar', 'en'],\n      createdAt: new Date('2024-03-18'),\n      updatedAt: new Date('2024-04-02'),\n\n      portfolio: {\n        id: 'port13',\n        investorId: '13',\n        totalInvestment: '15000',\n        currentValue: '15400',\n        totalReturns: '400',\n        totalDividends: '650',\n        totalWithdrawals: '0',\n        unrealizedGains: '-250',\n        realizedGains: '650',\n        riskScore: 68,\n        performanceScore: 52,\n        lastUpdated: new Date('2024-04-01'),\n      },\n\n      investments: [\n        {\n          id: 'inv31',\n          investorId: '13',\n          propertyId: 'prop31',\n          investmentAmount: '15000',\n          ownershipPercentage: '1.8',\n          expectedReturn: '6.2',\n          currentValue: '15400',\n          totalReturns: '400',\n          totalDividends: '650',\n          status: 'active',\n          investmentDate: new Date('2024-04-02T08:30:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-04-02'),\n          updatedAt: new Date('2024-04-02'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx28',\n          investorId: '13',\n          propertyId: 'prop31',\n          type: 'investment',\n          amount: '15000',\n          fee: '150',\n          description: 'Small worker investment',\n          reference: 'INV-013-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****9012' }),\n          processedAt: new Date('2024-04-02T08:30:00Z'),\n          createdAt: new Date('2024-04-02T07:45:00Z'),\n          updatedAt: new Date('2024-04-02T08:30:00Z'),\n        },\n        {\n          id: 'tx29',\n          investorId: '13',\n          propertyId: 'prop31',\n          type: 'dividend',\n          amount: '650',\n          fee: '0',\n          description: 'First dividend payment',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Al Rajhi Bank', account: '****9012' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '14',\n      name: 'Maria Santos',\n      firstName: 'Maria',\n      lastName: 'Santos',\n      email: 'maria.santos@cleaningservice.sa',\n      phone: '+966 55 345 6789',\n      salutation: 'Mrs',\n      gender: 'female',\n      dateOfBirth: new Date('1989-07-28'),\n      occupation: 'Cleaning Service Worker',\n      jobCategory: 'labor',\n      jobTitle: 'Cleaning Supervisor',\n      company: 'Premium Cleaning Services',\n      workExperience: 6,\n      city: 'Jeddah',\n      country: 'Saudi Arabia',\n      address: 'Al-Safa District, Jeddah',\n      nationality: 'Philippines',\n      profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b5b0c8d1?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '8500',\n      activeProperties: 1,\n      monthlyIncome: '2200',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-03-22T19:15:00Z'),\n      kycSubmittedAt: new Date('2024-03-28T15:45:00Z'),\n      aiRiskScore: 71,\n      investorTier: 'low',\n      preferredLanguage: 'en',\n      languagesSpoken: ['en', 'tl', 'ar'],\n      createdAt: new Date('2024-03-22'),\n      updatedAt: new Date('2024-04-05'),\n\n      portfolio: {\n        id: 'port14',\n        investorId: '14',\n        totalInvestment: '8500',\n        currentValue: '8650',\n        totalReturns: '150',\n        totalDividends: '420',\n        totalWithdrawals: '0',\n        unrealizedGains: '-270',\n        realizedGains: '420',\n        riskScore: 71,\n        performanceScore: 48,\n        lastUpdated: new Date('2024-04-03'),\n      },\n\n      investments: [\n        {\n          id: 'inv32',\n          investorId: '14',\n          propertyId: 'prop32',\n          investmentAmount: '8500',\n          ownershipPercentage: '1.2',\n          expectedReturn: '5.8',\n          currentValue: '8650',\n          totalReturns: '150',\n          totalDividends: '420',\n          status: 'active',\n          investmentDate: new Date('2024-04-05T13:20:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-04-05'),\n          updatedAt: new Date('2024-04-05'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx30',\n          investorId: '14',\n          propertyId: 'prop32',\n          type: 'investment',\n          amount: '8500',\n          fee: '85',\n          description: 'Small savings investment',\n          reference: 'INV-014-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'SAMBA Bank', account: '****0123' }),\n          processedAt: new Date('2024-04-05T13:20:00Z'),\n          createdAt: new Date('2024-04-05T12:00:00Z'),\n          updatedAt: new Date('2024-04-05T13:20:00Z'),\n        },\n        {\n          id: 'tx31',\n          investorId: '14',\n          propertyId: 'prop32',\n          type: 'dividend',\n          amount: '420',\n          fee: '0',\n          description: 'First dividend payment',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'SAMBA Bank', account: '****0123' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    },\n\n    {\n      id: '15',\n      name: 'Omar Al-Kindi',\n      firstName: 'Omar',\n      lastName: 'Al-Kindi',\n      email: 'omar.kindi@delivery.sa',\n      phone: '+966 56 456 7890',\n      salutation: 'Mr',\n      gender: 'male',\n      dateOfBirth: new Date('1994-03-14'),\n      occupation: 'Delivery Driver',\n      jobCategory: 'labor',\n      jobTitle: 'Delivery Driver',\n      company: 'Quick Delivery Services',\n      workExperience: 4,\n      city: 'Dammam',\n      country: 'Saudi Arabia',\n      address: 'Al-Shatea District, Dammam',\n      nationality: 'Saudi Arabia',\n      profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n      kycStatus: 'approved',\n      totalInvested: '12000',\n      activeProperties: 1,\n      monthlyIncome: '2500',\n      documentsUploaded: true,\n      applicationProgress: 100,\n      appDownloadedAt: new Date('2024-03-28T20:30:00Z'),\n      kycSubmittedAt: new Date('2024-04-03T14:15:00Z'),\n      aiRiskScore: 65,\n      investorTier: 'low',\n      preferredLanguage: 'ar',\n      languagesSpoken: ['ar', 'en'],\n      createdAt: new Date('2024-03-28'),\n      updatedAt: new Date('2024-04-08'),\n\n      portfolio: {\n        id: 'port15',\n        investorId: '15',\n        totalInvestment: '12000',\n        currentValue: '12180',\n        totalReturns: '180',\n        totalDividends: '580',\n        totalWithdrawals: '0',\n        unrealizedGains: '-400',\n        realizedGains: '580',\n        riskScore: 65,\n        performanceScore: 50,\n        lastUpdated: new Date('2024-04-06'),\n      },\n\n      investments: [\n        {\n          id: 'inv33',\n          investorId: '15',\n          propertyId: 'prop33',\n          investmentAmount: '12000',\n          ownershipPercentage: '1.5',\n          expectedReturn: '6.0',\n          currentValue: '12180',\n          totalReturns: '180',\n          totalDividends: '580',\n          status: 'active',\n          investmentDate: new Date('2024-04-08T10:45:00Z'),\n          exitDate: null,\n          createdAt: new Date('2024-04-08'),\n          updatedAt: new Date('2024-04-08'),\n        }\n      ],\n\n      transactions: [\n        {\n          id: 'tx32',\n          investorId: '15',\n          propertyId: 'prop33',\n          type: 'investment',\n          amount: '12000',\n          fee: '120',\n          description: 'Driver savings investment',\n          reference: 'INV-015-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Banque Saudi Fransi', account: '****1234' }),\n          processedAt: new Date('2024-04-08T10:45:00Z'),\n          createdAt: new Date('2024-04-08T09:30:00Z'),\n          updatedAt: new Date('2024-04-08T10:45:00Z'),\n        },\n        {\n          id: 'tx33',\n          investorId: '15',\n          propertyId: 'prop33',\n          type: 'dividend',\n          amount: '580',\n          fee: '0',\n          description: 'First dividend payment',\n          reference: 'DIV-Q1-2024',\n          status: 'completed',\n          paymentMethod: 'bank_transfer',\n          bankDetails: JSON.stringify({ bank: 'Banque Saudi Fransi', account: '****1234' }),\n          processedAt: new Date('2024-04-01T12:00:00Z'),\n          createdAt: new Date('2024-04-01T11:00:00Z'),\n          updatedAt: new Date('2024-04-01T12:00:00Z'),\n        }\n      ]\n    }\n  ]\n\n  const filteredInvestors = mockInvestors.filter(investor => {\n    // Only show KYC-approved investors\n    const isApproved = investor.kycStatus === 'approved'\n    const matchesSearch = investor.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         investor.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (investor.occupation || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (investor.jobTitle || '').toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (investor.company || '').toLowerCase().includes(searchTerm.toLowerCase())\n    \n    const matchesJobCategory = jobCategoryFilter === \"all\" || investor.jobCategory === jobCategoryFilter\n    const matchesTier = investorTierFilter === \"all\" || investor.investorTier === investorTierFilter\n    const matchesLanguage = languageFilter === \"all\" || \n                           (investor.languagesSpoken && investor.languagesSpoken.includes(languageFilter))\n    \n    return isApproved && matchesSearch && matchesJobCategory && matchesTier && matchesLanguage\n  })\n\n  const formatCurrency = (amount: string | null | undefined) => {\n    const parsedAmount = safeParseNumber(amount, 0)\n    return `${parsedAmount.toLocaleString()}`\n  }\n\n  const formatPercentage = (value: string | null | undefined) => {\n    const parsedValue = safeParseNumber(value, 0)\n    return `${parsedValue.toFixed(1)}%`\n  }\n\n  const formatDate = (date: Date | null) => {\n    if (!date) return 'N/A'\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    }).format(date)\n  }\n\n\n  const getPerformanceColor = (score: number | null | undefined) => {\n    const safeScore = safePerformanceScore(score)\n    if (safeScore >= 80) return 'text-green-600'\n    if (safeScore >= 60) return 'text-yellow-600'\n    return 'text-red-600'\n  }\n\n  const getTierBadgeVariant = (tier: string | null | undefined) => {\n    switch (tier) {\n      case 'top': return \"default\" // Blue/primary\n      case 'medium': return \"secondary\" // Gray\n      case 'low': return \"outline\" // Outline\n      default: return \"outline\"\n    }\n  }\n\n  const getTierLabel = (tier: string | null | undefined) => {\n    switch (tier) {\n      case 'top': return \"TOP INVESTOR\"\n      case 'medium': return \"MEDIUM INVESTOR\"\n      case 'low': return \"ENTRY INVESTOR\"\n      default: return \"INVESTOR\"\n    }\n  }\n\n  const getJobCategoryLabel = (category: string | null | undefined) => {\n    switch (category) {\n      case 'executive': return \"Executive\"\n      case 'management': return \"Management\"\n      case 'professional': return \"Professional\"\n      case 'skilled_worker': return \"Skilled Worker\"\n      case 'entry_level': return \"Entry Level\"\n      case 'labor': return \"Labor\"\n      default: return \"Unknown\"\n    }\n  }\n\n  const handleViewProfile = (investor: InvestorWithPortfolio) => {\n    setSelectedInvestor(investor)\n    setIsProfileModalOpen(true)\n  }\n\n  const handleExport = () => {\n    console.log('Export investors data')\n    // In real app, this would export the data\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5 modern-scrollbar\">\n      <div className=\"p-6 space-y-8\" data-testid=\"page-investors\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"space-y-2\">\n            <h1 className=\"text-4xl font-bold bg-gradient-to-r from-foreground via-primary to-primary/70 bg-clip-text text-transparent animate-float\" data-testid=\"text-investors-title\">\n              Active Investors\n            </h1>\n            <p className=\"text-lg text-muted-foreground/80\">\n              KYC-approved customers with active investment portfolios\n            </p>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n              {mockInvestors.length} active investors • {mockInvestors.reduce((sum, inv) => sum + safeParseNumber(inv.portfolio.totalInvestment), 0).toLocaleString()} total investment • {Array.from(new Set(mockInvestors.flatMap(inv => inv.languagesSpoken || []))).length} languages\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Button onClick={handleExport} variant=\"outline\" data-testid=\"button-export-investors\">\n              <TrendingUp className=\"h-4 w-4 mr-2\" />\n              Export Report\n            </Button>\n          </div>\n        </div>\n\n        {/* Portfolio Overview Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <Card className=\"glass-morphism\" data-testid=\"card-total-investment\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Total Investment\n              </CardTitle>\n              <Wallet className=\"h-4 w-4 text-green-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-600\">\n                {mockInvestors.reduce((sum, inv) => sum + safeParseNumber(inv.portfolio.totalInvestment), 0).toLocaleString()}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Across all portfolios\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"glass-morphism\" data-testid=\"card-current-value\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Current Value\n              </CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-primary\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-primary\">\n                {mockInvestors.reduce((sum, inv) => sum + safeParseNumber(inv.portfolio.currentValue), 0).toLocaleString()}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Live portfolio value\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"glass-morphism\" data-testid=\"card-total-returns\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Total Returns\n              </CardTitle>\n              <ArrowUpRight className=\"h-4 w-4 text-green-600\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-green-600\">\n                {mockInvestors.reduce((sum, inv) => sum + safeParseNumber(inv.portfolio.totalReturns), 0).toLocaleString()}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Total profit generated\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"glass-morphism\" data-testid=\"card-avg-performance\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n                Avg Performance\n              </CardTitle>\n              <PieChart className=\"h-4 w-4 text-primary\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold text-primary\">\n                {Math.round(mockInvestors.reduce((sum, inv) => sum + safePerformanceScore(inv.portfolio.performanceScore), 0) / mockInvestors.length)}%\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Portfolio performance\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Search and Filter */}\n        <Card className=\"glass-morphism\">\n          <CardHeader>\n            <CardTitle>Search & Filter</CardTitle>\n            <CardDescription>Find investors by name, job category, tier, or language</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search by name, email, job title, or company...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-9\"\n                  data-testid=\"input-search-investors\"\n                />\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-2\">\n                <Select value={jobCategoryFilter} onValueChange={setJobCategoryFilter}>\n                  <SelectTrigger className=\"w-full\" data-testid=\"select-job-category-filter\">\n                    <SelectValue placeholder=\"Job Category\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Job Categories</SelectItem>\n                    <SelectItem value=\"executive\">Executives ({mockInvestors.filter(i => i.jobCategory === 'executive').length})</SelectItem>\n                    <SelectItem value=\"management\">Management ({mockInvestors.filter(i => i.jobCategory === 'management').length})</SelectItem>\n                    <SelectItem value=\"professional\">Professionals ({mockInvestors.filter(i => i.jobCategory === 'professional').length})</SelectItem>\n                    <SelectItem value=\"skilled_worker\">Skilled Workers ({mockInvestors.filter(i => i.jobCategory === 'skilled_worker').length})</SelectItem>\n                    <SelectItem value=\"entry_level\">Entry Level ({mockInvestors.filter(i => i.jobCategory === 'entry_level').length})</SelectItem>\n                    <SelectItem value=\"labor\">Labor ({mockInvestors.filter(i => i.jobCategory === 'labor').length})</SelectItem>\n                  </SelectContent>\n                </Select>\n                \n                <Select value={investorTierFilter} onValueChange={setInvestorTierFilter}>\n                  <SelectTrigger className=\"w-full\" data-testid=\"select-tier-filter\">\n                    <SelectValue placeholder=\"Investor Tier\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Tiers</SelectItem>\n                    <SelectItem value=\"top\">Top Investors ({mockInvestors.filter(i => i.investorTier === 'top').length})</SelectItem>\n                    <SelectItem value=\"medium\">Medium Investors ({mockInvestors.filter(i => i.investorTier === 'medium').length})</SelectItem>\n                    <SelectItem value=\"low\">Entry Investors ({mockInvestors.filter(i => i.investorTier === 'low').length})</SelectItem>\n                  </SelectContent>\n                </Select>\n                \n                <Select value={languageFilter} onValueChange={setLanguageFilter}>\n                  <SelectTrigger className=\"w-full\" data-testid=\"select-language-filter\">\n                    <SelectValue placeholder=\"Language\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Languages</SelectItem>\n                    <SelectItem value=\"ar\">Arabic ({mockInvestors.filter(i => i.languagesSpoken?.includes('ar')).length})</SelectItem>\n                    <SelectItem value=\"en\">English ({mockInvestors.filter(i => i.languagesSpoken?.includes('en')).length})</SelectItem>\n                    <SelectItem value=\"fr\">French ({mockInvestors.filter(i => i.languagesSpoken?.includes('fr')).length})</SelectItem>\n                    <SelectItem value=\"hi\">Hindi ({mockInvestors.filter(i => i.languagesSpoken?.includes('hi')).length})</SelectItem>\n                    <SelectItem value=\"ur\">Urdu ({mockInvestors.filter(i => i.languagesSpoken?.includes('ur')).length})</SelectItem>\n                    <SelectItem value=\"zh\">Chinese ({mockInvestors.filter(i => i.languagesSpoken?.includes('zh')).length})</SelectItem>\n                    <SelectItem value=\"tl\">Tagalog ({mockInvestors.filter(i => i.languagesSpoken?.includes('tl')).length})</SelectItem>\n                  </SelectContent>\n                </Select>\n                \n                <Button \n                  variant=\"outline\" \n                  onClick={() => {\n                    setSearchTerm(\"\")\n                    setJobCategoryFilter(\"all\")\n                    setInvestorTierFilter(\"all\")\n                    setLanguageFilter(\"all\")\n                  }}\n                  data-testid=\"button-clear-filters\"\n                >\n                  Clear All\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Investors Table */}\n        <Card className=\"glass-morphism\">\n          <CardHeader>\n            <CardTitle>\n              Investment Portfolios ({filteredInvestors.length} investors)\n            </CardTitle>\n            <CardDescription>\n              Active investors with approved KYC and investment portfolios\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {filteredInvestors.map((investor) => (\n                <div\n                  key={investor.id}\n                  className=\"flex items-center justify-between p-4 rounded-lg border bg-card hover-elevate\"\n                  data-testid={`investor-row-${investor.id}`}\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <Avatar className=\"h-12 w-12\">\n                      <AvatarImage src={investor.profilePicture || undefined} alt={investor.name} />\n                      <AvatarFallback>\n                        {investor.firstName?.[0]}{investor.lastName?.[0]}\n                      </AvatarFallback>\n                    </Avatar>\n                    \n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center space-x-2\">\n                        <h3 className=\"font-semibold\">{investor.salutation} {investor.name}</h3>\n                        <Badge variant={getTierBadgeVariant(investor.investorTier)}>\n                          {getTierLabel(investor.investorTier)}\n                        </Badge>\n                        {safePerformanceScore(investor.portfolio.performanceScore) >= 90 && (\n                          <Badge variant=\"outline\" className=\"text-green-600 border-green-600\">\n                            TOP PERFORMER\n                          </Badge>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">{investor.email}</p>\n                      <div className=\"flex items-center space-x-2 text-xs text-muted-foreground\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {getJobCategoryLabel(investor.jobCategory)}\n                        </Badge>\n                        <span>{investor.jobTitle} @ {investor.company}</span>\n                        <span>•</span>\n                        <span>{investor.gender}, {investor.city}</span>\n                        <span>•</span>\n                        <span>{investor.languagesSpoken?.join(', ') || 'N/A'}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-4 text-xs text-muted-foreground\">\n                        <span className=\"flex items-center gap-1\">\n                          <Building className=\"w-3 h-3\" />\n                          {investor.activeProperties} properties\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Wallet className=\"w-3 h-3\" />\n                          {formatCurrency(investor.monthlyIncome)} monthly\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Calendar className=\"w-3 h-3\" />\n                          {investor.workExperience || 0} years exp\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-6\">\n                    <div className=\"text-right space-y-1\">\n                      <div className=\"text-lg font-bold text-primary\">\n                        {formatCurrency(investor.portfolio.totalInvestment)}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Invested\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-right space-y-1\">\n                      <div className=\"text-lg font-bold text-green-600\">\n                        {formatCurrency(investor.portfolio.currentValue)}\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Current Value\n                      </div>\n                    </div>\n\n                    <div className=\"text-right space-y-1\">\n                      <div className={`text-lg font-bold ${getPerformanceColor(investor.portfolio.performanceScore)}`}>\n                        {safePerformanceScore(investor.portfolio.performanceScore)}%\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">\n                        Performance\n                      </div>\n                    </div>\n                    \n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => handleViewProfile(investor)}\n                      data-testid={`button-view-${investor.id}`}\n                    >\n                      <Eye className=\"h-4 w-4 mr-2\" />\n                      View Profile\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {filteredInvestors.length === 0 && (\n              <div className=\"text-center py-12\">\n                <p className=\"text-muted-foreground mb-4\">No investors found matching your criteria</p>\n                <Button variant=\"outline\" onClick={() => {\n                  setSearchTerm(\"\")\n                  setJobCategoryFilter(\"all\")\n                  setInvestorTierFilter(\"all\")\n                  setLanguageFilter(\"all\")\n                }} data-testid=\"button-clear-filters\">\n                  Clear Filters\n                </Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Detailed Profile Modal */}\n        <Dialog open={isProfileModalOpen} onOpenChange={setIsProfileModalOpen}>\n          <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center gap-2\">\n                <User className=\"h-5 w-5\" />\n                Investor Profile & Portfolio\n              </DialogTitle>\n              <DialogDescription>\n                Complete investment profile with financial and non-financial information\n              </DialogDescription>\n            </DialogHeader>\n            \n            {selectedInvestor && (\n              <div className=\"space-y-6\">\n                {/* Investor Header */}\n                <div className=\"flex items-start gap-6 p-6 bg-card/50 rounded-lg\">\n                  <Avatar className=\"h-24 w-24\">\n                    <AvatarImage src={selectedInvestor.profilePicture || undefined} alt={selectedInvestor.name} />\n                    <AvatarFallback className=\"text-2xl\">\n                      {selectedInvestor.firstName?.[0]}{selectedInvestor.lastName?.[0]}\n                    </AvatarFallback>\n                  </Avatar>\n                  \n                  <div className=\"flex-1 space-y-3\">\n                    <div className=\"flex items-center gap-2\">\n                      <h2 className=\"text-3xl font-bold\">{selectedInvestor.salutation} {selectedInvestor.name}</h2>\n                      <Badge variant={getTierBadgeVariant(selectedInvestor.investorTier)}>\n                        {getTierLabel(selectedInvestor.investorTier)}\n                      </Badge>\n                    </div>\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                      <div className=\"flex items-center gap-2\">\n                        <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                        <span>{selectedInvestor.email}</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                        <span>{selectedInvestor.phone}</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                        <span>{selectedInvestor.city}, {selectedInvestor.country}</span>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <Building className=\"h-4 w-4 text-muted-foreground\" />\n                        <span>{selectedInvestor.occupation}</span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-right space-y-2\">\n                    <div className=\"text-3xl font-bold text-primary\">\n                      {formatCurrency(selectedInvestor.portfolio.currentValue)}\n                    </div>\n                    <div className=\"text-sm text-muted-foreground\">Total Portfolio Value</div>\n                    <div className=\"flex items-center gap-2\">\n                      <div className={`text-lg font-bold ${getPerformanceColor(selectedInvestor.portfolio.performanceScore)}`}>\n                        {selectedInvestor.portfolio.performanceScore}%\n                      </div>\n                      <div className=\"text-sm text-muted-foreground\">Performance Score</div>\n                    </div>\n                  </div>\n                </div>\n\n                <Tabs defaultValue=\"financial\" className=\"w-full\">\n                  <TabsList className=\"grid w-full grid-cols-5\">\n                    <TabsTrigger value=\"financial\">Financial Overview</TabsTrigger>\n                    <TabsTrigger value=\"investments\">Investments</TabsTrigger>\n                    <TabsTrigger value=\"transactions\">Transactions</TabsTrigger>\n                    <TabsTrigger value=\"personal\">Personal Info</TabsTrigger>\n                    <TabsTrigger value=\"kyc-documents\">KYC Documents</TabsTrigger>\n                  </TabsList>\n\n                  <TabsContent value=\"financial\" className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <Card>\n                        <CardHeader className=\"pb-3\">\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <Wallet className=\"h-5 w-5 text-green-600\" />\n                            Investment Summary\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Total Invested:</span>\n                            <span className=\"font-bold\">{formatCurrency(selectedInvestor.portfolio.totalInvestment)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Current Value:</span>\n                            <span className=\"font-bold text-primary\">{formatCurrency(selectedInvestor.portfolio.currentValue)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Total Returns:</span>\n                            <span className=\"font-bold text-green-600\">{formatCurrency(selectedInvestor.portfolio.totalReturns)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Return Rate:</span>\n                            <span className=\"font-bold text-green-600\">\n                              {((safeParseNumber(selectedInvestor.portfolio.totalReturns) / safeParseNumber(selectedInvestor.portfolio.totalInvestment, 1)) * 100).toFixed(2)}%\n                            </span>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader className=\"pb-3\">\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <Banknote className=\"h-5 w-5 text-blue-600\" />\n                            Dividend & Withdrawals\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Total Dividends:</span>\n                            <span className=\"font-bold text-blue-600\">{formatCurrency(selectedInvestor.portfolio.totalDividends)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Total Withdrawals:</span>\n                            <span className=\"font-bold text-orange-600\">{formatCurrency(selectedInvestor.portfolio.totalWithdrawals)}</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Net Received:</span>\n                            <span className=\"font-bold text-green-600\">\n                              {formatCurrency((safeParseNumber(selectedInvestor.portfolio.totalDividends) + safeParseNumber(selectedInvestor.portfolio.totalWithdrawals)).toString())}\n                            </span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Monthly Income:</span>\n                            <span className=\"font-bold\">{formatCurrency(selectedInvestor.monthlyIncome)}</span>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader className=\"pb-3\">\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <TrendingUp className=\"h-5 w-5 text-purple-600\" />\n                            Performance Metrics\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"space-y-2\">\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-muted-foreground\">Performance Score:</span>\n                              <span className={`font-bold ${getPerformanceColor(selectedInvestor.portfolio.performanceScore)}`}>\n                                {safePerformanceScore(selectedInvestor.portfolio.performanceScore)}%\n                              </span>\n                            </div>\n                            <Progress value={safePerformanceScore(selectedInvestor.portfolio.performanceScore)} className=\"h-2\" />\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-muted-foreground\">Active Properties:</span>\n                            <span className=\"font-bold\">{selectedInvestor.activeProperties}</span>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"investments\" className=\"space-y-4\">\n                    <div className=\"space-y-4\">\n                      {selectedInvestor.investments.map((investment) => (\n                        <Card key={investment.id}>\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-center justify-between\">\n                              <div className=\"space-y-2\">\n                                <h4 className=\"font-semibold\">Property Investment #{investment.propertyId}</h4>\n                                <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                                  <span>Invested: {formatCurrency(investment.investmentAmount)}</span>\n                                  <span>Ownership: {formatPercentage(investment.ownershipPercentage)}</span>\n                                  <span>Expected: {formatPercentage(investment.expectedReturn)} annual</span>\n                                </div>\n                                <div className=\"text-sm\">\n                                  Investment Date: {formatDate(investment.investmentDate)}\n                                </div>\n                              </div>\n                              \n                              <div className=\"text-right space-y-2\">\n                                <div className=\"text-lg font-bold text-primary\">\n                                  {formatCurrency(investment.currentValue)}\n                                </div>\n                                <div className=\"text-sm text-muted-foreground\">Current Value</div>\n                                <div className=\"text-lg font-bold text-green-600\">\n                                  +{formatCurrency(investment.totalReturns)}\n                                </div>\n                                <div className=\"text-sm text-muted-foreground\">Total Returns</div>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"transactions\" className=\"space-y-4\">\n                    <div className=\"space-y-4\">\n                      {selectedInvestor.transactions.map((transaction) => {\n                        const isPositive = transaction.type === 'dividend' || transaction.type === 'withdrawal'\n                        return (\n                          <Card key={transaction.id}>\n                            <CardContent className=\"p-4\">\n                              <div className=\"flex items-center justify-between\">\n                                <div className=\"flex items-center space-x-4\">\n                                  <div className={`p-2 rounded-full ${isPositive ? 'bg-green-100 text-green-600' : 'bg-blue-100 text-blue-600'}`}>\n                                    {transaction.type === 'investment' && <ArrowDownRight className=\"h-4 w-4\" />}\n                                    {transaction.type === 'dividend' && <ArrowUpRight className=\"h-4 w-4\" />}\n                                    {transaction.type === 'withdrawal' && <Banknote className=\"h-4 w-4\" />}\n                                  </div>\n                                  \n                                  <div className=\"space-y-1\">\n                                    <h4 className=\"font-semibold capitalize\">{transaction.type.replace('_', ' ')}</h4>\n                                    <p className=\"text-sm text-muted-foreground\">{transaction.description}</p>\n                                    <p className=\"text-xs text-muted-foreground\">Ref: {transaction.reference}</p>\n                                  </div>\n                                </div>\n                                \n                                <div className=\"text-right space-y-1\">\n                                  <div className={`text-lg font-bold ${isPositive ? 'text-green-600' : 'text-primary'}`}>\n                                    {isPositive ? '+' : ''}{formatCurrency(transaction.amount)}\n                                  </div>\n                                  <div className=\"text-sm text-muted-foreground\">\n                                    {formatDate(transaction.processedAt)}\n                                  </div>\n                                  <Badge variant={transaction.status === 'completed' ? 'default' : 'secondary'}>\n                                    {transaction.status.toUpperCase()}\n                                  </Badge>\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        )\n                      })}\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"personal\" className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <User className=\"h-5 w-5\" />\n                            Personal Information\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"grid grid-cols-2 gap-4\">\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Full Name</span>\n                              <p className=\"font-medium\">{selectedInvestor.salutation} {selectedInvestor.firstName} {selectedInvestor.lastName}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Gender</span>\n                              <p className=\"font-medium capitalize\">{selectedInvestor.gender}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Date of Birth</span>\n                              <p className=\"font-medium\">{formatDate(selectedInvestor.dateOfBirth)}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Nationality</span>\n                              <p className=\"font-medium\">{selectedInvestor.nationality}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Occupation</span>\n                              <p className=\"font-medium\">{selectedInvestor.occupation}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Preferred Language</span>\n                              <p className=\"font-medium\">{selectedInvestor.preferredLanguage?.toUpperCase()}</p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <MapPin className=\"h-5 w-5\" />\n                            Contact & Location\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"space-y-3\">\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Email Address</span>\n                              <p className=\"font-medium\">{selectedInvestor.email}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Phone Number</span>\n                              <p className=\"font-medium\">{selectedInvestor.phone}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">City</span>\n                              <p className=\"font-medium\">{selectedInvestor.city}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Address</span>\n                              <p className=\"font-medium\">{selectedInvestor.address}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Country</span>\n                              <p className=\"font-medium\">{selectedInvestor.country}</p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <Calendar className=\"h-5 w-5\" />\n                            Account Timeline\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"space-y-3\">\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">App Downloaded</span>\n                              <p className=\"font-medium\">{formatDate(selectedInvestor.appDownloadedAt)}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">KYC Submitted</span>\n                              <p className=\"font-medium\">{formatDate(selectedInvestor.kycSubmittedAt)}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Account Created</span>\n                              <p className=\"font-medium\">{formatDate(selectedInvestor.createdAt)}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Last Updated</span>\n                              <p className=\"font-medium\">{formatDate(selectedInvestor.updatedAt)}</p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader>\n                          <CardTitle className=\"text-lg flex items-center gap-2\">\n                            <FileText className=\"h-5 w-5\" />\n                            KYC Status\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent className=\"space-y-3\">\n                          <div className=\"space-y-3\">\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">KYC Status</span>\n                              <div className=\"flex items-center gap-2 mt-1\">\n                                <Badge variant=\"default\">APPROVED</Badge>\n                              </div>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Application Progress</span>\n                              <div className=\"flex items-center gap-2 mt-2\">\n                                <Progress value={selectedInvestor.applicationProgress} className=\"flex-1\" />\n                                <span className=\"text-sm font-medium\">{selectedInvestor.applicationProgress}%</span>\n                              </div>\n                            </div>\n                            <div>\n                              <span className=\"text-sm font-medium text-muted-foreground\">Documents Status</span>\n                              <p className=\"font-medium text-green-600\">\n                                {selectedInvestor.documentsUploaded ? 'All Documents Verified' : 'Pending Documents'}\n                              </p>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"kyc-documents\" className=\"space-y-4\">\n                    <div className=\"space-y-6\">\n                      {/* KYC Summary Stats */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                        <Card>\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-center gap-2\">\n                              <Shield className=\"h-5 w-5 text-green-600\" />\n                              <div>\n                                <p className=\"text-2xl font-bold text-green-600\">{selectedInvestor.kycDocuments?.filter(doc => doc.status === 'approved').length || 0}</p>\n                                <p className=\"text-sm text-muted-foreground\">Approved Documents</p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                        <Card>\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-center gap-2\">\n                              <Clock className=\"h-5 w-5 text-orange-600\" />\n                              <div>\n                                <p className=\"text-2xl font-bold text-orange-600\">{selectedInvestor.kycDocuments?.filter(doc => doc.status === 'under_review').length || 0}</p>\n                                <p className=\"text-sm text-muted-foreground\">Under Review</p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                        <Card>\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-center gap-2\">\n                              <CheckCircle className=\"h-5 w-5 text-blue-600\" />\n                              <div>\n                                <p className=\"text-2xl font-bold text-blue-600\">\n                                  {selectedInvestor.kycDocuments?.length ? \n                                    Math.round(selectedInvestor.kycDocuments.reduce((acc, doc) => acc + (doc.confidenceScore || 0), 0) / selectedInvestor.kycDocuments.length) \n                                    : 0}%\n                                </p>\n                                <p className=\"text-sm text-muted-foreground\">Avg AI Confidence</p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                        <Card>\n                          <CardContent className=\"p-4\">\n                            <div className=\"flex items-center gap-2\">\n                              <FileText className=\"h-5 w-5 text-purple-600\" />\n                              <div>\n                                <p className=\"text-2xl font-bold text-purple-600\">{selectedInvestor.kycDocuments?.length || 0}</p>\n                                <p className=\"text-sm text-muted-foreground\">Total Documents</p>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      </div>\n\n                      {/* Document Cards */}\n                      <div className=\"space-y-4\">\n                        {selectedInvestor.kycDocuments?.map((document) => {\n                          const getStatusIcon = (status: string) => {\n                            switch (status) {\n                              case 'approved':\n                                return <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                              case 'rejected':\n                                return <XCircle className=\"h-5 w-5 text-red-600\" />\n                              case 'under_review':\n                                return <Clock className=\"h-5 w-5 text-orange-600\" />\n                              case 'pending':\n                                return <AlertTriangle className=\"h-5 w-5 text-yellow-600\" />\n                              default:\n                                return <FileText className=\"h-5 w-5 text-gray-600\" />\n                            }\n                          }\n\n                          const getStatusVariant = (status: string) => {\n                            switch (status) {\n                              case 'approved':\n                                return 'default' as const\n                              case 'rejected':\n                                return 'destructive' as const\n                              case 'under_review':\n                                return 'secondary' as const\n                              case 'pending':\n                                return 'outline' as const\n                              default:\n                                return 'outline' as const\n                            }\n                          }\n\n                          const getDocumentDisplayName = (type: string) => {\n                            const names = {\n                              'national_id': 'National ID',\n                              'passport': 'Passport',\n                              'iqama': 'Iqama',\n                              'selfie': 'Selfie Verification',\n                              'proof_of_income': 'Proof of Income',\n                              'address_proof': 'Address Proof',\n                              'employment_letter': 'Employment Letter',\n                              'bank_statement': 'Bank Statement'\n                            }\n                            return names[type as keyof typeof names] || type.replace('_', ' ')\n                          }\n\n                          return (\n                            <Card key={document.id} className=\"hover-elevate\">\n                              <CardContent className=\"p-6\">\n                                <div className=\"flex items-start gap-6\">\n                                  {/* Document Icon and Basic Info */}\n                                  <div className=\"flex items-center gap-3\">\n                                    {getStatusIcon(document.status)}\n                                    <div>\n                                      <h4 className=\"text-lg font-semibold\">{getDocumentDisplayName(document.documentType)}</h4>\n                                      <p className=\"text-sm text-muted-foreground\">\n                                        Uploaded: {formatDate(document.uploadedAt)}\n                                      </p>\n                                      {document.reviewedAt && (\n                                        <p className=\"text-sm text-muted-foreground\">\n                                          Reviewed: {formatDate(document.reviewedAt)}\n                                        </p>\n                                      )}\n                                    </div>\n                                  </div>\n\n                                  <div className=\"flex-1 space-y-4\">\n                                    {/* Status and AI Verification */}\n                                    <div className=\"flex items-center justify-between\">\n                                      <div className=\"flex items-center gap-3\">\n                                        <Badge variant={getStatusVariant(document.status)} data-testid={`badge-document-status-${document.id}`}>\n                                          {document.status.toUpperCase().replace('_', ' ')}\n                                        </Badge>\n                                        {document.isAuthentic !== null && (\n                                          <Badge variant={document.isAuthentic ? 'default' : 'destructive'}>\n                                            {document.isAuthentic ? 'AUTHENTIC' : 'NOT AUTHENTIC'}\n                                          </Badge>\n                                        )}\n                                      </div>\n                                      <div className=\"flex items-center gap-4\">\n                                        <Button variant=\"outline\" size=\"sm\" data-testid={`button-view-document-${document.id}`}>\n                                          <Eye className=\"h-4 w-4 mr-2\" />\n                                          View Document\n                                        </Button>\n                                        <Button variant=\"outline\" size=\"sm\" data-testid={`button-download-document-${document.id}`}>\n                                          <Download className=\"h-4 w-4 mr-2\" />\n                                          Download\n                                        </Button>\n                                      </div>\n                                    </div>\n\n                                    {/* AI Confidence Score */}\n                                    {document.confidenceScore && (\n                                      <div className=\"space-y-2\">\n                                        <div className=\"flex justify-between items-center\">\n                                          <span className=\"text-sm font-medium text-muted-foreground\">AI Confidence Score</span>\n                                          <span className={`text-sm font-bold ${\n                                            document.confidenceScore >= 90 ? 'text-green-600' : \n                                            document.confidenceScore >= 70 ? 'text-orange-600' : 'text-red-600'\n                                          }`}>\n                                            {document.confidenceScore}%\n                                          </span>\n                                        </div>\n                                        <Progress \n                                          value={document.confidenceScore} \n                                          className={`h-2 ${\n                                            document.confidenceScore >= 90 ? '[&>div]:bg-green-600' : \n                                            document.confidenceScore >= 70 ? '[&>div]:bg-orange-600' : '[&>div]:bg-red-600'\n                                          }`} \n                                        />\n                                      </div>\n                                    )}\n\n                                    {/* Review Notes */}\n                                    {document.reviewNotes && (\n                                      <div className=\"bg-muted/50 p-3 rounded-md\">\n                                        <h5 className=\"text-sm font-medium mb-1\">Review Notes</h5>\n                                        <p className=\"text-sm text-muted-foreground\">{document.reviewNotes}</p>\n                                        {document.reviewedBy && (\n                                          <p className=\"text-xs text-muted-foreground mt-1\">\n                                            Reviewed by: {document.reviewedBy}\n                                          </p>\n                                        )}\n                                      </div>\n                                    )}\n\n                                    {/* Extracted Data */}\n                                    {document.extractedData && (\n                                      <div className=\"bg-blue-50 dark:bg-blue-950/30 p-3 rounded-md\">\n                                        <h5 className=\"text-sm font-medium mb-2 flex items-center gap-2\">\n                                          <PieChart className=\"h-4 w-4\" />\n                                          Extracted Information\n                                        </h5>\n                                        <div className=\"grid grid-cols-2 gap-2 text-xs\">\n                                          {Object.entries(JSON.parse(document.extractedData)).map(([key, value]) => (\n                                            <div key={key} className=\"flex justify-between\">\n                                              <span className=\"text-muted-foreground capitalize\">\n                                                {key.replace(/([A-Z])/g, ' $1').trim()}:\n                                              </span>\n                                              <span className=\"font-medium text-right\">\n                                                {typeof value === 'string' ? value : JSON.stringify(value)}\n                                              </span>\n                                            </div>\n                                          ))}\n                                        </div>\n                                      </div>\n                                    )}\n                                  </div>\n                                </div>\n                              </CardContent>\n                            </Card>\n                          )\n                        })}\n\n                        {/* No Documents Message */}\n                        {(!selectedInvestor.kycDocuments || selectedInvestor.kycDocuments.length === 0) && (\n                          <Card>\n                            <CardContent className=\"p-8 text-center\">\n                              <FileText className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n                              <h3 className=\"text-lg font-medium mb-2\">No KYC Documents</h3>\n                              <p className=\"text-muted-foreground\">\n                                This investor has not uploaded any KYC documents yet.\n                              </p>\n                            </CardContent>\n                          </Card>\n                        )}\n                      </div>\n\n                      {/* KYC Completion Summary */}\n                      {selectedInvestor.kycDocuments && selectedInvestor.kycDocuments.length > 0 && (\n                        <Card>\n                          <CardHeader>\n                            <CardTitle className=\"text-lg flex items-center gap-2\">\n                              <Shield className=\"h-5 w-5\" />\n                              KYC Verification Summary\n                            </CardTitle>\n                          </CardHeader>\n                          <CardContent className=\"space-y-4\">\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                              <div>\n                                <span className=\"text-sm font-medium text-muted-foreground\">Overall Status</span>\n                                <p className=\"font-medium text-green-600\">Fully Verified</p>\n                              </div>\n                              <div>\n                                <span className=\"text-sm font-medium text-muted-foreground\">Verification Date</span>\n                                <p className=\"font-medium\">{formatDate(selectedInvestor.kycSubmittedAt)}</p>\n                              </div>\n                              <div>\n                                <span className=\"text-sm font-medium text-muted-foreground\">Investor Tier</span>\n                                <p className={`font-medium ${\n                                  selectedInvestor.investorTier === 'top' ? 'text-green-600' : \n                                  selectedInvestor.investorTier === 'medium' ? 'text-orange-600' : 'text-blue-600'\n                                }`}>\n                                  {getTierLabel(selectedInvestor.investorTier)}\n                                </p>\n                              </div>\n                            </div>\n                            \n                            <div className=\"bg-green-50 dark:bg-green-950/30 p-4 rounded-md\">\n                              <div className=\"flex items-center gap-2\">\n                                <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                                <span className=\"font-medium text-green-800 dark:text-green-200\">\n                                  All KYC requirements satisfied. Investor approved for investment activities.\n                                </span>\n                              </div>\n                            </div>\n                          </CardContent>\n                        </Card>\n                      )}\n                    </div>\n                  </TabsContent>\n                </Tabs>\n              </div>\n            )}\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  )\n}","size_bytes":128242},"client/src/components/mobile-layout.tsx":{"content":"import { ReactNode } from \"react\"\nimport { MobileNavigation } from \"./mobile-navigation\"\nimport { ThemeToggle } from \"./theme-toggle\"\nimport { LanguageSwitcher } from \"./language-switcher\"\nimport { useTranslation } from \"@/hooks/use-translation\"\n\ninterface MobileLayoutProps {\n  children: ReactNode\n}\n\nexport function MobileLayout({ children }: MobileLayoutProps) {\n  const { t } = useTranslation()\n  \n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Mobile Header */}\n      <header className=\"sticky top-0 z-40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 border-b border-border\">\n        <div className=\"flex items-center justify-between p-4\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-2 h-2 rounded-full bg-green-500 animate-pulse\" />\n            <div className=\"text-lg font-bold bg-gradient-to-r from-foreground to-primary/80 bg-clip-text text-transparent\">\n              Zaron\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <LanguageSwitcher />\n            <ThemeToggle />\n          </div>\n        </div>\n      </header>\n\n      {/* Mobile Content */}\n      <main className=\"p-4 pb-20\">\n        {children}\n      </main>\n\n      {/* Mobile Navigation */}\n      <MobileNavigation />\n    </div>\n  )\n}","size_bytes":1345},"client/src/components/mobile-navigation.tsx":{"content":"import { useState, useEffect } from \"react\"\nimport { Link, useLocation } from \"wouter\"\nimport { Home, Building2, TrendingUp, User } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport { useTranslation } from \"@/hooks/use-translation\"\n\nconst navigationItems = [\n  {\n    href: \"/mobile\",\n    labelKey: \"home\" as const,\n    icon: Home,\n    testId: \"nav-mobile-home\"\n  },\n  {\n    href: \"/mobile/properties\",\n    labelKey: \"properties\" as const,\n    icon: Building2,\n    testId: \"nav-mobile-properties\"\n  },\n  {\n    href: \"/mobile/portfolio\",\n    labelKey: \"portfolio\" as const,\n    icon: TrendingUp,\n    testId: \"nav-mobile-portfolio\"\n  },\n  {\n    href: \"/mobile/profile\",\n    labelKey: \"profile\" as const,\n    icon: User,\n    testId: \"nav-mobile-profile\"\n  }\n]\n\nexport function MobileNavigation() {\n  const [location] = useLocation()\n  const { t } = useTranslation()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [isVisible, setIsVisible] = useState(true)\n  const [lastScrollY, setLastScrollY] = useState(0)\n\n  // Auto-hide navigation on scroll down, show on scroll up\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY\n      \n      if (currentScrollY > lastScrollY && currentScrollY > 100) {\n        setIsVisible(false) // Hide when scrolling down\n      } else {\n        setIsVisible(true) // Show when scrolling up\n      }\n      \n      setLastScrollY(currentScrollY)\n    }\n\n    window.addEventListener('scroll', handleScroll, { passive: true })\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [lastScrollY])\n\n  // Update active index based on location\n  useEffect(() => {\n    const currentIndex = navigationItems.findIndex(item => \n      location === item.href || (item.href !== \"/mobile\" && location.startsWith(item.href))\n    )\n    if (currentIndex !== -1) {\n      setActiveIndex(currentIndex)\n    }\n  }, [location])\n\n  return (\n    <div className={cn(\n      \"fixed bottom-0 left-0 right-0 z-50 transition-all duration-300 ease-in-out\",\n      isVisible ? \"translate-y-0\" : \"translate-y-full\"\n    )}>\n      {/* Premium glassmorphism background */}\n      <div className=\"bg-background/95 backdrop-blur-xl border-t border-border/50 shadow-2xl\">\n        {/* Active indicator line */}\n        <div \n          className=\"absolute top-0 h-1 bg-gradient-to-r from-primary via-primary to-primary/80 rounded-full transition-all duration-300 ease-out shadow-lg\"\n          style={{\n            left: `${(activeIndex * 100) / navigationItems.length}%`,\n            width: `${100 / navigationItems.length}%`,\n            transform: 'translateX(25%) scaleX(0.5)'\n          }}\n        />\n        \n        <div className=\"flex items-center justify-around py-3 px-4 max-w-md mx-auto\">\n          {navigationItems.map((item, index) => {\n            const Icon = item.icon\n            const isActive = location === item.href || (item.href !== \"/mobile\" && location.startsWith(item.href))\n            \n            return (\n              <Link key={item.href} href={item.href}>\n                <button\n                  className={cn(\n                    \"flex flex-col items-center gap-1 p-3 rounded-2xl transition-all duration-300 min-w-[70px] relative overflow-hidden group\",\n                    \"hover:scale-105 active:scale-95\",\n                    isActive \n                      ? \"text-primary bg-gradient-to-br from-primary/15 via-primary/10 to-primary/5 shadow-lg border border-primary/20\" \n                      : \"text-muted-foreground hover:text-foreground hover:bg-gradient-to-br hover:from-muted/80 hover:to-muted/40 hover:shadow-md\"\n                  )}\n                  data-testid={item.testId}\n                  onTouchStart={() => {\n                    // Haptic feedback simulation with visual feedback\n                    const button = document.querySelector(`[data-testid=\"${item.testId}\"]`) as HTMLElement\n                    if (button) {\n                      button.style.transform = 'scale(0.95)'\n                      setTimeout(() => {\n                        button.style.transform = ''\n                      }, 150)\n                    }\n                  }}\n                >\n                  {/* Ripple effect background */}\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-primary/20 to-transparent opacity-0 group-active:opacity-100 transition-opacity duration-200 rounded-2xl\" />\n                  \n                  {/* Icon with enhanced styling */}\n                  <div className={cn(\n                    \"relative z-10 p-1 rounded-lg transition-all duration-300\",\n                    isActive && \"bg-primary/10 shadow-sm\"\n                  )}>\n                    <Icon className={cn(\n                      \"h-6 w-6 transition-all duration-300\", \n                      isActive ? \"text-primary drop-shadow-sm\" : \"group-hover:scale-110\"\n                    )} />\n                  </div>\n                  \n                  {/* Label with enhanced typography */}\n                  <span className={cn(\n                    \"text-xs font-semibold transition-all duration-300 relative z-10\", \n                    isActive ? \"text-primary drop-shadow-sm\" : \"group-hover:font-bold\"\n                  )}>\n                    {t(item.labelKey)}\n                  </span>\n                  \n                  {/* Active indicator dot */}\n                  {isActive && (\n                    <div className=\"absolute -top-1 left-1/2 transform -translate-x-1/2 w-2 h-2 bg-primary rounded-full shadow-lg animate-pulse\" />\n                  )}\n                </button>\n              </Link>\n            )\n          })}\n        </div>\n        \n        {/* Premium bottom safe area */}\n        <div className=\"h-1 bg-gradient-to-r from-transparent via-primary/10 to-transparent\" />\n      </div>\n    </div>\n  )\n}","size_bytes":5839},"client/src/pages/mobile/dashboard.tsx":{"content":"import { useState, useEffect } from \"react\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { Link } from \"wouter\"\nimport { \n  TrendingUp, \n  Building, \n  DollarSign, \n  BarChart3, \n  MapPin, \n  Star,\n  Calendar,\n  Bell,\n  Sparkles,\n  Crown,\n  Users,\n  Shield,\n  Zap,\n  ChevronRight,\n  Eye,\n  Heart,\n  Share,\n  Globe,\n  Target,\n  MessageSquare,\n  Brain,\n  ArrowUpRight,\n  Sunrise,\n  Moon,\n  Sun,\n  ChevronUp,\n  RefreshCw\n} from \"lucide-react\"\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { useTranslation } from \"@/hooks/use-translation\"\n\ninterface Property {\n  id: string\n  title: string\n  titleAr: string\n  titleHi: string\n  location: string\n  locationAr: string\n  locationHi: string\n  price: number\n  roi: number\n  image: string\n  type: string\n  shariahCompliant: boolean\n  vision2030: boolean\n  featured: boolean\n}\n\ninterface Investment {\n  id: string\n  propertyTitle: string\n  amount: number\n  roi: number\n  status: string\n  performance: \"excellent\" | \"good\" | \"stable\"\n}\n\ninterface MarketData {\n  totalValue: number\n  dailyChange: number\n  monthlyGrowth: number\n  yearlyReturn: number\n  activeProjects: number\n  vision2030Progress: number\n}\n\nconst saudiProperties: Property[] = [\n  {\n    id: \"1\",\n    title: \"NEOM The Line Residences\",\n    titleAr: \"مساكن ذا لاين نيوم\", \n    titleHi: \"नियोम द लाइन निवास\",\n    location: \"NEOM, Tabuk Province\",\n    locationAr: \"نيوم، منطقة تبوك\",\n    locationHi: \"नियोम, तबूक प्रांत\",\n    price: 4850000,\n    roi: 18.5,\n    image: \"/api/placeholder/400/300\",\n    type: \"Futuristic Residential\",\n    shariahCompliant: true,\n    vision2030: true,\n    featured: true\n  },\n  {\n    id: \"2\", \n    title: \"Red Sea Global Resort\",\n    titleAr: \"منتجع البحر الأحمر العالمي\",\n    titleHi: \"रेड सी ग्लोबल रिज़ॉर्ट\",\n    location: \"Red Sea Project\",\n    locationAr: \"مشروع البحر الأحمر\",\n    locationHi: \"रेड सी प्रोजेक्ट\",\n    price: 6200000,\n    roi: 22.3,\n    image: \"/api/placeholder/400/300\",\n    type: \"Luxury Resort\",\n    shariahCompliant: true,\n    vision2030: true,\n    featured: true\n  },\n  {\n    id: \"3\",\n    title: \"Qiddiya Entertainment City\",\n    titleAr: \"مدينة القدية الترفيهية\",\n    titleHi: \"किद्दिया मनोरंजन शहर\",\n    location: \"Riyadh, Central Region\",\n    locationAr: \"الرياض، المنطقة الوسطى\",\n    locationHi: \"रियाध, मध्य क्षेत्र\",\n    price: 3950000,\n    roi: 16.8,\n    image: \"/api/placeholder/400/300\",\n    type: \"Entertainment Complex\",\n    shariahCompliant: true,\n    vision2030: true,\n    featured: false\n  }\n]\n\nconst marketData: MarketData = {\n  totalValue: 2450000,\n  dailyChange: 2.4,\n  monthlyGrowth: 12.7,\n  yearlyReturn: 89.4,\n  activeProjects: 156,\n  vision2030Progress: 67\n}\n\nconst mockInvestments: Investment[] = [\n  {\n    id: \"1\",\n    propertyTitle: \"NEOM The Line Residences\",\n    amount: 750000,\n    roi: 18.5,\n    status: \"Active\",\n    performance: \"excellent\"\n  },\n  {\n    id: \"2\",\n    propertyTitle: \"Qiddiya Entertainment City\",\n    amount: 580000,\n    roi: 16.8,\n    status: \"Active\", \n    performance: \"excellent\"\n  },\n  {\n    id: \"3\",\n    propertyTitle: \"Red Sea Global Resort\",\n    amount: 420000,\n    roi: 22.3,\n    status: \"Active\",\n    performance: \"excellent\"\n  }\n]\n\nexport default function MobileDashboard() {\n  const { t, language } = useTranslation()\n  const [currentTime, setCurrentTime] = useState(new Date())\n  const [isRefreshing, setIsRefreshing] = useState(false)\n  const [showScrollTop, setShowScrollTop] = useState(false)\n  const [selectedTimeframe, setSelectedTimeframe] = useState(\"monthly\")\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000)\n    return () => clearInterval(timer)\n  }, [])\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setShowScrollTop(window.scrollY > 300)\n    }\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  const getGreeting = () => {\n    const hour = currentTime.getHours()\n    if (hour < 12) return \"Good Morning\"\n    if (hour < 17) return \"Good Afternoon\" \n    return \"Good Evening\"\n  }\n\n  const getGreetingIcon = () => {\n    const hour = currentTime.getHours()\n    if (hour < 12) return Sunrise\n    if (hour < 17) return Sun\n    return Moon\n  }\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true)\n    await new Promise(resolve => setTimeout(resolve, 2000))\n    setIsRefreshing(false)\n  }\n\n  const totalInvested = mockInvestments.reduce((sum, inv) => sum + inv.amount, 0)\n  const totalReturn = mockInvestments.reduce((sum, inv) => sum + (inv.amount * inv.roi / 100), 0)\n  const averageROI = mockInvestments.reduce((sum, inv) => sum + inv.roi, 0) / mockInvestments.length\n\n  const timeframes = [\n    { id: \"daily\", label: \"Daily\", value: `+${marketData.dailyChange}%`, icon: TrendingUp },\n    { id: \"monthly\", label: \"Monthly\", value: `+${marketData.monthlyGrowth}%`, icon: BarChart3 },\n    { id: \"yearly\", label: \"Yearly\", value: `+${marketData.yearlyReturn}%`, icon: Star }\n  ]\n\n  const quickActions = [\n    { \n      icon: Building, \n      label: t(\"properties\"), \n      path: \"/mobile/properties\", \n      gradient: \"from-blue-500 via-blue-600 to-cyan-500\",\n      description: \"Explore Vision 2030 projects\"\n    },\n    { \n      icon: BarChart3, \n      label: t(\"portfolio\"), \n      path: \"/mobile/portfolio\", \n      gradient: \"from-emerald-500 via-green-600 to-teal-500\",\n      description: \"Track your investments\"\n    }\n  ]\n\n  const GreetingIcon = getGreetingIcon()\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background/95 to-primary/10 relative overflow-hidden\">\n      {/* Animated Background Elements */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute top-10 left-4 w-72 h-72 bg-gradient-to-br from-primary/20 to-transparent rounded-full blur-3xl animate-pulse opacity-60\" />\n        <div className=\"absolute bottom-20 right-8 w-96 h-96 bg-gradient-to-tl from-secondary/15 to-transparent rounded-full blur-3xl animate-pulse opacity-40\" />\n        <div className=\"absolute top-1/2 left-1/2 w-64 h-64 bg-gradient-to-r from-accent/10 to-transparent rounded-full blur-2xl animate-pulse opacity-30\" />\n      </div>\n\n      {/* Floating Scroll to Top Button */}\n      <AnimatePresence>\n        {showScrollTop && (\n          <motion.button\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{ opacity: 1, scale: 1 }}\n            exit={{ opacity: 0, scale: 0 }}\n            onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n            className=\"fixed bottom-24 right-6 z-50 w-14 h-14 bg-gradient-to-r from-primary to-primary/80 text-white rounded-full shadow-2xl backdrop-blur-xl border border-white/20 flex items-center justify-center hover:scale-110 transition-all duration-300\"\n            data-testid=\"button-scroll-top\"\n          >\n            <ChevronUp className=\"w-6 h-6\" />\n          </motion.button>\n        )}\n      </AnimatePresence>\n\n      <div className=\"relative z-10 p-6 pb-28 space-y-8\">\n        {/* Enhanced Welcome Header */}\n        <motion.div \n          className=\"relative\"\n          initial={{ opacity: 0, y: -30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n        >\n          <Card className=\"bg-gradient-to-br from-primary via-primary/95 to-primary/80 text-white border-0 shadow-2xl overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-white/20 via-white/10 to-transparent\" />\n            <div className=\"absolute inset-0\">\n              <div className=\"absolute top-4 right-4 w-32 h-32 bg-white/10 rounded-full blur-2xl animate-pulse\" />\n              <div className=\"absolute bottom-4 left-4 w-24 h-24 bg-white/10 rounded-full blur-xl animate-pulse\" />\n            </div>\n            \n            <CardContent className=\"p-8 relative z-10\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-xl border border-white/30 shadow-lg\">\n                    <GreetingIcon className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div>\n                    <h1 className=\"text-2xl font-bold\">{getGreeting()}</h1>\n                    <p className=\"text-white/80 text-lg\">Investor</p>\n                  </div>\n                </div>\n                \n                <button\n                  onClick={handleRefresh}\n                  disabled={isRefreshing}\n                  className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center backdrop-blur-xl border border-white/30 hover:bg-white/30 transition-all duration-300\"\n                  data-testid=\"button-refresh\"\n                >\n                  <RefreshCw className={`w-5 h-5 text-white ${isRefreshing ? 'animate-spin' : ''}`} />\n                </button>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div className=\"text-center\">\n                  <p className=\"text-white/70 text-sm uppercase tracking-widest\">{t(\"total_portfolio_value\")}</p>\n                  <div className=\"text-4xl font-bold mt-2\">\n                    {(totalInvested + totalReturn).toLocaleString()} SAR\n                  </div>\n                </div>\n\n                {/* Time & Date */}\n                <div className=\"bg-white/15 rounded-2xl p-4 backdrop-blur-xl border border-white/20\">\n                  <div className=\"text-center\">\n                    <div className=\"text-2xl font-bold\">\n                      {currentTime.toLocaleTimeString(language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : 'en-US', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })}\n                    </div>\n                    <div className=\"text-white/80 text-sm mt-1\">\n                      {currentTime.toLocaleDateString(language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : 'en-US', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long', \n                        day: 'numeric'\n                      })}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Performance Metrics */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n          className=\"grid grid-cols-2 gap-4\"\n        >\n          <Card className=\"bg-gradient-to-br from-emerald-50 to-green-100 border-emerald-200 shadow-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-emerald-500 to-green-600 rounded-xl flex items-center justify-center shadow-lg\">\n                  <TrendingUp className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-emerald-700\">{t(\"total_return\")}</p>\n                  <p className=\"text-2xl font-bold text-emerald-800\">+{totalReturn.toLocaleString()}</p>\n                </div>\n              </div>\n              <Badge className=\"bg-emerald-500/10 text-emerald-700 border-emerald-300\">\n                <Sparkles className=\"w-3 h-3 mr-1\" />\n                +{((totalReturn / totalInvested) * 100).toFixed(1)}%\n              </Badge>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-blue-50 to-cyan-100 border-blue-200 shadow-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-xl flex items-center justify-center shadow-lg\">\n                  <BarChart3 className=\"w-6 h-6 text-white\" />\n                </div>\n                <div>\n                  <p className=\"text-sm font-medium text-blue-700\">Avg ROI</p>\n                  <p className=\"text-2xl font-bold text-blue-800\">{averageROI.toFixed(1)}%</p>\n                </div>\n              </div>\n              <Badge className=\"bg-blue-500/10 text-blue-700 border-blue-300\">\n                <Target className=\"w-3 h-3 mr-1\" />\n                {mockInvestments.length} {t(\"properties\")}\n              </Badge>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Timeframe Selector */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n        >\n          <Card className=\"shadow-xl border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <Globe className=\"w-5 h-5 text-primary\" />\n                Market Performance\n              </h3>\n              \n              <div className=\"grid grid-cols-3 gap-3 mb-4\">\n                {timeframes.map((timeframe) => (\n                  <button\n                    key={timeframe.id}\n                    onClick={() => setSelectedTimeframe(timeframe.id)}\n                    className={`p-4 rounded-xl transition-all duration-300 ${\n                      selectedTimeframe === timeframe.id\n                        ? 'bg-primary text-white shadow-lg'\n                        : 'bg-muted/50 hover:bg-muted'\n                    }`}\n                    data-testid={`button-timeframe-${timeframe.id}`}\n                  >\n                    <timeframe.icon className=\"w-5 h-5 mx-auto mb-2\" />\n                    <div className=\"text-xs font-medium\">{timeframe.label}</div>\n                    <div className=\"text-sm font-bold\">{timeframe.value}</div>\n                  </button>\n                ))}\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"bg-gradient-to-r from-primary/10 to-primary/5 p-4 rounded-xl\">\n                  <p className=\"text-sm text-muted-foreground\">Active Projects</p>\n                  <p className=\"text-xl font-bold text-primary\">{marketData.activeProjects}</p>\n                </div>\n                <div className=\"bg-gradient-to-r from-green-500/10 to-green-500/5 p-4 rounded-xl\">\n                  <p className=\"text-sm text-muted-foreground\">Vision 2030</p>\n                  <p className=\"text-xl font-bold text-green-600\">{marketData.vision2030Progress}%</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Quick Actions */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n          className=\"space-y-4\"\n        >\n          <h3 className=\"text-xl font-bold flex items-center gap-2\">\n            <Zap className=\"w-6 h-6 text-primary\" />\n            Quick Actions\n          </h3>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            {quickActions.map((action, index) => (\n              <Link key={action.path} href={action.path}>\n                <motion.div\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  className=\"relative group\"\n                >\n                  <Card className=\"h-32 cursor-pointer border-0 shadow-xl overflow-hidden bg-gradient-to-br from-card to-card/60 backdrop-blur-sm\">\n                    <div className={`absolute inset-0 bg-gradient-to-br ${action.gradient} opacity-10 group-hover:opacity-20 transition-opacity duration-300`} />\n                    <CardContent className=\"h-full flex flex-col items-center justify-center relative z-10 text-center p-4\">\n                      <div className={`w-12 h-12 bg-gradient-to-br ${action.gradient} rounded-xl flex items-center justify-center mb-3 shadow-lg group-hover:scale-110 transition-transform duration-300`}>\n                        <action.icon className=\"w-6 h-6 text-white\" />\n                      </div>\n                      <div className=\"font-semibold text-sm\">{action.label}</div>\n                      <div className=\"text-xs text-muted-foreground mt-1\">{action.description}</div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              </Link>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Featured Vision 2030 Properties */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.5 }}\n          className=\"space-y-4\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-xl font-bold flex items-center gap-2\">\n              <Crown className=\"w-6 h-6 text-primary\" />\n              Featured Properties\n            </h3>\n            <Link href=\"/mobile/properties\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-primary hover:bg-primary/10\" data-testid=\"button-view-all-properties\">\n                View All\n                <ChevronRight className=\"w-4 h-4 ml-1\" />\n              </Button>\n            </Link>\n          </div>\n\n          <div className=\"space-y-4\">\n            {saudiProperties.filter(p => p.featured).map((property, index) => (\n              <motion.div\n                key={property.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5, delay: 0.6 + index * 0.1 }}\n              >\n                <Card className=\"shadow-xl border-0 overflow-hidden bg-gradient-to-r from-card to-card/70 backdrop-blur-sm hover:shadow-2xl transition-all duration-300 group cursor-pointer\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex gap-4\">\n                      <div className=\"w-24 h-24 rounded-2xl bg-gradient-to-br from-primary/20 via-primary/10 to-secondary/20 flex items-center justify-center shadow-lg group-hover:scale-105 transition-transform duration-300\">\n                        <Building className=\"w-10 h-10 text-primary\" />\n                      </div>\n                      \n                      <div className=\"flex-1 space-y-3\">\n                        <div>\n                          <h4 className=\"font-bold text-lg leading-tight\">\n                            {language === 'ar' ? property.titleAr : language === 'hi' ? property.titleHi : property.title}\n                          </h4>\n                          <p className=\"text-sm text-muted-foreground flex items-center gap-1 mt-1\">\n                            <MapPin className=\"w-3 h-3\" />\n                            {language === 'ar' ? property.locationAr : language === 'hi' ? property.locationHi : property.location}\n                          </p>\n                        </div>\n                        \n                        <div className=\"flex gap-2 flex-wrap\">\n                          {property.vision2030 && (\n                            <Badge className=\"bg-primary/10 text-primary border-primary/20 text-xs\">\n                              Vision 2030\n                            </Badge>\n                          )}\n                          {property.shariahCompliant && (\n                            <Badge className=\"bg-green-500/10 text-green-600 border-green-500/20 text-xs\">\n                              <Shield className=\"w-3 h-3 mr-1\" />\n                              Halal\n                            </Badge>\n                          )}\n                        </div>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"text-lg font-bold text-primary\">\n                            {property.price.toLocaleString()} SAR\n                          </div>\n                          <div className=\"flex items-center gap-1 bg-emerald-50 px-3 py-1 rounded-full\">\n                            <TrendingUp className=\"w-3 h-3 text-emerald-600\" />\n                            <span className=\"text-sm font-semibold text-emerald-600\">{property.roi}% ROI</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Active Investments */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.7 }}\n          className=\"space-y-4\"\n        >\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-xl font-bold flex items-center gap-2\">\n              <Star className=\"w-6 h-6 text-primary\" />\n              Your Investments\n            </h3>\n            <Link href=\"/mobile/portfolio\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"text-primary hover:bg-primary/10\" data-testid=\"button-view-portfolio\">\n                View Portfolio\n                <ChevronRight className=\"w-4 h-4 ml-1\" />\n              </Button>\n            </Link>\n          </div>\n\n          <div className=\"space-y-3\">\n            {mockInvestments.slice(0, 3).map((investment, index) => (\n              <motion.div\n                key={investment.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5, delay: 0.8 + index * 0.1 }}\n              >\n                <Card className=\"shadow-lg border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm hover:shadow-xl transition-all duration-300\">\n                  <CardContent className=\"p-5\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-semibold text-base mb-1\">{investment.propertyTitle}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Invested: {investment.amount.toLocaleString()} SAR\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold text-emerald-600 mb-1\">\n                          +{investment.roi}%\n                        </div>\n                        <Badge \n                          className={`text-xs ${\n                            investment.performance === 'excellent' \n                              ? 'bg-emerald-500/10 text-emerald-600 border-emerald-500/20' \n                              : 'bg-blue-500/10 text-blue-600 border-blue-500/20'\n                          }`}\n                        >\n                          {investment.performance === 'excellent' ? 'Excellent' : investment.performance === 'good' ? 'Good' : 'Stable'}\n                        </Badge>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* AI Insights CTA */}\n      </div>\n    </div>\n  )\n}","size_bytes":23933},"client/src/pages/mobile/portfolio.tsx":{"content":"import { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter } from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { \n  TrendingUp, \n  TrendingDown, \n  Building2, \n  Calendar, \n  MapPin, \n  Users, \n  BarChart3,\n  DollarSign,\n  Eye,\n  Download,\n  Share2,\n  PieChart,\n  LineChart,\n  Target,\n  Shield,\n  Crown,\n  Sparkles,\n  Clock,\n  ArrowUpRight,\n  ArrowDownRight,\n  AlertTriangle,\n  CheckCircle,\n  Zap,\n  Globe,\n  Star,\n  Filter,\n  RefreshCw,\n  Calculator,\n  TrendingUp as Growth,\n  Award,\n  Banknote\n} from \"lucide-react\"\n\ninterface Investment {\n  id: string\n  name: string\n  nameAr: string\n  nameHi: string\n  type: string\n  location: string\n  locationAr: string\n  locationHi: string\n  image: string\n  investedAmount: number\n  currentValue: number\n  returnAmount: number\n  returnPercentage: number\n  status: \"active\" | \"pending\" | \"completed\"\n  investmentDate: string\n  performance: \"excellent\" | \"good\" | \"fair\" | \"poor\"\n  occupancyRate: number\n  monthlyRevenue: number\n  nextDistribution: string\n  vision2030: boolean\n  shariahCompliant: boolean\n  riskLevel: \"low\" | \"medium\" | \"high\"\n  category: \"residential\" | \"commercial\" | \"mixed\" | \"hospitality\" | \"industrial\"\n  projectStage: \"planning\" | \"construction\" | \"operational\" | \"completed\"\n  expectedCompletion: string\n  totalUnits: number\n  ownedUnits: number\n}\n\ninterface PortfolioStats {\n  totalValue: number\n  totalInvested: number\n  totalReturn: number\n  returnPercentage: number\n  monthlyIncome: number\n  averageROI: number\n  activeInvestments: number\n  portfolioGrowth: {\n    daily: number\n    weekly: number\n    monthly: number\n    yearly: number\n  }\n  riskScore: number\n  diversificationScore: number\n  vision2030Allocation: number\n  shariahCompliance: number\n}\n\nconst mockInvestments: Investment[] = [\n  {\n    id: \"1\",\n    name: \"NEOM The Line Residences\",\n    nameAr: \"مساكن ذا لاين نيوم\",\n    nameHi: \"नियोम द लाइन निवास\",\n    type: \"Futuristic Smart City\",\n    location: \"NEOM, Tabuk Province\",\n    locationAr: \"نيوم، منطقة تبوك\",\n    locationHi: \"नियोम, तबूक प्रांत\",\n    image: \"/api/placeholder/400/300\",\n    investedAmount: 500000,\n    currentValue: 634000,\n    returnAmount: 134000,\n    returnPercentage: 26.8,\n    status: \"active\",\n    investmentDate: \"2024-01-15\",\n    performance: \"excellent\",\n    occupancyRate: 0, // Under construction\n    monthlyRevenue: 0,\n    nextDistribution: \"2024-12-31\",\n    vision2030: true,\n    shariahCompliant: true,\n    riskLevel: \"medium\",\n    category: \"residential\",\n    projectStage: \"construction\",\n    expectedCompletion: \"2030\",\n    totalUnits: 1000,\n    ownedUnits: 5\n  },\n  {\n    id: \"2\",\n    name: \"Red Sea Global Marina\",\n    nameAr: \"مارينا البحر الأحمر العالمية\",\n    nameHi: \"रेड सी ग्लोबल मरीना\",\n    type: \"Luxury Resort & Marina\",\n    location: \"Red Sea Project\",\n    locationAr: \"مشروع البحر الأحمر\",\n    locationHi: \"रेड सी प्रोजेक्ट\",\n    image: \"/api/placeholder/400/300\",\n    investedAmount: 400000,\n    currentValue: 498000,\n    returnAmount: 98000,\n    returnPercentage: 24.5,\n    status: \"active\",\n    investmentDate: \"2024-02-20\",\n    performance: \"excellent\",\n    occupancyRate: 78,\n    monthlyRevenue: 12400,\n    nextDistribution: \"2024-12-31\",\n    vision2030: true,\n    shariahCompliant: true,\n    riskLevel: \"low\",\n    category: \"hospitality\",\n    projectStage: \"operational\",\n    expectedCompletion: \"2026\",\n    totalUnits: 500,\n    ownedUnits: 8\n  },\n  {\n    id: \"3\",\n    name: \"Qiddiya Entertainment City\",\n    nameAr: \"مدينة القدية الترفيهية\",\n    nameHi: \"किद्दिया मनोरंजन शहर\",\n    type: \"Entertainment Hub\",\n    location: \"Riyadh, Central Region\",\n    locationAr: \"الرياض، المنطقة الوسطى\",\n    locationHi: \"रियाध, मध्य क्षेत्र\",\n    image: \"/api/placeholder/400/300\",\n    investedAmount: 350000,\n    currentValue: 450000,\n    returnAmount: 100000,\n    returnPercentage: 28.6,\n    status: \"active\",\n    investmentDate: \"2024-03-10\",\n    performance: \"excellent\",\n    occupancyRate: 65,\n    monthlyRevenue: 8200,\n    nextDistribution: \"2024-12-31\",\n    vision2030: true,\n    shariahCompliant: true,\n    riskLevel: \"medium\",\n    category: \"commercial\",\n    projectStage: \"construction\",\n    expectedCompletion: \"2030\",\n    totalUnits: 750,\n    ownedUnits: 12\n  }\n]\n\nconst portfolioStats: PortfolioStats = {\n  totalValue: 1582000,\n  totalInvested: 1250000,\n  totalReturn: 332000,\n  returnPercentage: 26.6,\n  monthlyIncome: 20600,\n  averageROI: 26.3,\n  activeInvestments: 3,\n  portfolioGrowth: {\n    daily: 0.12,\n    weekly: 1.8,\n    monthly: 4.7,\n    yearly: 26.6\n  },\n  riskScore: 72, // Medium risk\n  diversificationScore: 85, // Well diversified\n  vision2030Allocation: 100, // 100% Vision 2030 projects\n  shariahCompliance: 100 // 100% Shariah compliant\n}\n\nconst performanceData = [\n  { month: \"Jan 2024\", value: 1250000, growth: 0 },\n  { month: \"Feb 2024\", value: 1285000, growth: 2.8 },\n  { month: \"Mar 2024\", value: 1325000, growth: 6.0 },\n  { month: \"Apr 2024\", value: 1368000, growth: 9.4 },\n  { month: \"May 2024\", value: 1412000, growth: 13.0 },\n  { month: \"Jun 2024\", value: 1456000, growth: 16.5 },\n  { month: \"Jul 2024\", value: 1498000, growth: 19.8 },\n  { month: \"Aug 2024\", value: 1535000, growth: 22.8 },\n  { month: \"Sep 2024\", value: 1568000, growth: 25.4 },\n  { month: \"Oct 2024\", value: 1575000, growth: 26.0 },\n  { month: \"Nov 2024\", value: 1582000, growth: 26.6 }\n]\n\nexport default function MobilePortfolio() {\n  const { t, language } = useTranslation()\n  const { toast } = useToast()\n  \n  const [selectedTab, setSelectedTab] = useState(\"overview\")\n  const [selectedTimeframe, setSelectedTimeframe] = useState(\"monthly\")\n  const [sortBy, setSortBy] = useState(\"performance\")\n  const [filterBy, setFilterBy] = useState(\"all\")\n  const [showDetails, setShowDetails] = useState<string | null>(null)\n  const [isWithdrawalDialogOpen, setIsWithdrawalDialogOpen] = useState(false)\n  const [selectedInvestment, setSelectedInvestment] = useState<Investment | null>(null)\n  const [withdrawalAmount, setWithdrawalAmount] = useState(\"\")\n  const [withdrawalReason, setWithdrawalReason] = useState(\"\")\n\n  const timeframes = [\n    { id: \"daily\", label: \"Daily\", value: portfolioStats.portfolioGrowth.daily },\n    { id: \"weekly\", label: \"Weekly\", value: portfolioStats.portfolioGrowth.weekly },\n    { id: \"monthly\", label: \"Monthly\", value: portfolioStats.portfolioGrowth.monthly },\n    { id: \"yearly\", label: \"Yearly\", value: portfolioStats.portfolioGrowth.yearly }\n  ]\n\n  const getInvestmentName = (investment: Investment) => {\n    if (language === 'ar') return investment.nameAr\n    if (language === 'hi') return investment.nameHi\n    return investment.name\n  }\n\n  const getInvestmentLocation = (investment: Investment) => {\n    if (language === 'ar') return investment.locationAr\n    if (language === 'hi') return investment.locationHi\n    return investment.location\n  }\n\n  const getPerformanceColor = (performance: string) => {\n    switch (performance) {\n      case \"excellent\": return \"from-green-500 to-emerald-500\"\n      case \"good\": return \"from-blue-500 to-cyan-500\"\n      case \"fair\": return \"from-yellow-500 to-orange-500\"\n      case \"poor\": return \"from-red-500 to-rose-500\"\n      default: return \"from-gray-500 to-slate-500\"\n    }\n  }\n\n  const getPerformanceIcon = (performance: string) => {\n    switch (performance) {\n      case \"excellent\": return <TrendingUp className=\"w-4 h-4\" />\n      case \"good\": return <TrendingUp className=\"w-4 h-4\" />\n      case \"fair\": return <TrendingUp className=\"w-4 h-4\" />\n      case \"poor\": return <TrendingDown className=\"w-4 h-4\" />\n      default: return <BarChart3 className=\"w-4 h-4\" />\n    }\n  }\n\n  const getRiskIcon = (risk: string) => {\n    switch (risk) {\n      case \"low\": return <Shield className=\"w-4 h-4 text-green-600\" />\n      case \"medium\": return <AlertTriangle className=\"w-4 h-4 text-yellow-600\" />\n      case \"high\": return <AlertTriangle className=\"w-4 h-4 text-red-600\" />\n      default: return <Shield className=\"w-4 h-4 text-gray-600\" />\n    }\n  }\n\n  const downloadReport = () => {\n    toast({\n      title: \"Report Generated\",\n      description: \"Your portfolio report has been downloaded.\",\n    })\n  }\n\n  const sharePortfolio = () => {\n    toast({\n      title: \"Portfolio Shared\",\n      description: \"Portfolio link copied to clipboard.\",\n    })\n  }\n\n  const handleWithdrawalRequest = (investment: Investment) => {\n    setSelectedInvestment(investment)\n    setWithdrawalAmount(\"\")\n    setWithdrawalReason(\"\")\n    setIsWithdrawalDialogOpen(true)\n  }\n\n  const submitWithdrawalRequest = () => {\n    const amount = parseFloat(withdrawalAmount)\n    if (!amount || amount <= 0) {\n      toast({\n        title: \"Invalid Amount\",\n        description: \"Please enter a valid withdrawal amount.\",\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    if (!selectedInvestment) return\n\n    if (amount > selectedInvestment.currentValue) {\n      toast({\n        title: \"Amount Too High\",\n        description: `Maximum withdrawal amount is ${selectedInvestment.currentValue.toLocaleString()} SAR`,\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    if (!withdrawalReason.trim()) {\n      toast({\n        title: \"Reason Required\",\n        description: \"Please provide a reason for your withdrawal request.\",\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    toast({\n      title: \"Withdrawal Request Submitted\",\n      description: `Your withdrawal request for ${amount.toLocaleString()} SAR has been submitted for review.`,\n    })\n\n    setIsWithdrawalDialogOpen(false)\n    setSelectedInvestment(null)\n    setWithdrawalAmount(\"\")\n    setWithdrawalReason(\"\")\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background/95 to-primary/5 relative overflow-hidden\">\n      {/* Background Effects */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute top-16 left-6 w-72 h-72 bg-gradient-to-br from-emerald-500/10 to-transparent rounded-full blur-3xl animate-pulse opacity-60\" />\n        <div className=\"absolute bottom-32 right-8 w-80 h-80 bg-gradient-to-tl from-blue-500/10 to-transparent rounded-full blur-3xl animate-pulse opacity-40\" />\n      </div>\n\n      <div className=\"relative z-10 p-6 pb-28 space-y-8\">\n        {/* Enhanced Header */}\n        <motion.div \n          className=\"space-y-6\"\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-foreground to-primary bg-clip-text text-transparent\">\n                {t(\"portfolio\")}\n              </h1>\n              <p className=\"text-muted-foreground text-lg\">\n                Track your Vision 2030 investments\n              </p>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button size=\"icon\" variant=\"outline\" onClick={downloadReport} data-testid=\"button-download-report\">\n                <Download className=\"w-4 h-4\" />\n              </Button>\n              <Button size=\"icon\" variant=\"outline\" onClick={sharePortfolio} data-testid=\"button-share-portfolio\">\n                <Share2 className=\"w-4 h-4\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Portfolio Summary */}\n          <Card className=\"bg-gradient-to-br from-emerald-500 via-green-600 to-teal-500 text-white border-0 shadow-2xl overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-white/20 via-white/10 to-transparent\" />\n            <div className=\"absolute inset-0\">\n              <div className=\"absolute top-4 right-4 w-32 h-32 bg-white/10 rounded-full blur-2xl animate-pulse\" />\n              <div className=\"absolute bottom-4 left-4 w-24 h-24 bg-white/10 rounded-full blur-xl animate-pulse\" />\n            </div>\n            \n            <CardContent className=\"p-8 relative z-10\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-xl border border-white/30 shadow-lg\">\n                    <PieChart className=\"w-8 h-8 text-white\" />\n                  </div>\n                  <div>\n                    <h2 className=\"text-2xl font-bold\">Portfolio Value</h2>\n                    <p className=\"text-white/80\">Total Investment Returns</p>\n                  </div>\n                </div>\n                <Badge className=\"bg-white/20 text-white border-white/30 backdrop-blur-xl px-4 py-2\">\n                  <TrendingUp className=\"w-4 h-4 mr-2\" />\n                  +{portfolioStats.returnPercentage}%\n                </Badge>\n              </div>\n\n              <div className=\"text-center mb-6\">\n                <div className=\"text-5xl font-bold mb-2\">\n                  {portfolioStats.totalValue.toLocaleString()} SAR\n                </div>\n                <div className=\"text-white/80 text-lg\">\n                  +{portfolioStats.totalReturn.toLocaleString()} SAR profit\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div className=\"text-center p-4 bg-white/15 rounded-2xl backdrop-blur-xl border border-white/20\">\n                  <p className=\"text-white/70 text-sm mb-1\">Invested</p>\n                  <p className=\"text-xl font-bold\">{portfolioStats.totalInvested.toLocaleString()}</p>\n                </div>\n                <div className=\"text-center p-4 bg-white/15 rounded-2xl backdrop-blur-xl border border-white/20\">\n                  <p className=\"text-white/70 text-sm mb-1\">Monthly Income</p>\n                  <p className=\"text-xl font-bold\">{portfolioStats.monthlyIncome.toLocaleString()}</p>\n                </div>\n                <div className=\"text-center p-4 bg-white/15 rounded-2xl backdrop-blur-xl border border-white/20\">\n                  <p className=\"text-white/70 text-sm mb-1\">Properties</p>\n                  <p className=\"text-xl font-bold\">{portfolioStats.activeInvestments}</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Performance Metrics */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <Card className=\"bg-gradient-to-br from-blue-50 to-cyan-50 border-blue-200 shadow-xl\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-xl flex items-center justify-center shadow-lg\">\n                    <Target className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-blue-700\">Risk Score</p>\n                    <p className=\"text-2xl font-bold text-blue-800\">{portfolioStats.riskScore}</p>\n                  </div>\n                </div>\n                <Progress value={portfolioStats.riskScore} className=\"h-2\" />\n                <p className=\"text-xs text-blue-600 mt-2\">Medium Risk Portfolio</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-gradient-to-br from-purple-50 to-violet-50 border-purple-200 shadow-xl\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center gap-3 mb-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-violet-600 rounded-xl flex items-center justify-center shadow-lg\">\n                    <Award className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-purple-700\">Diversification</p>\n                    <p className=\"text-2xl font-bold text-purple-800\">{portfolioStats.diversificationScore}</p>\n                  </div>\n                </div>\n                <Progress value={portfolioStats.diversificationScore} className=\"h-2\" />\n                <p className=\"text-xs text-purple-600 mt-2\">Well Diversified</p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Growth Timeframes */}\n          <Card className=\"shadow-xl border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                <LineChart className=\"w-5 h-5 text-primary\" />\n                Portfolio Growth\n              </h3>\n              \n              <div className=\"grid grid-cols-4 gap-3\">\n                {timeframes.map((timeframe) => (\n                  <button\n                    key={timeframe.id}\n                    onClick={() => setSelectedTimeframe(timeframe.id)}\n                    className={`p-4 rounded-xl transition-all duration-300 ${\n                      selectedTimeframe === timeframe.id\n                        ? 'bg-primary text-white shadow-lg'\n                        : 'bg-muted/50 hover:bg-muted'\n                    }`}\n                    data-testid={`button-timeframe-${timeframe.id}`}\n                  >\n                    <div className=\"text-xs font-medium mb-1\">{timeframe.label}</div>\n                    <div className=\"text-sm font-bold text-green-600\">\n                      +{timeframe.value.toFixed(1)}%\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Tabs */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <Tabs value={selectedTab} onValueChange={setSelectedTab}>\n            <TabsList className=\"grid w-full grid-cols-3 bg-card/50 backdrop-blur-sm\">\n              <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n              <TabsTrigger value=\"investments\">Investments</TabsTrigger>\n              <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"overview\" className=\"space-y-6 mt-6\">\n              {/* Key Insights */}\n              <Card className=\"shadow-xl border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                    <Sparkles className=\"w-5 h-5 text-primary\" />\n                    Key Insights\n                  </h3>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"p-4 bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl border border-green-200\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                        <span className=\"font-semibold text-green-700\">Vision 2030</span>\n                      </div>\n                      <p className=\"text-2xl font-bold text-green-800\">{portfolioStats.vision2030Allocation}%</p>\n                      <p className=\"text-xs text-green-600\">of portfolio</p>\n                    </div>\n                    \n                    <div className=\"p-4 bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl border border-blue-200\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        <Shield className=\"w-5 h-5 text-blue-600\" />\n                        <span className=\"font-semibold text-blue-700\">Shariah Compliant</span>\n                      </div>\n                      <p className=\"text-2xl font-bold text-blue-800\">{portfolioStats.shariahCompliance}%</p>\n                      <p className=\"text-xs text-blue-600\">compliance rate</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Recent Activity */}\n              <Card className=\"shadow-xl border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                    <Clock className=\"w-5 h-5 text-primary\" />\n                    Recent Activity\n                  </h3>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-4 p-4 bg-muted/50 rounded-xl\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center\">\n                        <ArrowUpRight className=\"w-5 h-5 text-green-600\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"font-semibold text-sm\">Value Increase</p>\n                        <p className=\"text-xs text-muted-foreground\">NEOM portfolio gained 4.2% this week</p>\n                      </div>\n                      <p className=\"text-sm font-semibold text-green-600\">+26,800 SAR</p>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-4 p-4 bg-muted/50 rounded-xl\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                        <Banknote className=\"w-5 h-5 text-blue-600\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"font-semibold text-sm\">Income Distribution</p>\n                        <p className=\"text-xs text-muted-foreground\">Monthly rental income received</p>\n                      </div>\n                      <p className=\"text-sm font-semibold text-blue-600\">20,600 SAR</p>\n                    </div>\n                    \n                    <div className=\"flex items-center gap-4 p-4 bg-muted/50 rounded-xl\">\n                      <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center\">\n                        <Star className=\"w-5 h-5 text-purple-600\" />\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"font-semibold text-sm\">Performance Update</p>\n                        <p className=\"text-xs text-muted-foreground\">Red Sea project milestone achieved</p>\n                      </div>\n                      <p className=\"text-sm font-semibold text-purple-600\">+2.1% ROI</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"investments\" className=\"space-y-6 mt-6\">\n              {/* Filters and Sort */}\n              <div className=\"flex gap-3 overflow-x-auto\">\n                <Select value={sortBy} onValueChange={setSortBy}>\n                  <SelectTrigger className=\"w-40 bg-card/50 backdrop-blur-sm\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"performance\">Performance</SelectItem>\n                    <SelectItem value=\"value\">Current Value</SelectItem>\n                    <SelectItem value=\"return\">Total Return</SelectItem>\n                    <SelectItem value=\"date\">Investment Date</SelectItem>\n                  </SelectContent>\n                </Select>\n                \n                <Select value={filterBy} onValueChange={setFilterBy}>\n                  <SelectTrigger className=\"w-32 bg-card/50 backdrop-blur-sm\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All</SelectItem>\n                    <SelectItem value=\"active\">Active</SelectItem>\n                    <SelectItem value=\"vision2030\">Vision 2030</SelectItem>\n                    <SelectItem value=\"shariah\">Shariah</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Investments List */}\n              <div className=\"space-y-4\">\n                <AnimatePresence>\n                  {mockInvestments.map((investment, index) => (\n                    <motion.div\n                      key={investment.id}\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0, y: -20 }}\n                      transition={{ duration: 0.5, delay: index * 0.1 }}\n                    >\n                      <Card className=\"shadow-xl border-0 overflow-hidden bg-gradient-to-r from-card via-card/95 to-card/80 backdrop-blur-sm hover:shadow-2xl transition-all duration-500 group\">\n                        <CardContent className=\"p-6\">\n                          <div className=\"space-y-4\">\n                            {/* Header */}\n                            <div className=\"flex items-start gap-4\">\n                              <div className=\"w-16 h-16 rounded-2xl bg-gradient-to-br from-primary/20 via-primary/10 to-secondary/20 flex items-center justify-center shadow-lg group-hover:scale-105 transition-transform duration-300\">\n                                <Building2 className=\"w-8 h-8 text-primary\" />\n                              </div>\n                              \n                              <div className=\"flex-1\">\n                                <h4 className=\"font-bold text-lg leading-tight\">\n                                  {getInvestmentName(investment)}\n                                </h4>\n                                <p className=\"text-sm text-muted-foreground flex items-center gap-1 mt-1\">\n                                  <MapPin className=\"w-3 h-3\" />\n                                  {getInvestmentLocation(investment)}\n                                </p>\n                                <div className=\"flex gap-2 mt-2\">\n                                  {investment.vision2030 && (\n                                    <Badge className=\"bg-primary/10 text-primary border-primary/20 text-xs\">\n                                      Vision 2030\n                                    </Badge>\n                                  )}\n                                  {investment.shariahCompliant && (\n                                    <Badge className=\"bg-green-500/10 text-green-600 border-green-500/20 text-xs\">\n                                      <Shield className=\"w-3 h-3 mr-1\" />\n                                      Halal\n                                    </Badge>\n                                  )}\n                                </div>\n                              </div>\n                              \n                              <div className=\"text-right\">\n                                <div className={`w-10 h-10 bg-gradient-to-r ${getPerformanceColor(investment.performance)} rounded-xl flex items-center justify-center shadow-lg mb-2`}>\n                                  {getPerformanceIcon(investment.performance)}\n                                </div>\n                                <Badge \n                                  className={`text-xs font-bold ${\n                                    investment.performance === 'excellent' \n                                      ? 'bg-green-100 text-green-700 border-green-300' \n                                      : 'bg-blue-100 text-blue-700 border-blue-300'\n                                  }`}\n                                >\n                                  {investment.performance}\n                                </Badge>\n                              </div>\n                            </div>\n\n                            {/* Financial Metrics */}\n                            <div className=\"grid grid-cols-2 gap-4\">\n                              <div>\n                                <p className=\"text-sm text-muted-foreground\">Invested Amount</p>\n                                <p className=\"text-lg font-bold\">{investment.investedAmount.toLocaleString()} SAR</p>\n                              </div>\n                              <div>\n                                <p className=\"text-sm text-muted-foreground\">Current Value</p>\n                                <p className=\"text-lg font-bold text-primary\">{investment.currentValue.toLocaleString()} SAR</p>\n                              </div>\n                              <div>\n                                <p className=\"text-sm text-muted-foreground\">Total Return</p>\n                                <p className=\"text-lg font-bold text-green-600\">+{investment.returnAmount.toLocaleString()} SAR</p>\n                              </div>\n                              <div>\n                                <p className=\"text-sm text-muted-foreground\">ROI</p>\n                                <p className=\"text-lg font-bold text-green-600\">+{investment.returnPercentage}%</p>\n                              </div>\n                            </div>\n\n                            {/* Additional Info */}\n                            <div className=\"grid grid-cols-3 gap-4\">\n                              <div className=\"text-center p-3 bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl border border-blue-100\">\n                                {getRiskIcon(investment.riskLevel)}\n                                <p className=\"text-xs text-blue-700 font-medium mt-1\">Risk Level</p>\n                                <p className=\"text-sm font-bold text-blue-800 capitalize\">{investment.riskLevel}</p>\n                              </div>\n                              \n                              <div className=\"text-center p-3 bg-gradient-to-br from-emerald-50 to-green-50 rounded-xl border border-emerald-100\">\n                                <Calendar className=\"w-4 h-4 text-emerald-600 mx-auto mb-1\" />\n                                <p className=\"text-xs text-emerald-700 font-medium\">Project Stage</p>\n                                <p className=\"text-sm font-bold text-emerald-800 capitalize\">{investment.projectStage}</p>\n                              </div>\n                              \n                              <div className=\"text-center p-3 bg-gradient-to-br from-purple-50 to-violet-50 rounded-xl border border-purple-100\">\n                                <Users className=\"w-4 h-4 text-purple-600 mx-auto mb-1\" />\n                                <p className=\"text-xs text-purple-700 font-medium\">Units Owned</p>\n                                <p className=\"text-sm font-bold text-purple-800\">{investment.ownedUnits}</p>\n                              </div>\n                            </div>\n\n                            {/* Occupancy Progress (if applicable) */}\n                            {investment.occupancyRate > 0 && (\n                              <div className=\"space-y-2\">\n                                <div className=\"flex justify-between text-sm\">\n                                  <span>Occupancy Rate</span>\n                                  <span className=\"font-medium\">{investment.occupancyRate}%</span>\n                                </div>\n                                <Progress value={investment.occupancyRate} className=\"h-2\" />\n                              </div>\n                            )}\n\n                            {/* Action Buttons */}\n                            <div className=\"grid grid-cols-3 gap-2\">\n                              <Button \n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => setShowDetails(showDetails === investment.id ? null : investment.id)}\n                                data-testid={`button-view-details-${investment.id}`}\n                              >\n                                <Eye className=\"w-4 h-4 mr-1\" />\n                                Details\n                              </Button>\n                              <Button \n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleWithdrawalRequest(investment)}\n                                className=\"text-orange-600 border-orange-200 hover:bg-orange-50\"\n                                data-testid={`button-withdraw-${investment.id}`}\n                              >\n                                <ArrowDownRight className=\"w-4 h-4 mr-1\" />\n                                Withdraw\n                              </Button>\n                              <Button \n                                variant=\"outline\"\n                                size=\"sm\"\n                                data-testid={`button-share-investment-${investment.id}`}\n                              >\n                                <Share2 className=\"w-4 h-4\" />\n                              </Button>\n                            </div>\n\n                            {/* Expandable Details */}\n                            <AnimatePresence>\n                              {showDetails === investment.id && (\n                                <motion.div\n                                  initial={{ opacity: 0, height: 0 }}\n                                  animate={{ opacity: 1, height: \"auto\" }}\n                                  exit={{ opacity: 0, height: 0 }}\n                                  className=\"border-t border-border/50 pt-4\"\n                                >\n                                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                                    <div>\n                                      <p className=\"text-muted-foreground\">Investment Date</p>\n                                      <p className=\"font-medium\">{new Date(investment.investmentDate).toLocaleDateString()}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"text-muted-foreground\">Expected Completion</p>\n                                      <p className=\"font-medium\">{investment.expectedCompletion}</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"text-muted-foreground\">Monthly Revenue</p>\n                                      <p className=\"font-medium\">{investment.monthlyRevenue.toLocaleString()} SAR</p>\n                                    </div>\n                                    <div>\n                                      <p className=\"text-muted-foreground\">Next Distribution</p>\n                                      <p className=\"font-medium\">{new Date(investment.nextDistribution).toLocaleDateString()}</p>\n                                    </div>\n                                  </div>\n                                </motion.div>\n                              )}\n                            </AnimatePresence>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </motion.div>\n                  ))}\n                </AnimatePresence>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"analytics\" className=\"space-y-6 mt-6\">\n              {/* Performance Chart */}\n              <Card className=\"shadow-xl border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                    <BarChart3 className=\"w-5 h-5 text-primary\" />\n                    Portfolio Performance\n                  </h3>\n                  \n                  <div className=\"h-48 bg-gradient-to-br from-muted/50 to-muted/30 rounded-xl flex items-center justify-center mb-4\">\n                    <div className=\"text-center\">\n                      <LineChart className=\"h-12 w-12 text-muted-foreground mx-auto mb-3\" />\n                      <p className=\"text-sm text-muted-foreground\">Interactive performance chart</p>\n                      <p className=\"text-xs text-muted-foreground\">Showing 26.6% growth over time</p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-4 bg-gradient-to-br from-green-50 to-emerald-50 rounded-xl border border-green-100\">\n                      <p className=\"text-lg font-bold text-green-800\">+{portfolioStats.returnPercentage}%</p>\n                      <p className=\"text-xs text-green-600\">Total Growth</p>\n                    </div>\n                    <div className=\"text-center p-4 bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl border border-blue-100\">\n                      <p className=\"text-lg font-bold text-blue-800\">{portfolioStats.averageROI}%</p>\n                      <p className=\"text-xs text-blue-600\">Average ROI</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Asset Allocation */}\n              <Card className=\"shadow-xl border-0 bg-gradient-to-r from-card to-card/70 backdrop-blur-sm\">\n                <CardContent className=\"p-6\">\n                  <h3 className=\"text-lg font-semibold mb-4 flex items-center gap-2\">\n                    <PieChart className=\"w-5 h-5 text-primary\" />\n                    Asset Allocation\n                  </h3>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-xl\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-4 h-4 bg-blue-500 rounded-full\" />\n                        <span className=\"font-medium\">Residential</span>\n                      </div>\n                      <span className=\"font-bold\">40%</span>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-xl\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-4 h-4 bg-green-500 rounded-full\" />\n                        <span className=\"font-medium\">Hospitality</span>\n                      </div>\n                      <span className=\"font-bold\">35%</span>\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-xl\">\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"w-4 h-4 bg-purple-500 rounded-full\" />\n                        <span className=\"font-medium\">Commercial</span>\n                      </div>\n                      <span className=\"font-bold\">25%</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </Tabs>\n        </motion.div>\n      </div>\n\n      {/* Withdrawal Request Dialog */}\n      <Dialog open={isWithdrawalDialogOpen} onOpenChange={setIsWithdrawalDialogOpen}>\n        <DialogContent className=\"mx-4 max-w-md bg-gradient-to-br from-card to-card/95 backdrop-blur-xl border-2 border-border/50\">\n          <DialogHeader>\n            <DialogTitle className=\"flex items-center gap-2 text-xl\">\n              <ArrowDownRight className=\"w-6 h-6 text-orange-600\" />\n              Withdrawal Request\n            </DialogTitle>\n            <DialogDescription>\n              Request to withdraw funds from{\" \"}\n              <span className=\"font-semibold text-foreground\">\n                {selectedInvestment?.propertyName}\n              </span>\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-6 pt-4\">\n            {/* Investment Summary */}\n            {selectedInvestment && (\n              <div className=\"p-4 bg-gradient-to-br from-muted/50 to-muted/30 rounded-xl border border-border/30\">\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-muted-foreground\">Your Investment</p>\n                    <p className=\"font-bold text-base\">{selectedInvestment.investedAmount.toLocaleString()} SAR</p>\n                  </div>\n                  <div>\n                    <p className=\"text-muted-foreground\">Current Value</p>\n                    <p className=\"font-bold text-base text-primary\">{selectedInvestment.currentValue.toLocaleString()} SAR</p>\n                  </div>\n                  <div>\n                    <p className=\"text-muted-foreground\">Total Return</p>\n                    <p className=\"font-bold text-base text-green-600\">+{selectedInvestment.returnAmount.toLocaleString()} SAR</p>\n                  </div>\n                  <div>\n                    <p className=\"text-muted-foreground\">Available</p>\n                    <p className=\"font-bold text-base text-blue-600\">{selectedInvestment.currentValue.toLocaleString()} SAR</p>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Withdrawal Amount */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"withdrawal-amount\" className=\"text-sm font-medium\">\n                Withdrawal Amount (SAR)\n              </label>\n              <div className=\"relative\">\n                <Input\n                  id=\"withdrawal-amount\"\n                  type=\"number\"\n                  placeholder=\"Enter amount\"\n                  value={withdrawalAmount}\n                  onChange={(e) => setWithdrawalAmount(e.target.value)}\n                  className=\"pl-10 bg-background/50 backdrop-blur-sm\"\n                  data-testid=\"input-withdrawal-amount\"\n                />\n                <Banknote className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n              </div>\n              {selectedInvestment && withdrawalAmount && parseFloat(withdrawalAmount) > 0 && (\n                <p className=\"text-xs text-muted-foreground\">\n                  Percentage: {((parseFloat(withdrawalAmount) / selectedInvestment.currentValue) * 100).toFixed(1)}% of your investment\n                </p>\n              )}\n            </div>\n\n            {/* Withdrawal Reason */}\n            <div className=\"space-y-2\">\n              <label htmlFor=\"withdrawal-reason\" className=\"text-sm font-medium\">\n                Reason for Withdrawal\n              </label>\n              <Select value={withdrawalReason} onValueChange={setWithdrawalReason}>\n                <SelectTrigger className=\"bg-background/50 backdrop-blur-sm\" data-testid=\"select-withdrawal-reason\">\n                  <SelectValue placeholder=\"Select a reason\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"Personal Emergency\">Personal Emergency</SelectItem>\n                  <SelectItem value=\"Liquidity Needs\">Immediate Liquidity Needs</SelectItem>\n                  <SelectItem value=\"Market Concerns\">Market Concerns</SelectItem>\n                  <SelectItem value=\"Portfolio Rebalancing\">Portfolio Rebalancing</SelectItem>\n                  <SelectItem value=\"Investment Diversification\">Investment Diversification</SelectItem>\n                  <SelectItem value=\"Financial Planning\">Financial Planning Adjustment</SelectItem>\n                  <SelectItem value=\"Other Investment\">Other Investment Opportunity</SelectItem>\n                  <SelectItem value=\"Partial Exit\">Partial Exit Strategy</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Important Note */}\n            <div className=\"p-4 bg-gradient-to-br from-orange-50 to-amber-50 rounded-xl border border-orange-200\">\n              <div className=\"flex items-start gap-3\">\n                <AlertTriangle className=\"w-5 h-5 text-orange-600 mt-0.5 flex-shrink-0\" />\n                <div className=\"space-y-1\">\n                  <p className=\"text-sm font-medium text-orange-800\">Important Information</p>\n                  <p className=\"text-xs text-orange-700\">\n                    • Withdrawal requests are subject to review and approval\n                    <br />\n                    • Processing time: 3-5 business days\n                    <br />\n                    • Early withdrawal may affect future investment opportunities\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <DialogFooter className=\"gap-3 pt-6\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setIsWithdrawalDialogOpen(false)}\n              data-testid=\"button-cancel-withdrawal\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={submitWithdrawalRequest}\n              className=\"bg-gradient-to-r from-orange-600 to-red-600 hover:from-orange-700 hover:to-red-700\"\n              data-testid=\"button-submit-withdrawal\"\n            >\n              Submit Request\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}","size_bytes":46135},"client/src/pages/mobile/profile.tsx":{"content":"import { useState, useRef } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { User, Phone, Mail, MapPin, FileText, Shield, Camera, Edit2, CheckCircle, AlertCircle, Clock, Upload } from \"lucide-react\"\n\nconst mockInvestor = {\n  id: \"inv_001\",\n  name: \"Ahmed Al-Rashid\",\n  email: \"ahmed.alrashid@email.com\",\n  phone: \"+966 55 123 4567\",\n  nationalId: \"123456789\",\n  dateOfBirth: \"1985-03-15\",\n  nationality: \"Saudi Arabian\",\n  address: \"Riyadh, Saudi Arabia\",\n  kycStatus: \"verified\",\n  memberSince: \"2024-01-15\",\n  totalInvested: 125000,\n  activeInvestments: 3,\n  documents: [\n    {\n      id: \"doc_001\",\n      type: \"National ID\",\n      status: \"verified\",\n      uploadDate: \"2024-01-15\",\n      expiryDate: \"2030-03-15\"\n    },\n    {\n      id: \"doc_002\", \n      type: \"Bank Statement\",\n      status: \"verified\",\n      uploadDate: \"2024-01-15\",\n      expiryDate: null\n    },\n    {\n      id: \"doc_003\",\n      type: \"Income Certificate\",\n      status: \"pending\",\n      uploadDate: \"2024-11-15\",\n      expiryDate: null\n    }\n  ]\n}\n\nexport default function MobileProfile() {\n  const { toast } = useToast()\n  const fileInputRef = useRef<HTMLInputElement>(null)\n  const [isEditing, setIsEditing] = useState(false)\n  const [profileData, setProfileData] = useState(mockInvestor)\n  \n  // Modal states\n  const [showPasswordDialog, setShowPasswordDialog] = useState(false)\n  const [showNotificationDialog, setShowNotificationDialog] = useState(false)\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\n  \n  // Form states\n  const [passwordForm, setPasswordForm] = useState({\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  })\n  \n  const [notificationSettings, setNotificationSettings] = useState({\n    emailNotifications: true,\n    smsNotifications: false,\n    pushNotifications: true,\n    marketingEmails: false\n  })\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'verified':\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />\n      case 'pending':\n        return <Clock className=\"h-4 w-4 text-yellow-600\" />\n      case 'rejected':\n        return <AlertCircle className=\"h-4 w-4 text-red-600\" />\n      default:\n        return <AlertCircle className=\"h-4 w-4 text-gray-400\" />\n    }\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'verified':\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n      case 'pending':\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n      case 'rejected':\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n      default:\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n    }\n  }\n\n  const handleSaveProfile = () => {\n    // In real app, this would save to backend\n    setIsEditing(false)\n    toast({\n      title: \"Profile Updated\",\n      description: \"Your profile information has been saved successfully.\",\n    })\n  }\n\n  const handlePasswordChange = () => {\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\n      toast({\n        variant: \"destructive\",\n        title: \"Password Mismatch\",\n        description: \"New password and confirmation password don't match.\",\n      })\n      return\n    }\n    \n    if (passwordForm.newPassword.length < 8) {\n      toast({\n        variant: \"destructive\",\n        title: \"Invalid Password\",\n        description: \"Password must be at least 8 characters long.\",\n      })\n      return\n    }\n\n    // In real app, this would call backend\n    setShowPasswordDialog(false)\n    setPasswordForm({\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    })\n    toast({\n      title: \"Password Changed\",\n      description: \"Your password has been updated successfully.\",\n    })\n  }\n\n  const handleNotificationSave = () => {\n    // In real app, this would save to backend\n    setShowNotificationDialog(false)\n    toast({\n      title: \"Settings Saved\",\n      description: \"Your notification preferences have been updated.\",\n    })\n  }\n\n  const handleFileUpload = () => {\n    fileInputRef.current?.click()\n  }\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0]\n    if (file) {\n      // In real app, this would upload to backend\n      toast({\n        title: \"Document Uploaded\",\n        description: `${file.name} has been uploaded successfully.`,\n      })\n    }\n  }\n\n  const handleDeleteAccount = () => {\n    // In real app, this would call backend\n    setShowDeleteDialog(false)\n    toast({\n      variant: \"destructive\",\n      title: \"Account Deletion Requested\",\n      description: \"Your account deletion request has been submitted.\",\n    })\n  }\n\n  return (\n    <div className=\"space-y-6 pb-20\">\n      {/* Header */}\n      <div className=\"space-y-4\">\n        <h1 className=\"text-2xl font-bold\">My Profile</h1>\n        <p className=\"text-muted-foreground\">Manage your account and KYC information</p>\n      </div>\n\n      {/* Profile Overview */}\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center gap-4\">\n            <div className=\"relative\">\n              <Avatar className=\"w-16 h-16\">\n                <AvatarImage src=\"\" alt={profileData.name} />\n                <AvatarFallback className=\"text-lg\">\n                  {profileData.name.split(' ').map(n => n[0]).join('')}\n                </AvatarFallback>\n              </Avatar>\n              <Button \n                size=\"icon\" \n                variant=\"outline\" \n                className=\"absolute -bottom-1 -right-1 w-6 h-6 rounded-full\"\n                data-testid=\"button-change-avatar\"\n              >\n                <Camera className=\"h-3 w-3\" />\n              </Button>\n            </div>\n            <div className=\"flex-1\">\n              <h2 className=\"text-xl font-semibold\">{profileData.name}</h2>\n              <p className=\"text-muted-foreground\">{profileData.email}</p>\n              <div className=\"flex items-center gap-2 mt-2\">\n                <Badge className={`text-xs ${getStatusColor(profileData.kycStatus)}`}>\n                  {getStatusIcon(profileData.kycStatus)}\n                  <span className=\"ml-1 capitalize\">{profileData.kycStatus}</span>\n                </Badge>\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  Member since {new Date(profileData.memberSince).toLocaleDateString()}\n                </Badge>\n              </div>\n            </div>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => setIsEditing(!isEditing)}\n              data-testid=\"button-edit-profile\"\n            >\n              <Edit2 className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Investment Summary */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle>Investment Summary</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-3 bg-muted rounded-lg\">\n              <p className=\"text-2xl font-bold\">SAR {profileData.totalInvested.toLocaleString()}</p>\n              <p className=\"text-sm text-muted-foreground\">Total Invested</p>\n            </div>\n            <div className=\"text-center p-3 bg-muted rounded-lg\">\n              <p className=\"text-2xl font-bold\">{profileData.activeInvestments}</p>\n              <p className=\"text-sm text-muted-foreground\">Active Investments</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Personal Information */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle>Personal Information</CardTitle>\n          {!isEditing && (\n            <CardDescription>Your personal details and contact information</CardDescription>\n          )}\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {isEditing ? (\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"name\">Full Name</Label>\n                <Input\n                  id=\"name\"\n                  value={profileData.name}\n                  onChange={(e) => setProfileData({...profileData, name: e.target.value})}\n                  data-testid=\"input-profile-name\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  value={profileData.email}\n                  onChange={(e) => setProfileData({...profileData, email: e.target.value})}\n                  data-testid=\"input-profile-email\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input\n                  id=\"phone\"\n                  value={profileData.phone}\n                  onChange={(e) => setProfileData({...profileData, phone: e.target.value})}\n                  data-testid=\"input-profile-phone\"\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"address\">Address</Label>\n                <Input\n                  id=\"address\"\n                  value={profileData.address}\n                  onChange={(e) => setProfileData({...profileData, address: e.target.value})}\n                  data-testid=\"input-profile-address\"\n                />\n              </div>\n              <div className=\"flex gap-2\">\n                <Button onClick={handleSaveProfile} data-testid=\"button-save-profile\">\n                  Save Changes\n                </Button>\n                <Button variant=\"outline\" onClick={() => setIsEditing(false)}>\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center gap-3\">\n                <User className=\"h-4 w-4 text-muted-foreground\" />\n                <div>\n                  <p className=\"font-medium\">{profileData.name}</p>\n                  <p className=\"text-sm text-muted-foreground\">Full Name</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                <div>\n                  <p className=\"font-medium\">{profileData.email}</p>\n                  <p className=\"text-sm text-muted-foreground\">Email Address</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                <div>\n                  <p className=\"font-medium\">{profileData.phone}</p>\n                  <p className=\"text-sm text-muted-foreground\">Phone Number</p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-3\">\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                <div>\n                  <p className=\"font-medium\">{profileData.address}</p>\n                  <p className=\"text-sm text-muted-foreground\">Address</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* KYC Documents */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5\" />\n            KYC Documents\n          </CardTitle>\n          <CardDescription>Your verification documents and status</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {profileData.documents.map((doc) => (\n            <div key={doc.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n              <div className=\"flex items-center gap-3\">\n                <FileText className=\"h-4 w-4 text-muted-foreground\" />\n                <div>\n                  <p className=\"font-medium text-sm\">{doc.type}</p>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Uploaded {new Date(doc.uploadDate).toLocaleDateString()}\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Badge \n                  variant=\"outline\" \n                  className={`text-xs ${getStatusColor(doc.status)}`}\n                >\n                  {getStatusIcon(doc.status)}\n                  <span className=\"ml-1 capitalize\">{doc.status}</span>\n                </Badge>\n              </div>\n            </div>\n          ))}\n          \n          <Separator />\n          \n          <Button \n            variant=\"outline\" \n            className=\"w-full\" \n            onClick={handleFileUpload}\n            data-testid=\"button-upload-document\"\n          >\n            <FileText className=\"h-4 w-4 mr-2\" />\n            Upload New Document\n          </Button>\n          \n          {/* Hidden file input */}\n          <input\n            ref={fileInputRef}\n            type=\"file\"\n            accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n            onChange={handleFileChange}\n            className=\"hidden\"\n            data-testid=\"input-file-upload\"\n          />\n        </CardContent>\n      </Card>\n\n      {/* Account Settings */}\n      <Card>\n        <CardHeader className=\"pb-3\">\n          <CardTitle>Account Settings</CardTitle>\n          <CardDescription>Manage your account preferences</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-3\">\n          <Button \n            variant=\"outline\" \n            className=\"w-full justify-start\" \n            onClick={() => setShowPasswordDialog(true)}\n            data-testid=\"button-change-password\"\n          >\n            <Shield className=\"h-4 w-4 mr-2\" />\n            Change Password\n          </Button>\n          <Button \n            variant=\"outline\" \n            className=\"w-full justify-start\" \n            onClick={() => setShowNotificationDialog(true)}\n            data-testid=\"button-notification-settings\"\n          >\n            <Mail className=\"h-4 w-4 mr-2\" />\n            Notification Settings\n          </Button>\n          <Button \n            variant=\"outline\" \n            className=\"w-full justify-start text-red-600 hover:text-red-700\" \n            onClick={() => setShowDeleteDialog(true)}\n            data-testid=\"button-delete-account\"\n          >\n            <AlertCircle className=\"h-4 w-4 mr-2\" />\n            Delete Account\n          </Button>\n        </CardContent>\n      </Card>\n\n      {/* Password Change Dialog */}\n      <Dialog open={showPasswordDialog} onOpenChange={setShowPasswordDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Change Password</DialogTitle>\n            <DialogDescription>\n              Enter your current password and choose a new one.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"current-password\">Current Password</Label>\n              <Input\n                id=\"current-password\"\n                type=\"password\"\n                value={passwordForm.currentPassword}\n                onChange={(e) => setPasswordForm({...passwordForm, currentPassword: e.target.value})}\n                data-testid=\"input-current-password\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"new-password\">New Password</Label>\n              <Input\n                id=\"new-password\"\n                type=\"password\"\n                value={passwordForm.newPassword}\n                onChange={(e) => setPasswordForm({...passwordForm, newPassword: e.target.value})}\n                data-testid=\"input-new-password\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"confirm-password\">Confirm New Password</Label>\n              <Input\n                id=\"confirm-password\"\n                type=\"password\"\n                value={passwordForm.confirmPassword}\n                onChange={(e) => setPasswordForm({...passwordForm, confirmPassword: e.target.value})}\n                data-testid=\"input-confirm-password\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setShowPasswordDialog(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handlePasswordChange} data-testid=\"button-save-password\">\n              Change Password\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Notification Settings Dialog */}\n      <Dialog open={showNotificationDialog} onOpenChange={setShowNotificationDialog}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Notification Settings</DialogTitle>\n            <DialogDescription>\n              Choose how you want to receive notifications.\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>Email Notifications</Label>\n                <p className=\"text-sm text-muted-foreground\">Receive important updates via email</p>\n              </div>\n              <Switch\n                checked={notificationSettings.emailNotifications}\n                onCheckedChange={(checked) => \n                  setNotificationSettings({...notificationSettings, emailNotifications: checked})\n                }\n                data-testid=\"switch-email-notifications\"\n              />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>SMS Notifications</Label>\n                <p className=\"text-sm text-muted-foreground\">Get alerts via text message</p>\n              </div>\n              <Switch\n                checked={notificationSettings.smsNotifications}\n                onCheckedChange={(checked) => \n                  setNotificationSettings({...notificationSettings, smsNotifications: checked})\n                }\n                data-testid=\"switch-sms-notifications\"\n              />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>Push Notifications</Label>\n                <p className=\"text-sm text-muted-foreground\">Browser push notifications</p>\n              </div>\n              <Switch\n                checked={notificationSettings.pushNotifications}\n                onCheckedChange={(checked) => \n                  setNotificationSettings({...notificationSettings, pushNotifications: checked})\n                }\n                data-testid=\"switch-push-notifications\"\n              />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-0.5\">\n                <Label>Marketing Emails</Label>\n                <p className=\"text-sm text-muted-foreground\">Receive promotional content</p>\n              </div>\n              <Switch\n                checked={notificationSettings.marketingEmails}\n                onCheckedChange={(checked) => \n                  setNotificationSettings({...notificationSettings, marketingEmails: checked})\n                }\n                data-testid=\"switch-marketing-emails\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setShowNotificationDialog(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleNotificationSave} data-testid=\"button-save-notifications\">\n              Save Settings\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Account Confirmation */}\n      <AlertDialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Account</AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to delete your account? This action cannot be undone. \n              All your investments and data will be permanently removed.\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogCancel data-testid=\"button-cancel-delete\">Cancel</AlertDialogCancel>\n            <AlertDialogAction \n              onClick={handleDeleteAccount}\n              className=\"bg-red-600 hover:bg-red-700\"\n              data-testid=\"button-confirm-delete\"\n            >\n              Delete Account\n            </AlertDialogAction>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </div>\n  )\n}","size_bytes":21892},"client/src/pages/mobile/properties.tsx":{"content":"import { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from \"@/components/ui/dialog\"\nimport { Label } from \"@/components/ui/label\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { Slider } from \"@/components/ui/slider\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport luxuryApartmentImg from '@assets/generated_images/luxury_apartment_building_exterior_e11af77f.png'\nimport luxuryVillaImg from '@assets/generated_images/luxury_villa_property_b02d7e37.png'\nimport commercialOfficeImg from '@assets/generated_images/commercial_office_building_f8c8d53a.png'\nimport retailComplexImg from '@assets/generated_images/retail_shopping_complex_10ee6fbf.png'\nimport { \n  Search, \n  MapPin, \n  Users, \n  TrendingUp, \n  Heart, \n  DollarSign, \n  Building,\n  Filter,\n  SlidersHorizontal,\n  Star,\n  Sparkles,\n  Shield,\n  Target,\n  Calendar,\n  BarChart3,\n  ChevronDown,\n  X,\n  Eye,\n  Share2,\n  Bookmark,\n  Crown,\n  Globe,\n  Zap,\n  ImageIcon,\n  Clock,\n  Home,\n  FileText,\n  Calculator,\n  PieChart,\n  TrendingDown,\n  Percent,\n  Layers,\n  ArrowRight,\n  MapPinIcon,\n  Info,\n  CheckCircle2,\n  AlertTriangle,\n  CircleDollarSign,\n  Award,\n  Activity\n} from \"lucide-react\"\n\ninterface Property {\n  id: string\n  title: string\n  titleAr: string\n  titleHi: string\n  location: string\n  locationAr: string\n  locationHi: string\n  price: number\n  roi: number\n  type: string\n  description: string\n  descriptionAr: string\n  descriptionHi: string\n  images: string[]\n  minInvestment: number\n  targetAmount: number\n  raisedAmount: number\n  investorCount: number\n  shariahCompliant: boolean\n  vision2030: boolean\n  featured: boolean\n  status: \"active\" | \"upcoming\" | \"completed\"\n  completionDate?: string\n  size: number\n  totalUnits: number\n  availableUnits: number\n  expectedReturns: string\n  riskLevel: \"low\" | \"medium\" | \"high\"\n  category: \"residential\" | \"commercial\" | \"mixed\" | \"hospitality\" | \"industrial\"\n  amenities: string[]\n  developmentStage: \"planning\" | \"construction\" | \"near_completion\" | \"ready\"\n  financialMetrics: {\n    irr: number // Internal Rate of Return\n    noi: number // Net Operating Income\n    capRate: number // Capitalization Rate\n    cashOnCash: number // Cash-on-Cash Return\n    totalCostOfProject: number\n    loanToValue: number // LTV ratio\n    debtServiceCoverage: number // DSCR\n    breakEvenOccupancy: number\n  }\n  investmentHighlights: string[]\n  risks: string[]\n  marketAnalysis: {\n    averageRent: number\n    marketGrowth: number\n    competitorAnalysis: string\n    demographic: string\n  }\n  legalStructure: {\n    ownership: string\n    managementFees: number\n    exitStrategy: string\n    taxation: string\n  }\n  timeline: {\n    phase: string\n    milestones: Array<{\n      name: string\n      date: string\n      status: \"completed\" | \"pending\" | \"in_progress\"\n    }>\n  }\n  developer: {\n    name: string\n    experience: string\n    reputation: number\n    previousProjects: number\n  }\n}\n\nconst saudiProperties: Property[] = [\n  {\n    id: \"1\",\n    title: \"NEOM The Line Residences\",\n    titleAr: \"مساكن ذا لاين نيوم\",\n    titleHi: \"नियोम द लाइन निवास\",\n    location: \"NEOM, Tabuk Province\",\n    locationAr: \"نيوم، منطقة تبوك\",\n    locationHi: \"नियोम, तबूक प्रांत\",\n    price: 8500000,\n    roi: 18.5,\n    type: \"Futuristic Smart City\",\n    description: \"Revolutionary linear city with mirror-clad walls stretching 170km through mountains and desert\",\n    descriptionAr: \"مدينة خطية ثورية بجدران مكسوة بالمرايا تمتد 170 كم عبر الجبال والصحراء\",\n    descriptionHi: \"पहाड़ों और रेगिस्तान के माध्यम से 170 किमी तक फैली दर्पण-क्लैड दीवारों के साथ क्रांतिकारी रैखिक शहर\",\n    images: [luxuryApartmentImg, luxuryVillaImg, commercialOfficeImg],\n    minInvestment: 100000,\n    targetAmount: 8500000,\n    raisedAmount: 5950000,\n    investorCount: 189,\n    shariahCompliant: true,\n    vision2030: true,\n    featured: true,\n    status: \"active\",\n    completionDate: \"2030\",\n    size: 34000,\n    totalUnits: 850,\n    availableUnits: 298,\n    expectedReturns: \"15-20% annually\",\n    riskLevel: \"medium\",\n    category: \"residential\",\n    amenities: [\"AI Integration\", \"Renewable Energy\", \"Climate Control\", \"Hyperloop\", \"Vertical Farming\"],\n    developmentStage: \"construction\",\n    financialMetrics: {\n      irr: 21.4,\n      noi: 1530000,\n      capRate: 6.8,\n      cashOnCash: 14.2,\n      totalCostOfProject: 8500000,\n      loanToValue: 65,\n      debtServiceCoverage: 1.85,\n      breakEvenOccupancy: 72\n    },\n    investmentHighlights: [\n      \"Part of Saudi Arabia's NEOM mega-project\",\n      \"Zero-emission linear city with cutting-edge technology\",\n      \"Government-backed with sovereign guarantee\",\n      \"Direct access to planned hyperloop network\",\n      \"AI-powered building management systems\"\n    ],\n    risks: [\n      \"Construction timeline dependent on technology development\",\n      \"Regulatory changes in new economic zone\",\n      \"Market acceptance of linear city concept\",\n      \"Weather conditions affecting construction\"\n    ],\n    marketAnalysis: {\n      averageRent: 18000,\n      marketGrowth: 15.8,\n      competitorAnalysis: \"No direct competitors in futuristic smart city segment\",\n      demographic: \"High-income tech professionals and international executives\"\n    },\n    legalStructure: {\n      ownership: \"Freehold with 99-year renewable lease\",\n      managementFees: 2.5,\n      exitStrategy: \"Secondary market trading after 5 years\",\n      taxation: \"10% capital gains tax exemption for first 10 years\"\n    },\n    timeline: {\n      phase: \"Phase 2 - Infrastructure Development\",\n      milestones: [\n        { name: \"Foundation & Utilities\", date: \"2024-12-31\", status: \"completed\" },\n        { name: \"Structural Framework\", date: \"2026-06-30\", status: \"in_progress\" },\n        { name: \"Interior Systems\", date: \"2028-12-31\", status: \"pending\" },\n        { name: \"Project Completion\", date: \"2030-12-31\", status: \"pending\" }\n      ]\n    },\n    developer: {\n      name: \"NEOM Company\",\n      experience: \"Backed by Saudi Public Investment Fund\",\n      reputation: 95,\n      previousProjects: 12\n    }\n  },\n  {\n    id: \"2\",\n    title: \"Red Sea Global Marina\",\n    titleAr: \"مارينا البحر الأحمر العالمية\",\n    titleHi: \"रेड सी ग्लोबल मरीना\",\n    location: \"Red Sea Project\",\n    locationAr: \"مشروع البحر الأحمر\",\n    locationHi: \"रेड सी प्रोजेक्ट\",\n    price: 12200000,\n    roi: 22.3,\n    type: \"Luxury Resort & Marina\",\n    description: \"Ultra-luxury regenerative tourism destination with world-class marina and pristine coral reefs\",\n    descriptionAr: \"وجهة سياحية متجددة فائقة الفخامة مع مارينا عالمية المستوى وشعاب مرجانية نقية\",\n    descriptionHi: \"विश्व स्तरीय मरीना और प्राचीन कोरल रीफ के साथ अल्ट्रा-लक्जरी पुनर्योजी पर्यटन गंतव्य\",\n    images: [luxuryApartmentImg, luxuryVillaImg, commercialOfficeImg],\n    minInvestment: 200000,\n    targetAmount: 12200000,\n    raisedAmount: 9150000,\n    investorCount: 156,\n    shariahCompliant: true,\n    vision2030: true,\n    featured: true,\n    status: \"active\",\n    completionDate: \"2030\",\n    size: 28000,\n    totalUnits: 420,\n    availableUnits: 125,\n    expectedReturns: \"20-25% annually\",\n    riskLevel: \"low\",\n    category: \"hospitality\",\n    amenities: [\"Private Beach\", \"Coral Restoration\", \"Solar Power\", \"Desalination\", \"Yacht Club\"],\n    developmentStage: \"construction\",\n    financialMetrics: {\n      irr: 25.8,\n      noi: 2740000,\n      capRate: 8.2,\n      cashOnCash: 18.6,\n      totalCostOfProject: 12200000,\n      loanToValue: 70,\n      debtServiceCoverage: 2.1,\n      breakEvenOccupancy: 68\n    },\n    investmentHighlights: [\n      \"Ultra-luxury tourism destination with pristine coral reefs\",\n      \"First regenerative tourism project in Middle East\",\n      \"Partnership with global luxury hotel brands\",\n      \"Exclusive beach access and marina facilities\",\n      \"Carbon-negative resort operations\"\n    ],\n    risks: [\n      \"Seasonal tourism fluctuations\",\n      \"Environmental regulations compliance\",\n      \"Competition from established luxury destinations\",\n      \"Currency exchange rate variations\"\n    ],\n    marketAnalysis: {\n      averageRent: 25000,\n      marketGrowth: 22.4,\n      competitorAnalysis: \"Premium positioning above Maldives and Seychelles\",\n      demographic: \"Ultra-high-net-worth individuals and luxury travelers\"\n    },\n    legalStructure: {\n      ownership: \"99-year leasehold with renewal option\",\n      managementFees: 3.0,\n      exitStrategy: \"REIT conversion planned in year 7\",\n      taxation: \"Tourism investment incentives apply\"\n    },\n    timeline: {\n      phase: \"Phase 3 - Resort Construction\",\n      milestones: [\n        { name: \"Environmental Assessment\", date: \"2024-03-31\", status: \"completed\" },\n        { name: \"Marina Development\", date: \"2025-09-30\", status: \"in_progress\" },\n        { name: \"Resort Buildings\", date: \"2027-12-31\", status: \"pending\" },\n        { name: \"Grand Opening\", date: \"2030-06-30\", status: \"pending\" }\n      ]\n    },\n    developer: {\n      name: \"Red Sea Global\",\n      experience: \"15+ years in luxury tourism development\",\n      reputation: 92,\n      previousProjects: 8\n    }\n  },\n  {\n    id: \"3\",\n    title: \"Qiddiya Entertainment City\",\n    titleAr: \"مدينة القدية الترفيهية\",\n    titleHi: \"किद्दिया मनोरंजन शहर\",\n    location: \"Riyadh, Central Region\",\n    locationAr: \"الرياض، المنطقة الوسطى\",\n    locationHi: \"रियाध, मध्य क्षेत्र\",\n    price: 6800000,\n    roi: 16.8,\n    type: \"Entertainment & Sports Hub\",\n    description: \"World's largest entertainment, sports, and arts destination spanning 334 square kilometers\",\n    descriptionAr: \"أكبر وجهة ترفيهية ورياضية وفنية في العالم تمتد على 334 كيلومتر مربع\",\n    descriptionHi: \"334 वर्ग किलोमीटर में फैला दुनिया का सबसे बड़ा मनोरंजन, खेल और कला गंतव्य\",\n    images: [luxuryApartmentImg, luxuryVillaImg, commercialOfficeImg],\n    minInvestment: 75000,\n    targetAmount: 6800000,\n    raisedAmount: 4760000,\n    investorCount: 203,\n    shariahCompliant: true,\n    vision2030: true,\n    featured: false,\n    status: \"active\",\n    completionDate: \"2030\",\n    size: 334000000,\n    totalUnits: 680,\n    availableUnits: 204,\n    expectedReturns: \"14-18% annually\",\n    riskLevel: \"medium\",\n    category: \"commercial\",\n    amenities: [\"Theme Parks\", \"Sports Venues\", \"Gaming Arena\", \"Cultural Center\", \"Racing Circuit\"],\n    developmentStage: \"construction\",\n    financialMetrics: {\n      irr: 19.2,\n      noi: 1156000,\n      capRate: 7.4,\n      cashOnCash: 12.8,\n      totalCostOfProject: 6800000,\n      loanToValue: 60,\n      debtServiceCoverage: 1.95,\n      breakEvenOccupancy: 75\n    },\n    investmentHighlights: [\n      \"World's largest entertainment destination\",\n      \"Government commitment of $8 billion investment\",\n      \"Partnership with Six Flags and other global brands\",\n      \"Year-round entertainment programming\",\n      \"Integration with Riyadh metro system\"\n    ],\n    risks: [\n      \"Dependence on tourism and entertainment spending\",\n      \"Competition from Dubai and other regional hubs\",\n      \"Economic cycles affecting discretionary spending\",\n      \"Operational complexity of mixed-use development\"\n    ],\n    marketAnalysis: {\n      averageRent: 15000,\n      marketGrowth: 18.5,\n      competitorAnalysis: \"First-mover advantage in Saudi entertainment market\",\n      demographic: \"Families, young professionals, and tourists from GCC region\"\n    },\n    legalStructure: {\n      ownership: \"Freehold with commercial license\",\n      managementFees: 2.8,\n      exitStrategy: \"IPO consideration after stabilization\",\n      taxation: \"Entertainment sector incentives available\"\n    },\n    timeline: {\n      phase: \"Phase 1 - Core Infrastructure\",\n      milestones: [\n        { name: \"Site Preparation\", date: \"2024-06-30\", status: \"completed\" },\n        { name: \"Theme Park Construction\", date: \"2026-12-31\", status: \"in_progress\" },\n        { name: \"Sports Facilities\", date: \"2028-06-30\", status: \"pending\" },\n        { name: \"Full Operations\", date: \"2030-12-31\", status: \"pending\" }\n      ]\n    },\n    developer: {\n      name: \"Qiddiya Investment Company\",\n      experience: \"Joint venture with international entertainment leaders\",\n      reputation: 88,\n      previousProjects: 6\n    }\n  },\n  {\n    id: \"4\",\n    title: \"KAEC Financial District\",\n    titleAr: \"الحي المالي مدينة الملك عبدالله الاقتصادية\",\n    titleHi: \"केएईसी वित्तीय जिला\",\n    location: \"King Abdullah Economic City\",\n    locationAr: \"مدينة الملك عبدالله الاقتصادية\",\n    locationHi: \"किंग अब्दुल्लाह इकनॉमिक सिटी\",\n    price: 4200000,\n    roi: 14.2,\n    type: \"Financial & Business Hub\",\n    description: \"Modern financial district with smart buildings and integrated business ecosystem\",\n    descriptionAr: \"حي مالي حديث مع مباني ذكية ونظام بيئي متكامل للأعمال\",\n    descriptionHi: \"स्मार्ट बिल्डिंगों और एकीकृत व्यापार पारिस्थितिकी तंत्र के साथ आधुनिक वित्तीय जिला\",\n    images: [luxuryApartmentImg, luxuryVillaImg, commercialOfficeImg],\n    minInvestment: 50000,\n    targetAmount: 4200000,\n    raisedAmount: 2940000,\n    investorCount: 98,\n    shariahCompliant: true,\n    vision2030: true,\n    featured: false,\n    status: \"upcoming\",\n    completionDate: \"2028\",\n    size: 42000,\n    totalUnits: 280,\n    availableUnits: 168,\n    expectedReturns: \"12-16% annually\",\n    riskLevel: \"low\",\n    category: \"commercial\",\n    amenities: [\"Smart Offices\", \"Conference Centers\", \"Banking Hub\", \"Retail Plaza\", \"Transport Hub\"],\n    developmentStage: \"planning\",\n    financialMetrics: {\n      irr: 16.8,\n      noi: 596000,\n      capRate: 6.2,\n      cashOnCash: 10.4,\n      totalCostOfProject: 4200000,\n      loanToValue: 75,\n      debtServiceCoverage: 1.75,\n      breakEvenOccupancy: 78\n    },\n    investmentHighlights: [\n      \"Strategic location in King Abdullah Economic City\",\n      \"Pre-leasing agreements with major banks\",\n      \"Government tenant anchor agreements\",\n      \"Direct access to King Abdulaziz Port\",\n      \"Tax incentives for KAEC investors\"\n    ],\n    risks: [\n      \"Economic city development timeline\",\n      \"Corporate relocation decisions\",\n      \"Competition from Riyadh financial district\",\n      \"Regulatory changes in economic zones\"\n    ],\n    marketAnalysis: {\n      averageRent: 12000,\n      marketGrowth: 12.3,\n      competitorAnalysis: \"Limited supply in specialized economic city\",\n      demographic: \"Financial services, logistics, and international trade companies\"\n    },\n    legalStructure: {\n      ownership: \"Freehold within economic zone\",\n      managementFees: 2.2,\n      exitStrategy: \"Corporate sale or REIT inclusion\",\n      taxation: \"KAEC special economic zone benefits\"\n    },\n    timeline: {\n      phase: \"Phase 0 - Planning & Approvals\",\n      milestones: [\n        { name: \"Master Planning\", date: \"2025-03-31\", status: \"in_progress\" },\n        { name: \"Construction Start\", date: \"2025-09-30\", status: \"pending\" },\n        { name: \"Core & Shell\", date: \"2027-06-30\", status: \"pending\" },\n        { name: \"Tenant Fit-out\", date: \"2028-12-31\", status: \"pending\" }\n      ]\n    },\n    developer: {\n      name: \"KAEC Development Company\",\n      experience: \"20+ years in economic city development\",\n      reputation: 90,\n      previousProjects: 15\n    }\n  },\n  {\n    id: \"5\",\n    title: \"Amaala Triple Bay Resort\",\n    titleAr: \"منتجع أمالا الخليج الثلاثي\",\n    titleHi: \"अमाला ट्रिपल बे रिज़ॉर्ट\",\n    location: \"Amaala, Tabuk Province\",\n    locationAr: \"أمالا، منطقة تبوك\",\n    locationHi: \"अमाला, तबूक प्रांत\",\n    price: 9500000,\n    roi: 19.7,\n    type: \"Ultra-Luxury Wellness Resort\",\n    description: \"Wellness-focused ultra-luxury destination with pristine beaches and world-class spas\",\n    descriptionAr: \"وجهة فائقة الفخامة تركز على الصحة مع شواطئ نقية ومنتجعات صحية عالمية المستوى\",\n    descriptionHi: \"प्राचीन समुद्र तटों और विश्व स्तरीय स्पा के साथ कल्याण-केंद्रित अल्ट्रा-लक्जरी गंतव्य\",\n    images: [luxuryApartmentImg, luxuryVillaImg, commercialOfficeImg],\n    minInvestment: 150000,\n    targetAmount: 9500000,\n    raisedAmount: 6650000,\n    investorCount: 134,\n    shariahCompliant: true,\n    vision2030: true,\n    featured: true,\n    status: \"active\",\n    completionDate: \"2030\",\n    size: 46500,\n    totalUnits: 380,\n    availableUnits: 133,\n    expectedReturns: \"17-22% annually\",\n    riskLevel: \"medium\",\n    category: \"hospitality\",\n    amenities: [\"Wellness Centers\", \"Private Villas\", \"Art Galleries\", \"Organic Farms\", \"Healing Gardens\"],\n    developmentStage: \"construction\",\n    financialMetrics: {\n      irr: 23.6,\n      noi: 1881000,\n      capRate: 7.8,\n      cashOnCash: 16.4,\n      totalCostOfProject: 9500000,\n      loanToValue: 68,\n      debtServiceCoverage: 2.0,\n      breakEvenOccupancy: 70\n    },\n    investmentHighlights: [\n      \"First wellness-focused mega-resort in Saudi Arabia\",\n      \"Partnership with leading wellness brands\",\n      \"Exclusive access to pristine coastline\",\n      \"Cultural arts and wellness programming\",\n      \"Sustainable architecture and operations\"\n    ],\n    risks: [\n      \"Wellness tourism market development\",\n      \"Seasonal demand variations\",\n      \"High operational complexity\",\n      \"Competition from established wellness destinations\"\n    ],\n    marketAnalysis: {\n      averageRent: 22000,\n      marketGrowth: 20.7,\n      competitorAnalysis: \"Unique positioning in growing wellness tourism segment\",\n      demographic: \"Wellness enthusiasts, art collectors, and luxury travelers\"\n    },\n    legalStructure: {\n      ownership: \"99-year leasehold with freehold conversion option\",\n      managementFees: 3.2,\n      exitStrategy: \"Hospitality REIT or strategic acquisition\",\n      taxation: \"Tourism development incentives apply\"\n    },\n    timeline: {\n      phase: \"Phase 2 - Resort Development\",\n      milestones: [\n        { name: \"Coastal Infrastructure\", date: \"2024-09-30\", status: \"completed\" },\n        { name: \"Wellness Facilities\", date: \"2026-12-31\", status: \"in_progress\" },\n        { name: \"Villa Construction\", date: \"2028-09-30\", status: \"pending\" },\n        { name: \"Resort Opening\", date: \"2030-06-30\", status: \"pending\" }\n      ]\n    },\n    developer: {\n      name: \"Amaala Development\",\n      experience: \"Backed by PIF with international wellness expertise\",\n      reputation: 91,\n      previousProjects: 4\n    }\n  }\n]\n\nconst filterOptions = {\n  type: [\"All Types\", \"Residential\", \"Commercial\", \"Mixed\", \"Hospitality\", \"Industrial\"],\n  riskLevel: [\"All Risk Levels\", \"Low Risk\", \"Medium Risk\", \"High Risk\"],\n  price: [0, 15000000],\n  roi: [0, 25],\n  category: [\"All Categories\", \"Vision 2030\", \"Shariah Compliant\", \"Featured\", \"New Launch\"]\n}\n\nexport default function MobileProperties() {\n  const { t, language } = useTranslation()\n  const { toast } = useToast()\n  \n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [selectedProperty, setSelectedProperty] = useState<Property | null>(null)\n  const [isInvestDialogOpen, setIsInvestDialogOpen] = useState(false)\n  const [isPropertyDetailsOpen, setIsPropertyDetailsOpen] = useState(false)\n  const [isFilterOpen, setIsFilterOpen] = useState(false)\n  const [investmentAmount, setInvestmentAmount] = useState(\"\")\n  const [favorites, setFavorites] = useState<string[]>([])\n  const [viewMode, setViewMode] = useState<\"grid\" | \"list\">(\"grid\")\n  const [sortBy, setSortBy] = useState<\"newest\" | \"price_low\" | \"price_high\" | \"roi_high\" | \"popularity\">(\"newest\")\n  const [currentImageIndex, setCurrentImageIndex] = useState(0)\n  \n  // Filter states\n  const [filters, setFilters] = useState({\n    type: \"All Types\",\n    riskLevel: \"All Risk Levels\",\n    priceRange: [0, 15000000] as [number, number],\n    roiRange: [0, 25] as [number, number],\n    category: \"All Categories\",\n    shariahOnly: false,\n    vision2030Only: false,\n    featuredOnly: false\n  })\n\n  const handleFavoriteToggle = (propertyId: string) => {\n    setFavorites(prev => \n      prev.includes(propertyId) \n        ? prev.filter(id => id !== propertyId)\n        : [...prev, propertyId]\n    )\n  }\n\n  const handleInvestClick = (property: Property) => {\n    setSelectedProperty(property)\n    setIsInvestDialogOpen(true)\n  }\n\n  const handleViewDetails = (property: Property) => {\n    setSelectedProperty(property)\n    setCurrentImageIndex(0)\n    setIsPropertyDetailsOpen(true)\n  }\n\n  const handleInvestmentSubmit = () => {\n    const amount = parseFloat(investmentAmount)\n    if (!amount || amount < selectedProperty!.minInvestment) {\n      toast({\n        title: \"Invalid Amount\",\n        description: `Minimum investment is SAR ${selectedProperty!.minInvestment.toLocaleString()}`,\n        variant: \"destructive\"\n      })\n      return\n    }\n\n    toast({\n      title: \"Investment Submitted\",\n      description: `Your investment of SAR ${amount.toLocaleString()} has been submitted for review.`,\n    })\n\n    setIsInvestDialogOpen(false)\n    setInvestmentAmount(\"\")\n    setSelectedProperty(null)\n  }\n\n  const applyFilters = (properties: Property[]) => {\n    return properties.filter(property => {\n      // Search term filter\n      const searchMatch = !searchTerm || \n        property.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        property.titleAr.includes(searchTerm) ||\n        property.titleHi.includes(searchTerm) ||\n        property.location.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        property.locationAr.includes(searchTerm) ||\n        property.locationHi.includes(searchTerm) ||\n        property.type.toLowerCase().includes(searchTerm.toLowerCase())\n\n      // Type filter\n      const typeMatch = filters.type === \"All Types\" || \n        property.category.toLowerCase() === filters.type.toLowerCase()\n\n      // Risk level filter\n      const riskMatch = filters.riskLevel === \"All Risk Levels\" ||\n        property.riskLevel.toLowerCase() === filters.riskLevel.toLowerCase().replace(\" risk\", \"\")\n\n      // Price range filter\n      const priceMatch = property.price >= filters.priceRange[0] && \n        property.price <= filters.priceRange[1]\n\n      // ROI range filter\n      const roiMatch = property.roi >= filters.roiRange[0] && \n        property.roi <= filters.roiRange[1]\n\n      // Category filters\n      const categoryMatch = filters.category === \"All Categories\" ||\n        (filters.category === \"Vision 2030\" && property.vision2030) ||\n        (filters.category === \"Shariah Compliant\" && property.shariahCompliant) ||\n        (filters.category === \"Featured\" && property.featured) ||\n        (filters.category === \"New Launch\" && property.status === \"upcoming\")\n\n      // Additional filters\n      const shariahMatch = !filters.shariahOnly || property.shariahCompliant\n      const visionMatch = !filters.vision2030Only || property.vision2030\n      const featuredMatch = !filters.featuredOnly || property.featured\n\n      return searchMatch && typeMatch && riskMatch && priceMatch && \n             roiMatch && categoryMatch && shariahMatch && visionMatch && featuredMatch\n    })\n  }\n\n  const sortProperties = (properties: Property[]) => {\n    const sorted = [...properties]\n    switch (sortBy) {\n      case \"price_low\":\n        return sorted.sort((a, b) => a.price - b.price)\n      case \"price_high\":\n        return sorted.sort((a, b) => b.price - a.price)\n      case \"roi_high\":\n        return sorted.sort((a, b) => b.roi - a.roi)\n      case \"popularity\":\n        return sorted.sort((a, b) => b.investorCount - a.investorCount)\n      case \"newest\":\n      default:\n        return sorted.sort((a, b) => (b.featured ? 1 : 0) - (a.featured ? 1 : 0))\n    }\n  }\n\n  const filteredAndSortedProperties = sortProperties(applyFilters(saudiProperties))\n\n  const clearFilters = () => {\n    setFilters({\n      type: \"All Types\",\n      riskLevel: \"All Risk Levels\",\n      priceRange: [0, 15000000],\n      roiRange: [0, 25],\n      category: \"All Categories\",\n      shariahOnly: false,\n      vision2030Only: false,\n      featuredOnly: false\n    })\n    setSearchTerm(\"\")\n  }\n\n  const getPropertyTitle = (property: Property) => {\n    if (language === 'ar') return property.titleAr\n    if (language === 'hi') return property.titleHi\n    return property.title\n  }\n\n  const getPropertyLocation = (property: Property) => {\n    if (language === 'ar') return property.locationAr\n    if (language === 'hi') return property.locationHi\n    return property.location\n  }\n\n  const getPropertyDescription = (property: Property) => {\n    if (language === 'ar') return property.descriptionAr\n    if (language === 'hi') return property.descriptionHi\n    return property.description\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background/95 to-primary/5 relative overflow-hidden\">\n      {/* Background Effects */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute top-20 left-8 w-64 h-64 bg-gradient-to-br from-primary/10 to-transparent rounded-full blur-3xl animate-pulse opacity-60\" />\n        <div className=\"absolute bottom-40 right-12 w-80 h-80 bg-gradient-to-tl from-secondary/10 to-transparent rounded-full blur-3xl animate-pulse opacity-40\" />\n      </div>\n\n      <div className=\"relative z-10 p-6 pb-28 space-y-8\">\n        {/* Enhanced Header */}\n        <motion.div \n          className=\"space-y-6\"\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <div className=\"text-center space-y-2\">\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-foreground to-primary bg-clip-text text-transparent\">\n              {t(\"properties\")}\n            </h1>\n            <p className=\"text-muted-foreground text-lg\">\n              Discover Vision 2030 Investment Opportunities\n            </p>\n          </div>\n\n          {/* Search Bar */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n            <Input\n              placeholder=\"Search NEOM, Red Sea, Qiddiya...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-12 pr-16 h-14 text-lg bg-card/50 backdrop-blur-sm border-2 border-border/50 focus:border-primary/50 shadow-lg\"\n              data-testid=\"input-property-search\"\n            />\n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              onClick={() => setIsFilterOpen(true)}\n              className=\"absolute right-2 top-1/2 transform -translate-y-1/2 h-10 w-10 bg-primary/10 hover:bg-primary/20\"\n              data-testid=\"button-open-filters\"\n            >\n              <SlidersHorizontal className=\"h-5 w-5 text-primary\" />\n            </Button>\n          </div>\n\n          {/* Quick Filter Pills */}\n          <div className=\"flex gap-3 overflow-x-auto pb-2\">\n            {[\"Vision 2030\", \"Shariah Compliant\", \"Featured\", \"High ROI\"].map((filter) => (\n              <Button\n                key={filter}\n                size=\"sm\"\n                variant={filters.category === filter ? \"default\" : \"outline\"}\n                onClick={() => setFilters(prev => ({ \n                  ...prev, \n                  category: prev.category === filter ? \"All Categories\" : filter \n                }))}\n                className=\"min-w-fit whitespace-nowrap bg-card/50 backdrop-blur-sm\"\n                data-testid={`button-quick-filter-${filter.toLowerCase().replace(\" \", \"-\")}`}\n              >\n                {filter === \"Vision 2030\" && <Target className=\"w-3 h-3 mr-1\" />}\n                {filter === \"Shariah Compliant\" && <Shield className=\"w-3 h-3 mr-1\" />}\n                {filter === \"Featured\" && <Star className=\"w-3 h-3 mr-1\" />}\n                {filter === \"High ROI\" && <TrendingUp className=\"w-3 h-3 mr-1\" />}\n                {filter}\n              </Button>\n            ))}\n          </div>\n\n          {/* Results Summary */}\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-sm text-muted-foreground\">\n              {filteredAndSortedProperties.length} properties found\n            </p>\n            <Select value={sortBy} onValueChange={(value: any) => setSortBy(value)}>\n              <SelectTrigger className=\"w-40 bg-card/50 backdrop-blur-sm\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"newest\">Newest</SelectItem>\n                <SelectItem value=\"price_low\">Price: Low to High</SelectItem>\n                <SelectItem value=\"price_high\">Price: High to Low</SelectItem>\n                <SelectItem value=\"roi_high\">Highest ROI</SelectItem>\n                <SelectItem value=\"popularity\">Most Popular</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </motion.div>\n\n        {/* Properties Grid */}\n        <motion.div\n          className=\"space-y-6\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <AnimatePresence>\n            {filteredAndSortedProperties.map((property, index) => (\n              <motion.div\n                key={property.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n              >\n                <Card className=\"overflow-hidden shadow-2xl border-0 bg-gradient-to-br from-card via-card/95 to-card/80 backdrop-blur-sm hover:shadow-3xl transition-all duration-500 group\">\n                  {/* Property Image Gallery */}\n                  <div className=\"relative h-64 overflow-hidden\">\n                    <img \n                      src={property.images[0]} \n                      alt={getPropertyTitle(property)}\n                      className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-transparent to-transparent\" />\n                    \n                    {/* Image Count Badge */}\n                    {property.images.length > 1 && (\n                      <div className=\"absolute bottom-4 right-4 bg-black/70 text-white px-3 py-1 rounded-full text-xs flex items-center gap-1 backdrop-blur-xl border border-white/20\">\n                        <ImageIcon className=\"w-3 h-3\" />\n                        <span>{property.images.length} photos</span>\n                      </div>\n                    )}\n                    \n                    {/* Top Badges */}\n                    <div className=\"absolute top-4 left-4 flex gap-2 flex-wrap\">\n                      {property.featured && (\n                        <Badge className=\"bg-gradient-to-r from-yellow-500 to-orange-500 text-white border-0 shadow-lg\">\n                          <Crown className=\"w-3 h-3 mr-1\" />\n                          Featured\n                        </Badge>\n                      )}\n                      {property.vision2030 && (\n                        <Badge className=\"bg-gradient-to-r from-primary to-primary/80 text-white border-0 shadow-lg\">\n                          <Target className=\"w-3 h-3 mr-1\" />\n                          Vision 2030\n                        </Badge>\n                      )}\n                      {property.shariahCompliant && (\n                        <Badge className=\"bg-gradient-to-r from-green-500 to-emerald-500 text-white border-0 shadow-lg\">\n                          <Shield className=\"w-3 h-3 mr-1\" />\n                          Halal\n                        </Badge>\n                      )}\n                    </div>\n\n                    {/* Top Right Actions */}\n                    <div className=\"absolute top-4 right-4 flex gap-2\">\n                      <Button\n                        size=\"icon\"\n                        variant=\"ghost\"\n                        onClick={() => handleFavoriteToggle(property.id)}\n                        className={`w-10 h-10 rounded-full backdrop-blur-xl border border-white/20 transition-all duration-300 ${\n                          favorites.includes(property.id)\n                            ? 'bg-red-500/90 hover:bg-red-600/90 text-white'\n                            : 'bg-black/50 hover:bg-black/70 text-white'\n                        }`}\n                        data-testid={`button-favorite-${property.id}`}\n                      >\n                        <Heart className={`w-4 h-4 ${favorites.includes(property.id) ? 'fill-current' : ''}`} />\n                      </Button>\n                      <Button\n                        size=\"icon\"\n                        variant=\"ghost\"\n                        className=\"w-10 h-10 rounded-full bg-black/50 hover:bg-black/70 text-white backdrop-blur-xl border border-white/20\"\n                        data-testid={`button-share-${property.id}`}\n                      >\n                        <Share2 className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n\n                    {/* Bottom Property Info Overlay */}\n                    <div className=\"absolute bottom-4 left-4 right-4\">\n                      <div className=\"bg-black/70 backdrop-blur-xl rounded-2xl p-4 border border-white/10\">\n                        <div className=\"flex items-center justify-between text-white mb-2\">\n                          <div className=\"flex items-center gap-2\">\n                            <MapPin className=\"w-4 h-4\" />\n                            <span className=\"text-sm font-medium\">{getPropertyLocation(property)}</span>\n                          </div>\n                          <div className=\"flex items-center gap-2 bg-emerald-500/20 px-3 py-1 rounded-full\">\n                            <TrendingUp className=\"w-3 h-3\" />\n                            <span className=\"text-sm font-bold\">{property.roi}% ROI</span>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center justify-between text-white/80 text-xs\">\n                          <span>{property.category.charAt(0).toUpperCase() + property.category.slice(1)}</span>\n                          <div className=\"flex items-center gap-1\">\n                            <Users className=\"w-3 h-3\" />\n                            <span>{property.investorCount} investors</span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Progress Indicator */}\n                    <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-white/20\">\n                      <div \n                        className=\"h-full bg-gradient-to-r from-primary to-primary/80\"\n                        style={{ width: `${(property.raisedAmount / property.targetAmount) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n\n                  {/* Property Details */}\n                  <CardContent className=\"p-6 space-y-6\">\n                    {/* Title and Price */}\n                    <div className=\"space-y-3\">\n                      <h3 className=\"text-xl font-bold leading-tight group-hover:text-primary transition-colors duration-300\">\n                        {getPropertyTitle(property)}\n                      </h3>\n                      <p className=\"text-sm text-muted-foreground line-clamp-2 leading-relaxed\">\n                        {getPropertyDescription(property)}\n                      </p>\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-2xl font-bold text-primary\">\n                            {property.price.toLocaleString()} SAR\n                          </p>\n                          <p className=\"text-xs text-muted-foreground\">Property Value</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"text-lg font-semibold text-foreground\">\n                            {property.minInvestment.toLocaleString()} SAR\n                          </p>\n                          <p className=\"text-xs text-muted-foreground\">Min. Investment</p>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Key Metrics */}\n                    <div className=\"grid grid-cols-3 gap-4\">\n                      <div className=\"text-center p-3 bg-gradient-to-br from-blue-50 to-cyan-50 rounded-xl border border-blue-100\">\n                        <BarChart3 className=\"w-5 h-5 text-blue-600 mx-auto mb-1\" />\n                        <p className=\"text-xs text-blue-700 font-medium\">Expected Returns</p>\n                        <p className=\"text-sm font-bold text-blue-800\">{property.expectedReturns}</p>\n                      </div>\n                      <div className=\"text-center p-3 bg-gradient-to-br from-emerald-50 to-green-50 rounded-xl border border-emerald-100\">\n                        <Shield className=\"w-5 h-5 text-emerald-600 mx-auto mb-1\" />\n                        <p className=\"text-xs text-emerald-700 font-medium\">Risk Level</p>\n                        <p className=\"text-sm font-bold text-emerald-800 capitalize\">{property.riskLevel}</p>\n                      </div>\n                      <div className=\"text-center p-3 bg-gradient-to-br from-purple-50 to-violet-50 rounded-xl border border-purple-100\">\n                        <Calendar className=\"w-5 h-5 text-purple-600 mx-auto mb-1\" />\n                        <p className=\"text-xs text-purple-700 font-medium\">Completion</p>\n                        <p className=\"text-sm font-bold text-purple-800\">{property.completionDate}</p>\n                      </div>\n                    </div>\n\n                    {/* Funding Progress */}\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between items-center\">\n                        <span className=\"text-sm font-medium\">Funding Progress</span>\n                        <span className=\"text-sm font-bold text-primary\">\n                          {Math.round((property.raisedAmount / property.targetAmount) * 100)}%\n                        </span>\n                      </div>\n                      <div className=\"w-full bg-muted rounded-full h-3 overflow-hidden\">\n                        <motion.div \n                          className=\"bg-gradient-to-r from-primary to-primary/80 h-full rounded-full\"\n                          initial={{ width: 0 }}\n                          animate={{ width: `${(property.raisedAmount / property.targetAmount) * 100}%` }}\n                          transition={{ duration: 1, delay: index * 0.2 }}\n                        />\n                      </div>\n                      <div className=\"flex justify-between text-xs text-muted-foreground\">\n                        <span>{property.raisedAmount.toLocaleString()} SAR raised</span>\n                        <span>{property.targetAmount.toLocaleString()} SAR target</span>\n                      </div>\n                    </div>\n\n                    {/* Amenities */}\n                    <div className=\"space-y-2\">\n                      <p className=\"text-sm font-medium\">Key Features</p>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {property.amenities.slice(0, 3).map((amenity) => (\n                          <Badge \n                            key={amenity}\n                            variant=\"secondary\" \n                            className=\"text-xs bg-muted/50 hover:bg-muted transition-colors\"\n                          >\n                            {amenity}\n                          </Badge>\n                        ))}\n                        {property.amenities.length > 3 && (\n                          <Badge variant=\"secondary\" className=\"text-xs bg-muted/50\">\n                            +{property.amenities.length - 3} more\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex gap-3\">\n                      <Button \n                        className=\"flex-1 h-12 bg-gradient-to-r from-primary to-primary/90 hover:from-primary/90 hover:to-primary shadow-lg\" \n                        onClick={() => handleInvestClick(property)}\n                        data-testid={`button-invest-${property.id}`}\n                      >\n                        <DollarSign className=\"h-4 w-4 mr-2\" />\n                        Invest Now\n                      </Button>\n                      <Button \n                        variant=\"outline\" \n                        size=\"icon\"\n                        className=\"h-12 w-12 border-2 hover:bg-primary/10\"\n                        onClick={() => handleViewDetails(property)}\n                        data-testid={`button-view-details-${property.id}`}\n                      >\n                        <Eye className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n        </motion.div>\n\n        {/* No Results */}\n        {filteredAndSortedProperties.length === 0 && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            className=\"text-center py-16\"\n          >\n            <Card className=\"p-8 max-w-md mx-auto bg-card/50 backdrop-blur-sm\">\n              <CardContent className=\"space-y-4\">\n                <Building className=\"w-16 h-16 text-muted-foreground mx-auto\" />\n                <h3 className=\"text-xl font-semibold\">No Properties Found</h3>\n                <p className=\"text-muted-foreground\">\n                  No properties match your current search and filter criteria.\n                </p>\n                <Button \n                  onClick={clearFilters}\n                  className=\"w-full\"\n                  data-testid=\"button-clear-filters\"\n                >\n                  Clear All Filters\n                </Button>\n              </CardContent>\n            </Card>\n          </motion.div>\n        )}\n\n        {/* Investment Dialog */}\n        <Dialog open={isInvestDialogOpen} onOpenChange={setIsInvestDialogOpen}>\n          <DialogContent className=\"sm:max-w-md bg-card/95 backdrop-blur-xl border-border/50\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl\">\n                Invest in {selectedProperty ? getPropertyTitle(selectedProperty) : ''}\n              </DialogTitle>\n              <DialogDescription className=\"text-base\">\n                Enter your investment amount to proceed with this Vision 2030 opportunity.\n              </DialogDescription>\n            </DialogHeader>\n            \n            <div className=\"space-y-6\">\n              <div className=\"space-y-3\">\n                <Label htmlFor=\"investment-amount\" className=\"text-sm font-medium\">\n                  Investment Amount (SAR)\n                </Label>\n                <Input\n                  id=\"investment-amount\"\n                  type=\"number\"\n                  placeholder={`Min. ${selectedProperty?.minInvestment?.toLocaleString()}`}\n                  value={investmentAmount}\n                  onChange={(e) => setInvestmentAmount(e.target.value)}\n                  className=\"h-12 text-lg bg-background/50\"\n                  data-testid=\"input-investment-amount\"\n                />\n                <p className=\"text-xs text-muted-foreground\">\n                  Minimum investment: SAR {selectedProperty?.minInvestment?.toLocaleString()}\n                </p>\n              </div>\n\n              <Card className=\"bg-gradient-to-br from-primary/5 to-secondary/5 border-primary/20\">\n                <CardContent className=\"p-4 space-y-3\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Expected ROI</span>\n                    <span className=\"font-semibold text-emerald-600\">{selectedProperty?.roi}% annually</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Investment Term</span>\n                    <span className=\"font-semibold\">3-5 years</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Property Type</span>\n                    <span className=\"font-semibold capitalize\">{selectedProperty?.category}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Risk Level</span>\n                    <span className=\"font-semibold capitalize\">{selectedProperty?.riskLevel}</span>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            \n            <DialogFooter className=\"gap-2\">\n              <Button \n                variant=\"outline\" \n                onClick={() => setIsInvestDialogOpen(false)}\n                className=\"flex-1\"\n              >\n                Cancel\n              </Button>\n              <Button \n                onClick={handleInvestmentSubmit}\n                className=\"flex-1 bg-gradient-to-r from-primary to-primary/90\"\n                data-testid=\"button-confirm-investment\"\n              >\n                Submit Investment\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Property Details Dialog */}\n        <Dialog open={isPropertyDetailsOpen} onOpenChange={setIsPropertyDetailsOpen}>\n          <DialogContent className=\"sm:max-w-lg bg-card/95 backdrop-blur-xl border-border/50 max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl flex items-center gap-2\">\n                <Home className=\"w-5 h-5\" />\n                {selectedProperty && getPropertyTitle(selectedProperty)}\n              </DialogTitle>\n              <DialogDescription>\n                Comprehensive Investment Analysis\n              </DialogDescription>\n            </DialogHeader>\n\n            {selectedProperty && (\n              <Tabs defaultValue=\"overview\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-4\">\n                  <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n                  <TabsTrigger value=\"financials\">Financials</TabsTrigger>\n                  <TabsTrigger value=\"analysis\">Analysis</TabsTrigger>\n                  <TabsTrigger value=\"timeline\">Timeline</TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"overview\" className=\"space-y-4 mt-4\">\n                  {/* Image Gallery */}\n                  <div className=\"space-y-3\">\n                    <div className=\"relative h-48 rounded-lg overflow-hidden\">\n                      <img \n                        src={selectedProperty.images[currentImageIndex]} \n                        alt={getPropertyTitle(selectedProperty)}\n                        className=\"w-full h-full object-cover\"\n                      />\n                      {selectedProperty.images.length > 1 && (\n                        <>\n                          <Button\n                            size=\"icon\"\n                            variant=\"ghost\"\n                            className=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-black/50 text-white hover:bg-black/70\"\n                            onClick={() => setCurrentImageIndex(prev => \n                              prev === 0 ? selectedProperty.images.length - 1 : prev - 1\n                            )}\n                          >\n                            <ChevronDown className=\"w-4 h-4 rotate-90\" />\n                          </Button>\n                          <Button\n                            size=\"icon\"\n                            variant=\"ghost\"\n                            className=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-black/50 text-white hover:bg-black/70\"\n                            onClick={() => setCurrentImageIndex(prev => \n                              prev === selectedProperty.images.length - 1 ? 0 : prev + 1\n                            )}\n                          >\n                            <ChevronDown className=\"w-4 h-4 -rotate-90\" />\n                          </Button>\n                          <div className=\"absolute bottom-2 left-1/2 transform -translate-x-1/2 flex gap-1\">\n                            {selectedProperty.images.map((_, index) => (\n                              <div\n                                key={index}\n                                className={`w-2 h-2 rounded-full ${\n                                  index === currentImageIndex ? 'bg-white' : 'bg-white/50'\n                                }`}\n                              />\n                            ))}\n                          </div>\n                        </>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Basic Information */}\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"space-y-2\">\n                        <p className=\"text-sm text-muted-foreground\">Location</p>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-4 h-4 text-primary\" />\n                          <span className=\"font-medium\">{getPropertyLocation(selectedProperty)}</span>\n                        </div>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <p className=\"text-sm text-muted-foreground\">Property Type</p>\n                        <span className=\"font-medium capitalize\">{selectedProperty.category}</span>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <p className=\"text-sm text-muted-foreground\">Description</p>\n                      <p className=\"text-sm leading-relaxed\">{getPropertyDescription(selectedProperty)}</p>\n                    </div>\n\n                    {/* Investment Highlights */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-semibold flex items-center gap-2\">\n                        <Star className=\"w-4 h-4 text-yellow-500\" />\n                        Investment Highlights\n                      </h4>\n                      <div className=\"space-y-2\">\n                        {selectedProperty.investmentHighlights.map((highlight, index) => (\n                          <div key={index} className=\"flex items-start gap-2\">\n                            <CheckCircle2 className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-sm\">{highlight}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Key Amenities */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-semibold\">Key Features & Amenities</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {selectedProperty.amenities.map((amenity) => (\n                          <Badge key={amenity} variant=\"secondary\" className=\"text-xs\">\n                            {amenity}\n                          </Badge>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"financials\" className=\"space-y-4 mt-4\">\n                  {/* Financial Overview */}\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <Card className=\"p-4\">\n                      <div className=\"text-center\">\n                        <CircleDollarSign className=\"w-6 h-6 text-primary mx-auto mb-2\" />\n                        <p className=\"text-2xl font-bold text-primary\">{selectedProperty.roi}%</p>\n                        <p className=\"text-xs text-muted-foreground\">Expected ROI</p>\n                      </div>\n                    </Card>\n                    <Card className=\"p-4\">\n                      <div className=\"text-center\">\n                        <TrendingUp className=\"w-6 h-6 text-green-500 mx-auto mb-2\" />\n                        <p className=\"text-2xl font-bold text-green-600\">{selectedProperty.financialMetrics.irr}%</p>\n                        <p className=\"text-xs text-muted-foreground\">IRR</p>\n                      </div>\n                    </Card>\n                  </div>\n\n                  {/* Detailed Financial Metrics */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <Calculator className=\"w-4 h-4\" />\n                      Financial Metrics\n                    </h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Net Operating Income (NOI)</span>\n                        <span className=\"font-medium\">{selectedProperty.financialMetrics.noi.toLocaleString()} SAR</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Cap Rate</span>\n                        <span className=\"font-medium\">{selectedProperty.financialMetrics.capRate}%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Cash-on-Cash Return</span>\n                        <span className=\"font-medium\">{selectedProperty.financialMetrics.cashOnCash}%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Loan-to-Value (LTV)</span>\n                        <span className=\"font-medium\">{selectedProperty.financialMetrics.loanToValue}%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Debt Service Coverage</span>\n                        <span className=\"font-medium\">{selectedProperty.financialMetrics.debtServiceCoverage}x</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Break-even Occupancy</span>\n                        <span className=\"font-medium\">{selectedProperty.financialMetrics.breakEvenOccupancy}%</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Investment Structure */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <FileText className=\"w-4 h-4\" />\n                      Investment Structure\n                    </h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Ownership Type</span>\n                        <span className=\"font-medium text-right flex-1 ml-2\">{selectedProperty.legalStructure.ownership}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Management Fees</span>\n                        <span className=\"font-medium\">{selectedProperty.legalStructure.managementFees}%</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Exit Strategy</span>\n                        <span className=\"font-medium text-right flex-1 ml-2\">{selectedProperty.legalStructure.exitStrategy}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Taxation</span>\n                        <span className=\"font-medium text-right flex-1 ml-2\">{selectedProperty.legalStructure.taxation}</span>\n                      </div>\n                    </div>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"analysis\" className=\"space-y-4 mt-4\">\n                  {/* Market Analysis */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <BarChart3 className=\"w-4 h-4\" />\n                      Market Analysis\n                    </h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Average Rent</span>\n                        <span className=\"font-medium\">{selectedProperty.marketAnalysis.averageRent.toLocaleString()} SAR</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Market Growth</span>\n                        <span className=\"font-medium text-green-600\">+{selectedProperty.marketAnalysis.marketGrowth}%</span>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <span className=\"text-sm text-muted-foreground\">Target Demographic</span>\n                        <p className=\"text-sm\">{selectedProperty.marketAnalysis.demographic}</p>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <span className=\"text-sm text-muted-foreground\">Competitive Analysis</span>\n                        <p className=\"text-sm\">{selectedProperty.marketAnalysis.competitorAnalysis}</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Risk Assessment */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />\n                      Risk Assessment\n                    </h4>\n                    <div className=\"space-y-2\">\n                      {selectedProperty.risks.map((risk, index) => (\n                        <div key={index} className=\"flex items-start gap-2\">\n                          <AlertTriangle className=\"w-4 h-4 text-yellow-500 mt-0.5 flex-shrink-0\" />\n                          <span className=\"text-sm\">{risk}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Developer Information */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <Award className=\"w-4 h-4\" />\n                      Developer Information\n                    </h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Developer</span>\n                        <span className=\"font-medium\">{selectedProperty.developer.name}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Experience</span>\n                        <span className=\"font-medium text-right flex-1 ml-2\">{selectedProperty.developer.experience}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Reputation Score</span>\n                        <span className=\"font-medium\">{selectedProperty.developer.reputation}/100</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Previous Projects</span>\n                        <span className=\"font-medium\">{selectedProperty.developer.previousProjects}</span>\n                      </div>\n                    </div>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"timeline\" className=\"space-y-4 mt-4\">\n                  {/* Project Timeline */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <Clock className=\"w-4 h-4\" />\n                      Project Timeline\n                    </h4>\n                    <p className=\"text-sm text-muted-foreground\">Current Phase: {selectedProperty.timeline.phase}</p>\n                    \n                    <div className=\"space-y-4\">\n                      {selectedProperty.timeline.milestones.map((milestone, index) => (\n                        <div key={index} className=\"flex items-center gap-3\">\n                          <div className={`w-4 h-4 rounded-full border-2 ${\n                            milestone.status === 'completed' \n                              ? 'bg-green-500 border-green-500' \n                              : milestone.status === 'in_progress'\n                              ? 'bg-blue-500 border-blue-500'\n                              : 'border-muted-foreground'\n                          }`} />\n                          <div className=\"flex-1\">\n                            <div className=\"flex justify-between items-center\">\n                              <span className=\"font-medium\">{milestone.name}</span>\n                              <span className=\"text-sm text-muted-foreground\">\n                                {new Date(milestone.date).toLocaleDateString()}\n                              </span>\n                            </div>\n                            <Badge \n                              variant={\n                                milestone.status === 'completed' \n                                  ? 'default' \n                                  : milestone.status === 'in_progress'\n                                  ? 'secondary'\n                                  : 'outline'\n                              }\n                              className=\"text-xs mt-1\"\n                            >\n                              {milestone.status.replace('_', ' ')}\n                            </Badge>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Project Information */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"font-semibold flex items-center gap-2\">\n                      <Info className=\"w-4 h-4\" />\n                      Project Details\n                    </h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Development Stage</span>\n                        <Badge variant=\"outline\" className=\"capitalize\">{selectedProperty.developmentStage.replace('_', ' ')}</Badge>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Expected Completion</span>\n                        <span className=\"font-medium\">{selectedProperty.completionDate}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Total Units</span>\n                        <span className=\"font-medium\">{selectedProperty.totalUnits.toLocaleString()}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Available Units</span>\n                        <span className=\"font-medium\">{selectedProperty.availableUnits.toLocaleString()}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-muted-foreground\">Project Size</span>\n                        <span className=\"font-medium\">{selectedProperty.size.toLocaleString()} sqm</span>\n                      </div>\n                    </div>\n                  </div>\n                </TabsContent>\n              </Tabs>\n            )}\n\n            <DialogFooter className=\"gap-2\">\n              <Button \n                variant=\"outline\" \n                onClick={() => setIsPropertyDetailsOpen(false)}\n                className=\"flex-1\"\n              >\n                Close\n              </Button>\n              <Button \n                onClick={() => {\n                  setIsPropertyDetailsOpen(false)\n                  if (selectedProperty) {\n                    handleInvestClick(selectedProperty)\n                  }\n                }}\n                className=\"flex-1 bg-gradient-to-r from-primary to-primary/90\"\n              >\n                <DollarSign className=\"w-4 h-4 mr-2\" />\n                Invest Now\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n\n        {/* Advanced Filters Dialog */}\n        <Dialog open={isFilterOpen} onOpenChange={setIsFilterOpen}>\n          <DialogContent className=\"sm:max-w-lg bg-card/95 backdrop-blur-xl border-border/50 max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"text-xl flex items-center gap-2\">\n                <SlidersHorizontal className=\"w-5 h-5\" />\n                Advanced Filters\n              </DialogTitle>\n            </DialogHeader>\n            \n            <div className=\"space-y-6\">\n              {/* Property Type */}\n              <div className=\"space-y-3\">\n                <Label>Property Type</Label>\n                <Select \n                  value={filters.type} \n                  onValueChange={(value) => setFilters(prev => ({ ...prev, type: value }))}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {filterOptions.type.map(type => (\n                      <SelectItem key={type} value={type}>{type}</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Risk Level */}\n              <div className=\"space-y-3\">\n                <Label>Risk Level</Label>\n                <Select \n                  value={filters.riskLevel} \n                  onValueChange={(value) => setFilters(prev => ({ ...prev, riskLevel: value }))}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {filterOptions.riskLevel.map(risk => (\n                      <SelectItem key={risk} value={risk}>{risk}</SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Price Range */}\n              <div className=\"space-y-3\">\n                <Label>Price Range (SAR)</Label>\n                <Slider\n                  value={filters.priceRange}\n                  onValueChange={(value) => setFilters(prev => ({ ...prev, priceRange: value as [number, number] }))}\n                  max={15000000}\n                  min={0}\n                  step={100000}\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-sm text-muted-foreground\">\n                  <span>{filters.priceRange[0].toLocaleString()} SAR</span>\n                  <span>{filters.priceRange[1].toLocaleString()} SAR</span>\n                </div>\n              </div>\n\n              {/* ROI Range */}\n              <div className=\"space-y-3\">\n                <Label>Expected ROI (%)</Label>\n                <Slider\n                  value={filters.roiRange}\n                  onValueChange={(value) => setFilters(prev => ({ ...prev, roiRange: value as [number, number] }))}\n                  max={25}\n                  min={0}\n                  step={1}\n                  className=\"w-full\"\n                />\n                <div className=\"flex justify-between text-sm text-muted-foreground\">\n                  <span>{filters.roiRange[0]}%</span>\n                  <span>{filters.roiRange[1]}%</span>\n                </div>\n              </div>\n            </div>\n            \n            <DialogFooter className=\"gap-2\">\n              <Button \n                variant=\"outline\" \n                onClick={clearFilters}\n                className=\"flex-1\"\n              >\n                Clear All\n              </Button>\n              <Button \n                onClick={() => setIsFilterOpen(false)}\n                className=\"flex-1\"\n              >\n                Apply Filters\n              </Button>\n            </DialogFooter>\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  )\n}","size_bytes":71415},"client/src/components/language-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\"\n\ntype Language = \"en\" | \"ar\" | \"ur\" | \"hi\" | \"pa\" | \"bn\" | \"ml\"\n\ntype LanguageProviderProps = {\n  children: React.ReactNode\n  defaultLanguage?: Language\n  storageKey?: string\n}\n\ntype LanguageProviderState = {\n  language: Language\n  setLanguage: (language: Language) => void\n  isRTL: boolean\n}\n\nconst initialState: LanguageProviderState = {\n  language: \"en\",\n  setLanguage: () => null,\n  isRTL: false,\n}\n\nconst LanguageProviderContext = createContext<LanguageProviderState>(initialState)\n\nexport function LanguageProvider({\n  children,\n  defaultLanguage = \"en\",\n  storageKey = \"zaron-language\",\n  ...props\n}: LanguageProviderProps) {\n  const [language, setLang] = useState<Language>(\n    () => (localStorage.getItem(storageKey) as Language) || defaultLanguage\n  )\n\n  const isRTL = language === \"ar\" || language === \"ur\"\n\n  useEffect(() => {\n    const root = window.document.documentElement\n\n    // Remove existing language and direction classes\n    root.classList.remove(\"en\", \"ar\", \"ur\", \"hi\", \"pa\", \"bn\", \"ml\", \"rtl\", \"ltr\")\n    \n    // Add current language class\n    root.classList.add(language)\n    \n    // Add direction class\n    root.classList.add(isRTL ? \"rtl\" : \"ltr\")\n    \n    // Set dir attribute for proper RTL support\n    root.setAttribute(\"dir\", isRTL ? \"rtl\" : \"ltr\")\n    \n    // Set lang attribute for accessibility\n    root.setAttribute(\"lang\", language)\n  }, [language, isRTL])\n\n  const value = {\n    language,\n    isRTL,\n    setLanguage: (newLanguage: Language) => {\n      localStorage.setItem(storageKey, newLanguage)\n      setLang(newLanguage)\n    },\n  }\n\n  return (\n    <LanguageProviderContext.Provider {...props} value={value}>\n      {children}\n    </LanguageProviderContext.Provider>\n  )\n}\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageProviderContext)\n\n  if (context === undefined)\n    throw new Error(\"useLanguage must be used within a LanguageProvider\")\n\n  return context\n}","size_bytes":1997},"client/src/components/language-switcher.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Globe } from \"lucide-react\"\nimport { useLanguage } from \"@/components/language-provider\"\nimport { useTranslation } from \"@/hooks/use-translation\"\n\nconst languages = [\n  { code: \"en\", flag: \"🇺🇸\", name: \"english\" },\n  { code: \"ar\", flag: \"🇸🇦\", name: \"arabic\" },\n  { code: \"hi\", flag: \"🇮🇳\", name: \"hindi\" }\n] as const\n\nexport function LanguageSwitcher() {\n  const { language, setLanguage } = useLanguage()\n  const { t } = useTranslation()\n\n  const currentLanguage = languages.find(lang => lang.code === language)\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"ghost\" \n          size=\"icon\" \n          className=\"h-9 w-9\"\n          data-testid=\"button-language-switcher\"\n        >\n          <Globe className=\"h-4 w-4\" />\n          <span className=\"sr-only\">Switch language</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-48\">\n        {languages.map((lang) => (\n          <DropdownMenuItem\n            key={lang.code}\n            onClick={() => setLanguage(lang.code)}\n            className={`flex items-center gap-2 ${language === lang.code ? 'bg-accent' : ''}`}\n            data-testid={`language-option-${lang.code}`}\n          >\n            <span className=\"text-lg\">{lang.flag}</span>\n            <span className=\"flex-1\">{t(lang.name as keyof typeof import(\"@/lib/translations\").translations.en)}</span>\n            {language === lang.code && (\n              <div className=\"w-2 h-2 rounded-full bg-primary\" />\n            )}\n          </DropdownMenuItem>\n        ))}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}","size_bytes":1842},"client/src/hooks/use-translation.ts":{"content":"import { useLanguage } from \"@/components/language-provider\"\nimport { translations, type TranslationKey } from \"@/lib/translations\"\n\nexport function useTranslation() {\n  const { language } = useLanguage()\n  \n  const t = (key: TranslationKey): string => {\n    return translations[language][key] || translations.en[key] || key\n  }\n  \n  return { t, language }\n}","size_bytes":358},"client/src/lib/translations.ts":{"content":"export type TranslationKey = keyof typeof translations.en\n\nexport const translations = {\n  en: {\n    // Header & Navigation\n    welcome_back: \"Welcome back,\", \n    track_investments: \"Track your real estate investments in Saudi Arabia\",\n    total_portfolio_value: \"Total Portfolio Value\",\n    \n    // Navigation\n    home: \"Home\",\n    properties: \"Properties\", \n    portfolio: \"Portfolio\",\n    profile: \"Profile\",\n    chat: \"Chat\",\n    ai_advisor: \"AI Advisor\",\n    \n    // Dashboard\n    total_value: \"Total Value\",\n    total_return: \"Total Return\",\n    since_inception: \"Since inception\",\n    browse_properties: \"Browse Properties\",\n    view_portfolio: \"View Portfolio\",\n    \n    // Investments\n    active_investments: \"Active Investments\",\n    current_property_investments: \"Your current property investments\",\n    performance_summary: \"Performance Summary\",\n    investment_performance_overview: \"Your investment performance overview\",\n    \n    // Property Details\n    invested: \"Invested\",\n    current_value: \"Current Value\",\n    return: \"Return\",\n    total_invested: \"Total Invested\",\n    roi: \"ROI\",\n    \n    // Performance Labels\n    excellent: \"Excellent\",\n    good: \"Good\",\n    average: \"Average\",\n    \n    // Locations\n    riyadh: \"Riyadh\",\n    jeddah: \"Jeddah\",\n    dammam: \"Dammam\",\n    \n    // Property Types\n    luxury_apartment_complex: \"Luxury Apartment Complex\",\n    retail_shopping_complex: \"Retail Shopping Complex\",\n    commercial_office_building: \"Commercial Office Building\",\n    luxury_villa_property: \"Luxury Villa Property\",\n    \n    // Available Properties\n    available_properties: \"Available Properties\",\n    new_investment_opportunities: \"New investment opportunities\",\n    min_investment: \"Min Investment\",\n    expected_return: \"Expected Return\",\n    duration: \"Duration\",\n    invest_now: \"Invest Now\",\n    learn_more: \"Learn More\",\n    \n    // Chat & AI Features\n    live_chat: \"Live Chat\",\n    ai_assistant: \"AI Assistant\", \n    ask_ai: \"Ask AI\",\n    chat_with_advisor: \"Chat with Advisor\",\n    ai_insights: \"AI Insights\",\n    market_analysis: \"Market Analysis\",\n    investment_recommendations: \"Investment Recommendations\",\n    send_message: \"Send message\",\n    type_message: \"Type your message...\",\n    \n    // Saudi-specific\n    saudi_market: \"Saudi Real Estate Market\",\n    vision_2030: \"Vision 2030 Aligned\",\n    neom_projects: \"NEOM Projects\",\n    red_sea_developments: \"Red Sea Developments\",\n    shariah_compliant: \"Shariah Compliant\",\n    saudi_regulations: \"Saudi Real Estate Regulations\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\",\n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മലയാളം\",\n    \n    // Website specific\n    landing_title: \"Invest in Saudi Arabia's Future\",\n    landing_subtitle: \"Join thousands of investors building wealth through Vision 2030 real estate projects\",\n    get_started: \"Get Started\",\n    learn_more_cta: \"Learn More\",\n    register_now: \"Register Now\",\n    login: \"Login\",\n    about_us: \"About Us\",\n    business_model: \"Business Model\",\n    download_app: \"Download App\",\n    how_it_works: \"How It Works\",\n    why_zaron: \"Why Zaron\",\n    contact_us: \"Contact Us\",\n    \n    // Auth Dialog\n    welcome_to_zaron: \"Welcome to Zaron\",\n    join_thousands_investors: \"Join thousands of investors in Saudi Arabia's future\",\n    register: \"Register\",\n    email: \"Email\",\n    password: \"Password\",\n    enter_password: \"Enter your password\",\n    remember_me: \"Remember me\",\n    forgot_password: \"Forgot password?\",\n    first_name: \"First Name\",\n    last_name: \"Last Name\",\n    phone_number: \"Phone Number\",\n    create_password: \"Create a password\",\n    confirm_password: \"Confirm Password\",\n    agree_to: \"I agree to the\",\n    terms_conditions: \"Terms & Conditions\",\n    and: \"and\",\n    privacy_policy: \"Privacy Policy\",\n    confirm_shariah_compliant: \"I confirm this investment aligns with Shariah principles\",\n    create_account: \"Create Account\",\n    sama_regulated: \"SAMA Regulated\",\n    \n    // Hero Section - Crowdfunding\n    hero_title: \"Invest in Saudi Arabia's Future\",\n    hero_subtitle: \"Join the real estate crowdfunding revolution. Build wealth through Vision 2030 projects with Shariah-compliant investments.\",\n    invested_amount: \"SAR 2.5B+ Invested\",\n    avg_returns: \"15.2% Avg. Returns\",\n    total_properties: \"450+ Properties\",\n    start_investing_now: \"Start Investing Now\",\n    explore_opportunities: \"Explore Opportunities\",\n    \n    // Why Invest Section\n    why_invest_title: \"Why Real Estate Crowdfunding?\",\n    why_invest_subtitle: \"Discover the benefits of fractional real estate investment in Saudi Arabia's booming market\",\n    start_investment_journey: \"Start Your Investment Journey\",\n    \n    // Why Invest Benefits\n    fractional_ownership: \"Fractional Ownership\",\n    fractional_desc: \"Invest in premium properties with as little as SAR 1,000\",\n    superior_returns: \"Superior Returns\", \n    superior_desc: \"Average returns of 15%+ backed by Saudi Arabia's growth\",\n    shariah_compliance: \"Shariah Compliance\",\n    shariah_desc: \"All investments are reviewed and approved by Shariah board\",\n    professional_mgmt: \"Professional Management\",\n    professional_desc: \"Expert property management handles everything for you\",\n    premium_properties: \"Premium Properties\",\n    premium_desc: \"Curated selection of high-quality Vision 2030 projects\",\n    vision_alignment: \"Vision 2030 Aligned\",\n    vision_desc: \"Invest in projects driving Saudi Arabia's transformation\",\n    \n    // Trust & Testimonials\n    trusted_by_thousands: \"Trusted by Thousands of Investors\",\n    join_community: \"Join our community of successful real estate investors across Saudi Arabia\",\n    investor_rating: \"Investor Rating\",\n    success_rate: \"Success Rate\", \n    avg_payout: \"Avg. Payout\",\n    support_available: \"Support\",\n    \n    // Testimonials\n    testimonial_ahmed: \"Zaron has transformed my investment strategy. The platform's transparency and Shariah-compliant options align perfectly with my values. I've achieved 18% returns consistently.\",\n    testimonial_fatima: \"As a busy entrepreneur, Zaron's passive investment model is perfect. Professional property management and regular returns without the hassle of direct ownership.\",\n    testimonial_omar: \"The Vision 2030 aligned properties on Zaron have been exceptional investments. Clear reporting, professional management, and impressive growth potential.\",\n    annual_returns: \"Annual Returns\",\n    \n    // Security & Compliance\n    security_compliance: \"Security & Compliance\",\n    security_subtitle: \"Your investments are protected by industry-leading security measures and regulatory compliance\",\n    sama_regulated_title: \"SAMA Regulated\",\n    sama_desc: \"Licensed by Saudi Arabian Monetary Authority\",\n    shariah_compliant_title: \"Shariah Compliant\", \n    shariah_compliant_desc: \"All investments certified by Shariah board\",\n    bank_grade_security: \"Bank-Grade Security\",\n    bank_security_desc: \"256-bit SSL encryption and secure data storage\",\n    legal_protection: \"Legal Protection\",\n    legal_desc: \"Full legal documentation and investor protection\",\n    trusted_partners: \"Trusted Partners\",\n    \n    // How It Works Process\n    how_crowdfunding_works: \"How Real Estate Crowdfunding Works\",\n    investment_journey_steps: \"Start your investment journey in three simple steps\",\n    simple_secure_process: \"Simple & Secure Process\",\n    start_investing_steps: \"Start Investing in 3 Steps\",\n    streamlined_process: \"Our streamlined process makes real estate investment accessible to everyone\",\n    \n    // Process Steps\n    register_verify: \"Register & Verify\",\n    register_desc: \"Create your account and complete KYC verification in under 5 minutes. All information is securely encrypted and Shariah compliant.\",\n    browse_select: \"Browse & Select\",\n    browse_desc: \"Explore our curated portfolio of premium Saudi real estate projects. View detailed analytics, returns, and investment terms.\",\n    invest_earn: \"Invest & Earn\", \n    invest_desc: \"Make your investment starting from SAR 1,000. Track performance and receive returns directly to your account.\",\n    get_started_now: \"Get Started Now\",\n    \n    // Property Cards\n    funding_progress: \"Funding Progress\",\n    days_remaining: \"Days Remaining\",\n    total_investors: \"Investors\",\n    min_investment_amount: \"Min. Investment\",\n    view_details: \"View Details\",\n    register_to_unlock: \"Register to unlock investment details\",\n    investment_details_locked: \"Investment details are available after registration\",\n    browse_all_properties: \"Browse All Properties\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"SAMA Regulated\",\n    total_invested: \"Total Invested\",\n    avg_returns_label: \"Avg. Returns\", \n    properties_funded: \"Properties Funded\",\n    shariah_certified: \"Shariah Certified\",\n    rating_display: \"4.9/5 Rating\",\n    sama_licensed: \"SAMA Licensed\",\n    \n    // Property Tags\n    vision_2030: \"Vision 2030\",\n    shariah_compliant_tag: \"Shariah Compliant\", \n    high_yield: \"High Yield\",\n    prime_location: \"Prime Location\",\n    commercial: \"Commercial\",\n    stable_returns: \"Stable Returns\",\n    tourism: \"Tourism\",\n    luxury: \"Luxury\",\n    mega_project: \"Mega Project\"\n  },\n  \n  ar: {\n    // Header & Navigation  \n    welcome_back: \"مرحباً بعودتك،\",\n    track_investments: \"تتبع استثماراتك العقارية في المملكة العربية السعودية\",\n    total_portfolio_value: \"إجمالي قيمة المحفظة\",\n    \n    // Navigation\n    home: \"الرئيسية\",\n    properties: \"العقارات\",\n    portfolio: \"المحفظة\", \n    profile: \"الملف الشخصي\",\n    chat: \"المحادثة\",\n    ai_advisor: \"المستشار الذكي\",\n    \n    // Dashboard\n    total_value: \"القيمة الإجمالية\",\n    total_return: \"العائد الإجمالي\",\n    since_inception: \"منذ البداية\",\n    browse_properties: \"تصفح العقارات\",\n    view_portfolio: \"عرض المحفظة\",\n    \n    // Investments\n    active_investments: \"الاستثمارات النشطة\",\n    current_property_investments: \"استثماراتك العقارية الحالية\",\n    performance_summary: \"ملخص الأداء\",\n    investment_performance_overview: \"نظرة عامة على أداء استثماراتك\",\n    \n    // Property Details\n    invested: \"المستثمر\",\n    current_value: \"القيمة الحالية\",\n    return: \"العائد\",\n    total_invested: \"إجمالي المستثمر\",\n    roi: \"عائد الاستثمار\",\n    \n    // Performance Labels\n    excellent: \"ممتاز\",\n    good: \"جيد\", \n    average: \"متوسط\",\n    \n    // Locations\n    riyadh: \"الرياض\",\n    jeddah: \"جدة\",\n    dammam: \"الدمام\",\n    \n    // Property Types\n    luxury_apartment_complex: \"مجمع شقق فاخرة\",\n    retail_shopping_complex: \"مجمع تسوق تجاري\",\n    commercial_office_building: \"مبنى مكاتب تجاري\",\n    luxury_villa_property: \"فيلا فاخرة\",\n    \n    // Available Properties\n    available_properties: \"العقارات المتاحة\",\n    new_investment_opportunities: \"فرص استثمارية جديدة\",\n    min_investment: \"الحد الأدنى للاستثمار\",\n    expected_return: \"العائد المتوقع\",\n    duration: \"المدة\",\n    invest_now: \"استثمر الآن\",\n    learn_more: \"اعرف المزيد\",\n    \n    // Chat & AI Features\n    live_chat: \"المحادثة المباشرة\",\n    ai_assistant: \"المساعد الذكي\", \n    ask_ai: \"اسأل الذكي\",\n    chat_with_advisor: \"تحدث مع المستشار\",\n    ai_insights: \"رؤى ذكية\",\n    market_analysis: \"تحليل السوق\",\n    investment_recommendations: \"توصيات الاستثمار\",\n    send_message: \"إرسال رسالة\",\n    type_message: \"اكتب رسالتك...\",\n    \n    // Saudi-specific\n    saudi_market: \"سوق العقارات السعودي\",\n    vision_2030: \"متوافق مع رؤية 2030\",\n    neom_projects: \"مشاريع نيوم\",\n    red_sea_developments: \"تطوير البحر الأحمر\",\n    shariah_compliant: \"متوافق مع الشريعة\",\n    saudi_regulations: \"اللوائح العقارية السعودية\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\", \n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മലയാളം\",\n    \n    // Website specific\n    landing_title: \"استثمر في مستقبل المملكة العربية السعودية\",\n    landing_subtitle: \"انضم إلى آلاف المستثمرين الذين يبنون الثروة من خلال مشاريع رؤية 2030 العقارية\",\n    get_started: \"ابدأ الآن\",\n    learn_more_cta: \"اعرف المزيد\",\n    register_now: \"سجل الآن\",\n    login: \"تسجيل الدخول\",\n    about_us: \"عنا\",\n    business_model: \"نموذج الأعمال\",\n    download_app: \"تحميل التطبيق\",\n    how_it_works: \"كيف يعمل\",\n    why_zaron: \"لماذا زارون\",\n    contact_us: \"اتصل بنا\",\n    \n    // Auth Dialog\n    welcome_to_zaron: \"مرحباً بك في زارون\",\n    join_thousands_investors: \"انضم إلى آلاف المستثمرين في مستقبل المملكة العربية السعودية\",\n    register: \"التسجيل\",\n    email: \"البريد الإلكتروني\",\n    password: \"كلمة المرور\",\n    enter_password: \"أدخل كلمة المرور\",\n    remember_me: \"تذكرني\",\n    forgot_password: \"نسيت كلمة المرور؟\",\n    first_name: \"الاسم الأول\",\n    last_name: \"اسم العائلة\",\n    phone_number: \"رقم الهاتف\",\n    create_password: \"أنشئ كلمة مرور\",\n    confirm_password: \"تأكيد كلمة المرور\",\n    agree_to: \"أوافق على\",\n    terms_conditions: \"الشروط والأحكام\",\n    and: \"و\",\n    privacy_policy: \"سياسة الخصوصية\",\n    confirm_shariah_compliant: \"أؤكد أن هذا الاستثمار متوافق مع مبادئ الشريعة الإسلامية\",\n    create_account: \"إنشاء حساب\",\n    sama_regulated: \"مرخص من ساما\",\n    \n    // Hero Section - Crowdfunding\n    hero_title: \"استثمر في مستقبل المملكة العربية السعودية\",\n    hero_subtitle: \"انضم إلى ثورة التمويل الجماعي العقاري. ابني الثروة من خلال مشاريع رؤية 2030 مع الاستثمارات المتوافقة مع الشريعة.\",\n    invested_amount: \"تم استثمار أكثر من 2.5 مليار ريال\",\n    avg_returns: \"متوسط العوائد 15.2%\",\n    total_properties: \"أكثر من 450 عقار\",\n    start_investing_now: \"ابدأ الاستثمار الآن\",\n    explore_opportunities: \"استكشف الفرص\",\n    \n    // Why Invest Section\n    why_invest_title: \"لماذا التمويل الجماعي العقاري؟\",\n    why_invest_subtitle: \"اكتشف فوائد الاستثمار العقاري الجزئي في السوق السعودي المزدهر\",\n    start_investment_journey: \"ابدأ رحلة الاستثمار\",\n    \n    // Why Invest Benefits\n    fractional_ownership: \"الملكية الجزئية\",\n    fractional_desc: \"استثمر في العقارات المميزة بقدر 1,000 ريال فقط\",\n    superior_returns: \"عوائد متفوقة\", \n    superior_desc: \"متوسط عوائد 15%+ مدعومة بنمو المملكة العربية السعودية\",\n    shariah_compliance: \"متوافق مع الشريعة\",\n    shariah_desc: \"جميع الاستثمارات مراجعة ومعتمدة من هيئة الشريعة\",\n    professional_mgmt: \"إدارة مهنية\",\n    professional_desc: \"إدارة عقارية خبيرة تتولى كل شيء نيابة عنك\",\n    premium_properties: \"عقارات مميزة\",\n    premium_desc: \"مجموعة منتقاة من مشاريع رؤية 2030 عالية الجودة\",\n    vision_alignment: \"متماشي مع رؤية 2030\",\n    vision_desc: \"استثمر في المشاريع التي تقود تحول المملكة العربية السعودية\",\n    \n    // Trust & Testimonials\n    trusted_by_thousands: \"موثوق من آلاف المستثمرين\",\n    join_community: \"انضم إلى مجتمعنا من المستثمرين العقاريين الناجحين في جميع أنحاء المملكة العربية السعودية\",\n    investor_rating: \"تقييم المستثمرين\",\n    success_rate: \"معدل النجاح\", \n    avg_payout: \"متوسط الدفع\",\n    support_available: \"الدعم\",\n    \n    // Testimonials\n    testimonial_ahmed: \"زارون غيّر استراتيجية الاستثمار الخاصة بي. شفافية المنصة والخيارات المتوافقة مع الشريعة تتماشى تماماً مع قيمي. حققت عوائد 18% باستمرار.\",\n    testimonial_fatima: \"كرائدة أعمال مشغولة، نموذج الاستثمار السلبي في زارون مثالي. إدارة عقارية مهنية وعوائد منتظمة دون متاعب الملكية المباشرة.\",\n    testimonial_omar: \"كانت العقارات المتماشية مع رؤية 2030 في زارون استثمارات استثنائية. تقارير واضحة وإدارة مهنية وإمكانات نمو مذهلة.\",\n    annual_returns: \"العوائد السنوية\",\n    \n    // Security & Compliance\n    security_compliance: \"الأمان والامتثال\",\n    security_subtitle: \"استثماراتك محمية بتدابير أمنية رائدة في الصناعة والامتثال التنظيمي\",\n    sama_regulated_title: \"مرخص من ساما\",\n    sama_desc: \"مرخص من مؤسسة النقد العربي السعودي\",\n    shariah_compliant_title: \"متوافق مع الشريعة\", \n    shariah_compliant_desc: \"جميع الاستثمارات معتمدة من هيئة الشريعة\",\n    bank_grade_security: \"أمان مصرفي\",\n    bank_security_desc: \"تشفير SSL 256 بت وتخزين آمن للبيانات\",\n    legal_protection: \"حماية قانونية\",\n    legal_desc: \"وثائق قانونية كاملة وحماية للمستثمرين\",\n    trusted_partners: \"شركاء موثوقون\",\n    \n    // How It Works Process\n    how_crowdfunding_works: \"كيف يعمل التمويل الجماعي العقاري\",\n    investment_journey_steps: \"ابدأ رحلة الاستثمار في ثلاث خطوات بسيطة\",\n    simple_secure_process: \"عملية بسيطة وآمنة\",\n    start_investing_steps: \"ابدأ الاستثمار في 3 خطوات\",\n    streamlined_process: \"عمليتنا المبسطة تجعل الاستثمار العقاري في متناول الجميع\",\n    \n    // Process Steps\n    register_verify: \"سجل وتحقق\",\n    register_desc: \"أنشئ حسابك وأكمل التحقق من الهوية في أقل من 5 دقائق. جميع المعلومات مشفرة بأمان ومتوافقة مع الشريعة.\",\n    browse_select: \"تصفح واختر\",\n    browse_desc: \"استكشف محفظتنا المنتقاة من مشاريع العقارات السعودية المميزة. اطلع على التحليلات التفصيلية والعوائد وشروط الاستثمار.\",\n    invest_earn: \"استثمر واربح\", \n    invest_desc: \"اقم باستثمارك بدءاً من 1,000 ريال. تتبع الأداء واحصل على العوائد مباشرة في حسابك.\",\n    get_started_now: \"ابدأ الآن\",\n    \n    // Property Cards\n    funding_progress: \"تقدم التمويل\",\n    days_remaining: \"الأيام المتبقية\",\n    total_investors: \"المستثمرون\",\n    min_investment_amount: \"الحد الأدنى للاستثمار\",\n    view_details: \"عرض التفاصيل\",\n    register_to_unlock: \"سجل لفتح تفاصيل الاستثمار\",\n    investment_details_locked: \"تفاصيل الاستثمار متاحة بعد التسجيل\",\n    browse_all_properties: \"تصفح جميع العقارات\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"منظم من ساما\",\n    total_invested: \"إجمالي الاستثمار\",\n    avg_returns_label: \"متوسط العوائد\",\n    properties_funded: \"العقارات الممولة\", \n    shariah_certified: \"معتمد شرعياً\",\n    rating_display: \"تقييم 4.9/5\",\n    sama_licensed: \"مرخص من ساما\",\n    \n    // Property Tags\n    vision_2030: \"رؤية 2030\",\n    shariah_compliant_tag: \"متوافق مع الشريعة\",\n    high_yield: \"عائد مرتفع\",\n    prime_location: \"موقع متميز\",\n    commercial: \"تجاري\",\n    stable_returns: \"عوائد مستقرة\",\n    tourism: \"سياحة\",\n    luxury: \"فاخر\",\n    mega_project: \"مشروع ضخم\"\n  },\n  \n  ur: {\n    // Header & Navigation  \n    welcome_back: \"واپسی پر خوش آمدید،\",\n    track_investments: \"سعودی عرب میں اپنی ریئل اسٹیٹ کی سرمایہ کاری کو ٹریک کریں\",\n    total_portfolio_value: \"کل پورٹ فولیو ویلیو\",\n    \n    // Navigation\n    home: \"ہوم\",\n    properties: \"پراپرٹیز\",\n    portfolio: \"پورٹ فولیو\", \n    profile: \"پروفائل\",\n    chat: \"چیٹ\",\n    ai_advisor: \"AI مشیر\",\n    \n    // Dashboard\n    total_value: \"کل ویلیو\",\n    total_return: \"کل واپسی\",\n    since_inception: \"شروعات سے\",\n    browse_properties: \"پراپرٹیز دیکھیں\",\n    view_portfolio: \"پورٹ فولیو دیکھیں\",\n    \n    // Investments\n    active_investments: \"فعال سرمایہ کاری\",\n    current_property_investments: \"آپ کی موجودہ پراپرٹی سرمایہ کاری\",\n    performance_summary: \"کارکردگی کا خلاصہ\",\n    investment_performance_overview: \"آپ کی سرمایہ کاری کی کارکردگی کا جائزہ\",\n    \n    // Property Details\n    invested: \"سرمایہ کاری\",\n    current_value: \"موجودہ ویلیو\",\n    return: \"واپسی\",\n    total_invested: \"کل سرمایہ کاری\",\n    roi: \"ROI\",\n    \n    // Performance Labels\n    excellent: \"بہترین\",\n    good: \"اچھا\", \n    average: \"اوسط\",\n    \n    // Locations\n    riyadh: \"ریاض\",\n    jeddah: \"جدہ\",\n    dammam: \"دمام\",\n    \n    // Property Types\n    luxury_apartment_complex: \"لگژری اپارٹمنٹ کمپلیکس\",\n    retail_shopping_complex: \"ریٹیل شاپنگ کمپلیکس\",\n    commercial_office_building: \"کمرشل آفس بلڈنگ\",\n    luxury_villa_property: \"لگژری ولا پراپرٹی\",\n    \n    // Available Properties\n    available_properties: \"دستیاب پراپرٹیز\",\n    new_investment_opportunities: \"نئے سرمایہ کاری کے مواقع\",\n    min_investment: \"کم سے کم سرمایہ کاری\",\n    expected_return: \"متوقع واپسی\",\n    duration: \"مدت\",\n    invest_now: \"ابھی سرمایہ کاری کریں\",\n    learn_more: \"مزید جانیں\",\n    \n    // Chat & AI Features\n    live_chat: \"لائیو چیٹ\",\n    ai_assistant: \"AI اسسٹنٹ\", \n    ask_ai: \"AI سے پوچھیں\",\n    chat_with_advisor: \"مشیر سے چیٹ کریں\",\n    ai_insights: \"AI بصیرت\",\n    market_analysis: \"مارکیٹ تجزیہ\",\n    investment_recommendations: \"سرمایہ کاری کی سفارشات\",\n    send_message: \"پیغام بھیجیں\",\n    type_message: \"اپنا پیغام ٹائپ کریں...\",\n    \n    // Saudi-specific\n    saudi_market: \"سعودی ریئل اسٹیٹ مارکیٹ\",\n    vision_2030: \"ویژن 2030 سے ہم آہنگ\",\n    neom_projects: \"نیوم پروجیکٹس\",\n    red_sea_developments: \"بحیرہ احمر ڈیولپمنٹ\",\n    shariah_compliant: \"شریعت کے مطابق\",\n    saudi_regulations: \"سعودی ریئل اسٹیٹ ریگولیشنز\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\",\n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മലയാളം\",\n    \n    // Website specific\n    landing_title: \"سعودی عرب کے مستقبل میں سرمایہ کاری کریں\",\n    landing_subtitle: \"ویژن 2030 ریئل اسٹیٹ پروجیکٹس کے ذریعے دولت بنانے والے ہزاروں سرمایہ کاروں میں شامل ہوں\",\n    get_started: \"شروع کریں\",\n    learn_more_cta: \"مزید جانیں\",\n    register_now: \"ابھی رجسٹر کریں\",\n    login: \"لاگ ان\",\n    about_us: \"ہمارے بارے میں\",\n    business_model: \"کاروباری ماڈل\",\n    download_app: \"ایپ ڈاؤن لوڈ کریں\",\n    how_it_works: \"یہ کیسے کام کرتا ہے\",\n    why_zaron: \"زارون کیوں\",\n    contact_us: \"رابطہ کریں\",\n    \n    // Hero Section - Crowdfunding\n    hero_title: \"سعودی عرب کے مستقبل میں سرمایہ کاری کریں\",\n    hero_subtitle: \"ریئل اسٹیٹ کراؤڈ فنڈنگ انقلاب میں شامل ہوں۔ ویژن 2030 پروجیکٹس کے ذریعے شریعت کے مطابق سرمایہ کاری سے دولت بنائیں۔\",\n    invested_amount: \"SAR 2.5B+ سرمایہ کاری\",\n    avg_returns: \"15.2% اوسط منافع\",\n    total_properties: \"450+ پراپرٹیز\",\n    start_investing_now: \"ابھی سرمایہ کاری شروع کریں\",\n    explore_opportunities: \"مواقع دیکھیں\",\n    \n    // Why Invest Section\n    why_invest_title: \"ریئل اسٹیٹ کراؤڈ فنڈنگ کیوں؟\",\n    why_invest_subtitle: \"سعودی عرب کی بڑھتی مارکیٹ میں جزوی ریئل اسٹیٹ سرمایہ کاری کے فوائد دیکھیں\",\n    start_investment_journey: \"اپنا سرمایہ کاری کا سفر شروع کریں\",\n    \n    // Why Invest Benefits\n    fractional_ownership: \"جزوی ملکیت\",\n    fractional_desc: \"صرف SAR 1,000 سے پریمیم پراپرٹیز میں سرمایہ کاری کریں\",\n    superior_returns: \"بہتر منافع\",\n    superior_desc: \"سعودی عرب کی ترقی سے حمایت یافتہ اوسط 15%+ منافع\",\n    shariah_compliance: \"شریعت کے مطابق\",\n    shariah_desc: \"تمام سرمایہ کاری شریعہ بورڈ سے جانچی اور منظور شدہ\",\n    professional_mgmt: \"پیشہ ورانہ انتظام\",\n    professional_desc: \"ماہر پراپرٹی انتظام آپ کے لیے سب کچھ سنبھالتا ہے\",\n    premium_properties: \"پریمیم پراپرٹیز\",\n    premium_desc: \"اعلیٰ معیار کے ویژن 2030 منصوبوں کا منتخب مجموعہ\",\n    vision_alignment: \"ویژن 2030 کے ساتھ ہم آہنگ\",\n    vision_desc: \"سعودی عرب کی تبدیلی میں رہنمائی کرنے والے منصوبوں میں سرمایہ کاری\",\n    \n    // Trust & Testimonials\n    trusted_by_thousands: \"ہزاروں سرمایہ کاروں کا اعتماد\",\n    join_community: \"سعودی عرب بھر میں کامیاب ریئل اسٹیٹ سرمایہ کاروں کی ہماری کمیونٹی میں شامل ہوں\",\n    investor_rating: \"سرمایہ کار کی ریٹنگ\",\n    success_rate: \"کامیابی کی شرح\",\n    avg_payout: \"اوسط ادائیگی\",\n    support_available: \"سپورٹ\",\n    \n    // Testimonials\n    testimonial_ahmed: \"زارون نے میری سرمایہ کاری کی حکمت عملی کو تبدیل کر دیا۔ پلیٹ فارم کی شفافیت اور شریعت کے مطابق اختیارات میری اقدار سے بالکل میل کھاتے ہیں۔ میں نے مستقل طور پر 18% منافع حاصل کیا۔\",\n    testimonial_fatima: \"ایک مصروف کاروباری خاتون کے طور پر، زارون کا غیر فعال سرمایہ کاری ماڈل کامل ہے۔ پیشہ ورانہ پراپرٹی انتظام اور براہ راست ملکیت کی پریشانی کے بغیر منتظم منافع۔\",\n    testimonial_omar: \"زارون پر ویژن 2030 کے ساتھ ہم آہنگ پراپرٹیز غیر معمولی سرمایہ کاری تھیں۔ واضح رپورٹنگ، پیشہ ورانہ انتظام، اور شاندار ترقی کی صلاحیت۔\",\n    annual_returns: \"سالانہ منافع\",\n    \n    // Security & Compliance\n    security_compliance: \"سیکیورٹی اور تعمیل\",\n    security_subtitle: \"آپ کی سرمایہ کاری صنعت کی بہترین سیکیورٹی اقدامات اور ریگولیٹری تعمیل سے محفوظ ہے\",\n    sama_regulated_title: \"SAMA منظور شدہ\",\n    sama_desc: \"سعودی عرب کی مانیٹری اتھارٹی سے لائسنس یافتہ\",\n    shariah_compliant_title: \"شریعت کے مطابق\",\n    shariah_compliant_desc: \"تمام سرمایہ کاری شریعہ بورڈ سے تصدیق شدہ\",\n    bank_grade_security: \"بینک درجے کی سیکیورٹی\",\n    bank_security_desc: \"256-bit SSL انکرپشن اور محفوظ ڈیٹا اسٹوریج\",\n    legal_protection: \"قانونی تحفظ\",\n    legal_desc: \"مکمل قانونی دستاویزات اور سرمایہ کار تحفظ\",\n    trusted_partners: \"قابل اعتماد پارٹنرز\",\n    \n    // How It Works Process\n    how_crowdfunding_works: \"ریئل اسٹیٹ کراؤڈ فنڈنگ کیسے کام کرتا ہے\",\n    investment_journey_steps: \"تین آسان قدموں میں اپنا سرمایہ کاری کا سفر شروع کریں\",\n    simple_secure_process: \"آسان اور محفوظ عمل\",\n    start_investing_steps: \"3 قدموں میں سرمایہ کاری شروع کریں\",\n    streamlined_process: \"ہمارا ہموار عمل ریئل اسٹیٹ سرمایہ کاری کو سب کے لیے قابل رسائی بناتا ہے\",\n    \n    // Process Steps\n    register_verify: \"رجسٹر اور تصدیق کریں\",\n    register_desc: \"5 منٹ سے کم میں اپنا اکاؤنٹ بنائیں اور KYC تصدیق مکمل کریں۔ تمام معلومات محفوظ طریقے سے انکرپٹ اور شریعت کے مطابق۔\",\n    browse_select: \"دیکھیں اور منتخب کریں\",\n    browse_desc: \"ہمارے منتخب کردہ پریمیم سعودی ریئل اسٹیٹ منصوبوں کا پورٹ فولیو دیکھیں۔ تفصیلی تجزیات، منافع، اور سرمایہ کاری کی شرائط دیکھیں۔\",\n    invest_earn: \"سرمایہ کاری کریں اور کمائیں\",\n    invest_desc: \"SAR 1,000 سے شروع کرتے ہوئے اپنی سرمایہ کاری کریں۔ کارکردگی کو ٹریک کریں اور براہ راست اپنے اکاؤنٹ میں منافع حاصل کریں۔\",\n    get_started_now: \"ابھی شروع کریں\",\n    \n    // Property Cards\n    funding_progress: \"فنڈنگ کی پیشرفت\",\n    days_remaining: \"باقی دن\",\n    total_investors: \"سرمایہ کار\",\n    min_investment_amount: \"کم سے کم سرمایہ کاری\",\n    view_details: \"تفصیلات دیکھیں\",\n    register_to_unlock: \"سرمایہ کاری کی تفصیلات کھولنے کے لیے رجسٹر کریں\",\n    investment_details_locked: \"سرمایہ کاری کی تفصیلات رجسٹریشن کے بعد دستیاب ہیں\",\n    browse_all_properties: \"تمام پراپرٹیز دیکھیں\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"SAMA منظور شدہ\",\n    total_invested: \"کل سرمایہ کاری\",\n    avg_returns_label: \"اوسط منافع\",\n    properties_funded: \"فنڈ شدہ پراپرٹیز\",\n    shariah_certified: \"شرعی تصدیق شدہ\",\n    rating_display: \"4.9/5 ریٹنگ\",\n    sama_licensed: \"ساما لائسنس یافتہ\",\n    \n    // Property Tags\n    vision_2030: \"ویژن 2030\",\n    shariah_compliant_tag: \"شرعی ضوابط کے مطابق\",\n    high_yield: \"زیادہ منافع\",\n    prime_location: \"بہترین مقام\",\n    commercial: \"تجارتی\",\n    stable_returns: \"مستحکم منافع\",\n    tourism: \"سیاحت\",\n    luxury: \"لگژری\",\n    mega_project: \"بڑا منصوبہ\"\n  },\n\n  hi: {\n    // Header & Navigation\n    welcome_back: \"वापसी पर स्वागत है,\",\n    track_investments: \"सऊदी अरब में अपने रियल एस्टेट निवेश को ट्रैक करें\",\n    total_portfolio_value: \"कुल पोर्टफोलियो मूल्य\",\n    \n    // Navigation\n    home: \"होम\",\n    properties: \"संपत्तियां\",\n    portfolio: \"पोर्टफोलियो\",\n    profile: \"प्रोफाइल\",\n    chat: \"चैट\",\n    ai_advisor: \"AI सलाहकार\",\n    \n    // Dashboard\n    total_value: \"कुल मूल्य\",\n    total_return: \"कुल रिटर्न\",\n    since_inception: \"शुरुआत से\",\n    browse_properties: \"संपत्तियां ब्राउज़ करें\",\n    view_portfolio: \"पोर्टफोलियो देखें\",\n    \n    // Investments\n    active_investments: \"सक्रिय निवेश\",\n    current_property_investments: \"आपके वर्तमान संपत्ति निवेश\",\n    performance_summary: \"प्रदर्शन सारांश\",\n    investment_performance_overview: \"आपके निवेश प्रदर्शन का अवलोकन\",\n    \n    // Property Details\n    invested: \"निवेशित\",\n    current_value: \"वर्तमान मूल्य\",\n    return: \"रिटर्न\",\n    total_invested: \"कुल निवेशित\",\n    roi: \"ROI\",\n    \n    // Performance Labels\n    excellent: \"उत्कृष्ट\",\n    good: \"अच्छा\",\n    average: \"औसत\",\n    \n    // Locations\n    riyadh: \"रियाद\",\n    jeddah: \"जेद्दाह\",\n    dammam: \"दम्माम\",\n    \n    // Property Types\n    luxury_apartment_complex: \"लक्जरी अपार्टमेंट कॉम्प्लेक्स\",\n    retail_shopping_complex: \"रिटेल शॉपिंग कॉम्प्लेक्स\",\n    commercial_office_building: \"कमर्शियल ऑफिस बिल्डिंग\",\n    luxury_villa_property: \"लक्जरी विला प्रॉपर्टी\",\n    \n    // Available Properties\n    available_properties: \"उपलब्ध संपत्तियां\",\n    new_investment_opportunities: \"नए निवेश के अवसर\",\n    min_investment: \"न्यूनतम निवेश\",\n    expected_return: \"अपेक्षित रिटर्न\",\n    duration: \"अवधि\",\n    invest_now: \"अभी निवेश करें\",\n    learn_more: \"और जानें\",\n    \n    // Chat & AI Features\n    live_chat: \"लाइव चैट\",\n    ai_assistant: \"AI सहायक\", \n    ask_ai: \"AI से पूछें\",\n    chat_with_advisor: \"सलाहकार से चैट करें\",\n    ai_insights: \"AI अंतर्दृष्टि\",\n    market_analysis: \"बाजार विश्लेषण\",\n    investment_recommendations: \"निवेश सिफारिशें\",\n    send_message: \"संदेश भेजें\",\n    type_message: \"अपना संदेश टाइप करें...\",\n    \n    // Saudi-specific\n    saudi_market: \"सऊदी रियल एस्टेट बाजार\",\n    vision_2030: \"विज़न 2030 संरेखित\",\n    neom_projects: \"NEOM परियोजनाएं\",\n    red_sea_developments: \"रेड सी डेवलपमेंट\",\n    shariah_compliant: \"शरिया अनुपालन\",\n    saudi_regulations: \"सऊदी रियल एस्टेट नियम\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\",\n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മলയাളം\",\n    \n    // Website specific\n    landing_title: \"सऊदी अरब के भविष्य में निवेश करें\",\n    landing_subtitle: \"विज़न 2030 रियल एस्टेट परियोजनाओं के माध्यम से धन निर्माण करने वाले हजारों निवेशकों में शामिल हों\",\n    get_started: \"शुरू करें\",\n    learn_more_cta: \"और जानें\",\n    register_now: \"अभी रजिस्टर करें\",\n    login: \"लॉगिन\",\n    about_us: \"हमारे बारे में\",\n    business_model: \"व्यापार मॉडल\",\n    download_app: \"ऐप डाउनलोड करें\",\n    how_it_works: \"यह कैसे काम करता है\",\n    why_zaron: \"क्यों जारॉन\",\n    contact_us: \"संपर्क करें\",\n    \n    // Key Crowdfunding Translations (Hindi)\n    hero_title: \"सऊदी अरब के भविष्य में निवेश करें\",\n    hero_subtitle: \"रियल एस्टेट क्राउडफंडिंग क्रांति में शामिल हों। विज़न 2030 परियोजनाओं के माध्यम से शरिया-अनुपालित निवेश के साथ धन बनाएं।\",\n    start_investing_now: \"अभी निवेश शुरू करें\",\n    explore_opportunities: \"अवसर देखें\",\n    why_invest_title: \"रियल एस्टेट क्राउडफंडिंग क्यों?\",\n    trusted_by_thousands: \"हजारों निवेशकों का भरोसा\",\n    security_compliance: \"सुरक्षा और अनुपालन\",\n    how_crowdfunding_works: \"रियल एस्टेट क्राउडफंडिंग कैसे काम करता है\",\n    register_verify: \"पंजीकरण और सत्यापन करें\",\n    browse_select: \"ब्राउज़ करें और चुनें\",\n    invest_earn: \"निवेश करें और कमाएं\",\n    fractional_ownership: \"आंशिक स्वामित्व\",\n    superior_returns: \"बेहतर रिटर्न\",\n    shariah_compliance: \"शरिया अनुपालन\",\n    professional_mgmt: \"व्यावसायिक प्रबंधन\",\n    premium_properties: \"प्रीमियम संपत्तियां\",\n    vision_alignment: \"विज़न 2030 संरेखित\",\n    investor_rating: \"निवेशक रेटिंग\",\n    success_rate: \"सफलता दर\",\n    avg_payout: \"औसत भुगतान\",\n    support_available: \"सहायता\",\n    sama_regulated_title: \"SAMA विनियमित\",\n    shariah_compliant_title: \"शरिया अनुपालित\",\n    bank_grade_security: \"बैंक-ग्रेड सुरक्षा\",\n    legal_protection: \"कानूनी सुरक्षा\",\n    trusted_partners: \"विश्वसनीय भागीदार\",\n    annual_returns: \"वार्षिक रिटर्न\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"SAMA विनियमित\",\n    total_invested: \"कुल निवेश\",\n    avg_returns_label: \"औसत रिटर्न\",\n    properties_funded: \"फंडेड संपत्तियां\",\n    shariah_certified: \"शरिया प्रमाणित\",\n    rating_display: \"4.9/5 रेटिंग\",\n    sama_licensed: \"SAMA लाइसेंसशुदा\",\n    \n    // Property Tags  \n    vision_2030: \"विज़न 2030\",\n    shariah_compliant_tag: \"शरिया अनुपालित\",\n    high_yield: \"उच्च लाभ\",\n    prime_location: \"प्रमुख स्थान\",\n    commercial: \"व्यावसायिक\",\n    stable_returns: \"स्थिर रिटर्न\",\n    tourism: \"पर्यटन\",\n    luxury: \"लक्जरी\",\n    mega_project: \"मेगा प्रोजेक्ट\"\n  },\n  \n  pa: {\n    // Header & Navigation\n    welcome_back: \"ਵਾਪਸੀ 'ਤੇ ਸੁਆਗਤ ਹੈ,\",\n    track_investments: \"ਸਾਊਦੀ ਅਰਬ ਵਿੱਚ ਆਪਣੇ ਰੀਅਲ ਅਸਟੇਟ ਨਿਵੇਸ਼ ਨੂੰ ਟਰੈਕ ਕਰੋ\",\n    total_portfolio_value: \"ਕੁੱਲ ਪੋਰਟਫੋਲੀਓ ਮੁੱਲ\",\n    \n    // Navigation\n    home: \"ਘਰ\",\n    properties: \"ਸੰਪਤੀਆਂ\",\n    portfolio: \"ਪੋਰਟਫੋਲੀਓ\",\n    profile: \"ਪ੍ਰੋਫਾਈਲ\",\n    chat: \"ਚੈਟ\",\n    ai_advisor: \"AI ਸਲਾਹਕਾਰ\",\n    \n    // Dashboard\n    total_value: \"ਕੁੱਲ ਮੁੱਲ\",\n    total_return: \"ਕੁੱਲ ਰਿਟਰਨ\",\n    since_inception: \"ਸ਼ੁਰੂਆਤ ਤੋਂ\",\n    browse_properties: \"ਸੰਪਤੀਆਂ ਬ੍ਰਾਉਜ਼ ਕਰੋ\",\n    view_portfolio: \"ਪੋਰਟਫੋਲੀਓ ਦੇਖੋ\",\n    \n    // Investments\n    active_investments: \"ਸਰਗਰਮ ਨਿਵੇਸ਼\",\n    current_property_investments: \"ਤੁਹਾਡੇ ਮੌਜੂਦਾ ਸੰਪਤੀ ਨਿਵੇਸ਼\",\n    performance_summary: \"ਪ੍ਰਦਰਸ਼ਨ ਸਾਰਾਂਸ਼\",\n    investment_performance_overview: \"ਤੁਹਾਡੇ ਨਿਵੇਸ਼ ਪ੍ਰਦਰਸ਼ਨ ਦਾ ਸਿਖਲਾਈ\",\n    \n    // Property Details\n    invested: \"ਨਿਵੇਸ਼ਿਤ\",\n    current_value: \"ਮੌਜੂਦਾ ਮੁੱਲ\",\n    return: \"ਰਿਟਰਨ\",\n    total_invested: \"ਕੁੱਲ ਨਿਵੇਸ਼ਿਤ\",\n    roi: \"ROI\",\n    \n    // Performance Labels\n    excellent: \"ਸ਼ਾਨਦਾਰ\",\n    good: \"ਚੰਗਾ\",\n    average: \"ਔਸਤ\",\n    \n    // Locations\n    riyadh: \"ਰਿਯਾਦ\",\n    jeddah: \"ਜੇਦਾਹ\",\n    dammam: \"ਦਮਾਮ\",\n    \n    // Property Types\n    luxury_apartment_complex: \"ਲਗਜ਼ਰੀ ਅਪਾਰਟਮੈਂਟ ਕੰਪਲੈਕਸ\",\n    retail_shopping_complex: \"ਰਿਟੇਲ ਸ਼ਾਪਿੰਗ ਕੰਪਲੈਕਸ\",\n    commercial_office_building: \"ਵਪਾਰਕ ਦਫਤਰ ਇਮਾਰਤ\",\n    luxury_villa_property: \"ਲਗਜ਼ਰੀ ਵਿਲਾ ਸੰਪਤੀ\",\n    \n    // Available Properties\n    available_properties: \"ਉਪਲਬਧ ਸੰਪਤੀਆਂ\",\n    new_investment_opportunities: \"ਨਵੇਂ ਨਿਵੇਸ਼ ਦੇ ਮੌਕੇ\",\n    min_investment: \"ਘੱਟੋ-ਘੱਟ ਨਿਵੇਸ਼\",\n    expected_return: \"ਅਨੁਮਾਨਿਤ ਰਿਟਰਨ\",\n    duration: \"ਮਿਆਦ\",\n    invest_now: \"ਹੁਣੇ ਨਿਵੇਸ਼ ਕਰੋ\",\n    learn_more: \"ਹੋਰ ਜਾਣੋ\",\n    \n    // Chat & AI Features\n    live_chat: \"ਲਾਈਵ ਚੈਟ\",\n    ai_assistant: \"AI ਸਹਾਇਕ\",\n    ask_ai: \"AI ਨੂੰ ਪੁੱਛੋ\",\n    chat_with_advisor: \"ਸਲਾਹਕਾਰ ਨਾਲ ਚੈਟ ਕਰੋ\",\n    ai_insights: \"AI ਸੂਝ\",\n    market_analysis: \"ਮਾਰਕੀਟ ਵਿਸ਼ਲੇਸ਼ਣ\",\n    investment_recommendations: \"ਨਿਵੇਸ਼ ਸਿਫਾਰਸ਼ਾਂ\",\n    send_message: \"ਸੰਦੇਸ਼ ਭੇਜੋ\",\n    type_message: \"ਆਪਣਾ ਸੰਦੇਸ਼ ਟਾਈਪ ਕਰੋ...\",\n    \n    // Saudi-specific\n    saudi_market: \"ਸਾਊਦੀ ਰੀਅਲ ਅਸਟੇਟ ਮਾਰਕੀਟ\",\n    vision_2030: \"ਵਿਜ਼ਨ 2030 ਨਾਲ ਮੇਲ\",\n    neom_projects: \"ਨਿਓਮ ਪ੍ਰੋਜੈਕਟ\",\n    red_sea_developments: \"ਲਾਲ ਸਾਗਰ ਵਿਕਾਸ\",\n    shariah_compliant: \"ਸ਼ਰੀਆ ਅਨੁਕੂਲ\",\n    saudi_regulations: \"ਸਾਊਦੀ ਰੀਅਲ ਅਸਟੇਟ ਨਿਯਮ\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\",\n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മലയാളം\",\n    \n    // Website specific\n    landing_title: \"ਸਾਊਦੀ ਅਰਬ ਦੇ ਭਵਿੱਖ ਵਿੱਚ ਨਿਵੇਸ਼ ਕਰੋ\",\n    landing_subtitle: \"ਵਿਜ਼ਨ 2030 ਰੀਅਲ ਅਸਟੇਟ ਪ੍ਰੋਜੈਕਟਾਂ ਰਾਹੀਂ ਦੌਲਤ ਬਣਾਉਣ ਵਾਲੇ ਹਜ਼ਾਰਾਂ ਨਿਵੇਸ਼ਕਾਂ ਵਿੱਚ ਸ਼ਾਮਲ ਹੋਵੋ\",\n    get_started: \"ਸ਼ੁਰੂ ਕਰੋ\",\n    learn_more_cta: \"ਹੋਰ ਜਾਣੋ\",\n    register_now: \"ਹੁਣੇ ਰਜਿਸਟਰ ਕਰੋ\",\n    login: \"ਲਾਗਇਨ\",\n    about_us: \"ਸਾਡੇ ਬਾਰੇ\",\n    business_model: \"ਕਾਰੋਬਾਰੀ ਮਾਡਲ\",\n    download_app: \"ਐਪ ਡਾਊਨਲੋਡ ਕਰੋ\",\n    how_it_works: \"ਇਹ ਕਿਵੇਂ ਕੰਮ ਕਰਦਾ ਹੈ\",\n    why_zaron: \"ਜ਼ਾਰੋਨ ਕਿਉਂ\",\n    contact_us: \"ਸਾਡੇ ਨਾਲ ਸੰਪਰਕ ਕਰੋ\",\n    \n    // Key Crowdfunding Translations (Punjabi)\n    hero_title: \"ਸਾਊਦੀ ਅਰਬ ਦੇ ਭਵਿੱਖ ਵਿੱਚ ਨਿਵੇਸ਼ ਕਰੋ\",\n    start_investing_now: \"ਹੁਣੇ ਨਿਵੇਸ਼ ਸ਼ੁਰੂ ਕਰੋ\",\n    explore_opportunities: \"ਮੌਕੇ ਦੇਖੋ\",\n    why_invest_title: \"ਰੀਅਲ ਅਸਟੇਟ ਕ੍ਰਾਊਡਫੰਡਿੰਗ ਕਿਉਂ?\",\n    trusted_by_thousands: \"ਹਜ਼ਾਰਾਂ ਨਿਵੇਸ਼ਕਾਂ ਦਾ ਭਰੋਸਾ\",\n    security_compliance: \"ਸੁਰੱਖਿਆ ਅਤੇ ਪਾਲਣਾ\",\n    fractional_ownership: \"ਅੰਸ਼ਿਕ ਮਾਲਕੀ\",\n    superior_returns: \"ਸ਼ਾਨਦਾਰ ਰਿਟਰਨ\",\n    annual_returns: \"ਸਾਲਾਨਾ ਰਿਟਰਨ\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"SAMA ਨਿਯੰਤਰਿਤ\",\n    total_invested: \"ਕੁੱਲ ਨਿਵੇਸ਼\",\n    avg_returns_label: \"ਔਸਤ ਰਿਟਰਨ\",\n    properties_funded: \"ਫੰਡ ਕੀਤੀਆਂ ਸੰਪਤੀਆਂ\",\n    shariah_certified: \"ਸ਼ਰੀਆ ਪ੍ਰਮਾਣਿਤ\",\n    rating_display: \"4.9/5 ਰੇਟਿੰਗ\",\n    sama_licensed: \"SAMA ਲਾਇਸੈਂਸਸ਼ੁਦਾ\",\n    \n    // Property Tags\n    vision_2030: \"ਵਿਜ਼ਨ 2030\",\n    shariah_compliant_tag: \"ਸ਼ਰੀਅਤ ਅਨੁਕੂਲ\",\n    high_yield: \"ਉੱਚ ਲਾਭ\",\n    prime_location: \"ਮੁੱਖ ਸਥਾਨ\",\n    commercial: \"ਵਪਾਰਕ\",\n    stable_returns: \"ਸਥਿਰ ਰਿਟਰਨ\",\n    tourism: \"ਪਰਿਟਨ\",\n    luxury: \"ਲਗਜ਼ਰੀ\",\n    mega_project: \"ਮੇਗਾ ਪ੍ਰੋਜੈਕਟ\"\n  },\n  \n  bn: {\n    // Header & Navigation\n    welcome_back: \"ফিরে এসে স্বাগতম,\",\n    track_investments: \"সৌদি আরবে আপনার রিয়েল এস্টেট বিনিয়োগ ট্র্যাক করুন\",\n    total_portfolio_value: \"মোট পোর্টফোলিও মূল্য\",\n    \n    // Navigation\n    home: \"হোম\",\n    properties: \"সম্পত্তি\",\n    portfolio: \"পোর্টফোলিও\",\n    profile: \"প্রোফাইল\",\n    chat: \"চ্যাট\",\n    ai_advisor: \"AI উপদেষ্টা\",\n    \n    // Dashboard\n    total_value: \"মোট মূল্য\",\n    total_return: \"মোট রিটার্ন\",\n    since_inception: \"শুরু থেকে\",\n    browse_properties: \"সম্পত্তি ব্রাউজ করুন\",\n    view_portfolio: \"পোর্টফোলিও দেখুন\",\n    \n    // Investments\n    active_investments: \"সক্রিয় বিনিয়োগ\",\n    current_property_investments: \"আপনার বর্তমান সম্পত্তি বিনিয়োগ\",\n    performance_summary: \"কর্মক্ষমতা সারসংক্ষেপ\",\n    investment_performance_overview: \"আপনার বিনিয়োগ কর্মক্ষমতার ওভারভিউ\",\n    \n    // Property Details\n    invested: \"বিনিয়োগকৃত\",\n    current_value: \"বর্তমান মূল্য\",\n    return: \"রিটার্ন\",\n    total_invested: \"মোট বিনিয়োগকৃত\",\n    roi: \"ROI\",\n    \n    // Performance Labels\n    excellent: \"চমৎকার\",\n    good: \"ভাল\",\n    average: \"গড়\",\n    \n    // Locations\n    riyadh: \"রিয়াদ\",\n    jeddah: \"জেদ্দাহ\",\n    dammam: \"দাম্মাম\",\n    \n    // Property Types\n    luxury_apartment_complex: \"লাক্সারি অ্যাপার্টমেন্ট কমপ্লেক্স\",\n    retail_shopping_complex: \"রিটেইল শপিং কমপ্লেক্স\",\n    commercial_office_building: \"বাণিজ্যিক অফিস ভবন\",\n    luxury_villa_property: \"লাক্সারি ভিলা সম্পত্তি\",\n    \n    // Available Properties\n    available_properties: \"উপলব্ধ সম্পত্তি\",\n    new_investment_opportunities: \"নতুন বিনিয়োগের সুযোগ\",\n    min_investment: \"সর্বনিম্ন বিনিয়োগ\",\n    expected_return: \"প্রত্যাশিত রিটার্ন\",\n    duration: \"সময়কাল\",\n    invest_now: \"এখনই বিনিয়োগ করুন\",\n    learn_more: \"আরও জানুন\",\n    \n    // Chat & AI Features\n    live_chat: \"লাইভ চ্যাট\",\n    ai_assistant: \"AI সহায়ক\",\n    ask_ai: \"AI কে জিজ্ঞাসা করুন\",\n    chat_with_advisor: \"উপদেষ্টার সাথে চ্যাট করুন\",\n    ai_insights: \"AI অন্তর্দৃষ্টি\",\n    market_analysis: \"বাজার বিশ্লেষণ\",\n    investment_recommendations: \"বিনিয়োগ সুপারিশ\",\n    send_message: \"বার্তা পাঠান\",\n    type_message: \"আপনার বার্তা টাইপ করুন...\",\n    \n    // Saudi-specific\n    saudi_market: \"সৌদি রিয়েল এস্টেট বাজার\",\n    vision_2030: \"ভিশন 2030 সংযুক্ত\",\n    neom_projects: \"নিওম প্রকল্প\",\n    red_sea_developments: \"লোহিত সাগর উন্নয়ন\",\n    shariah_compliant: \"শরিয়া সঙ্গতিপূর্ণ\",\n    saudi_regulations: \"সৌদি রিয়েল এস্টেট নিয়মাবলী\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\",\n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മലയാളം\",\n    \n    // Website specific\n    landing_title: \"সৌদি আরবের ভবিষ্যতে বিনিয়োগ করুন\",\n    landing_subtitle: \"ভিশন 2030 রিয়েল এস্টেট প্রকল্পের মাধ্যমে সম্পদ তৈরি করা হাজার হাজার বিনিয়োগকারীদের সাথে যোগ দিন\",\n    get_started: \"শুরু করুন\",\n    learn_more_cta: \"আরও জানুন\",\n    register_now: \"এখনই নিবন্ধন করুন\",\n    login: \"লগইন\",\n    about_us: \"আমাদের সম্পর্কে\",\n    business_model: \"ব্যবসায়িক মডেল\",\n    download_app: \"অ্যাপ ডাউনলোড করুন\",\n    how_it_works: \"এটি কিভাবে কাজ করে\",\n    why_zaron: \"কেন জারন\",\n    contact_us: \"যোগাযোগ করুন\",\n    \n    // Key Crowdfunding Translations (Bengali)  \n    hero_title: \"সৌদি আরবের ভবিষ্যতে বিনিয়োগ করুন\",\n    start_investing_now: \"এখনই বিনিয়োগ শুরু করুন\",\n    explore_opportunities: \"সুযোগ দেখুন\",\n    why_invest_title: \"রিয়েল এস্টেট ক্রাউডফান্ডিং কেন?\",\n    trusted_by_thousands: \"হাজার হাজার বিনিয়োগকারীর আস্থা\",\n    security_compliance: \"নিরাপত্তা ও সম্মতি\",\n    fractional_ownership: \"আংশিক মালিকানা\",\n    superior_returns: \"উচ্চতর রিটার্ন\",\n    annual_returns: \"বার্ষিক রিটার্ন\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"SAMA নিয়ন্ত্রিত\",\n    total_invested: \"মোট বিনিয়োগ\",\n    avg_returns_label: \"গড় রিটার্ন\",\n    properties_funded: \"অর্থায়নকৃত সম্পত্তি\",\n    shariah_certified: \"শরিয়া সার্টিফাইড\",\n    rating_display: \"4.9/5 রেটিং\",\n    sama_licensed: \"SAMA লাইসেন্সপ্রাপ্ত\",\n    \n    // Property Tags\n    vision_2030: \"ভিশন 2030\",\n    shariah_compliant_tag: \"শরিয়া অনুবর্তী\",\n    high_yield: \"উচ্চ লাভ\",\n    prime_location: \"প্রধান অবস্থান\",\n    commercial: \"বাণিজ্যিক\",\n    stable_returns: \"স্থিতিশীল রিটার্ন\",\n    tourism: \"পর্যটন\",\n    luxury: \"বিলাসবহুল\",\n    mega_project: \"মেগা প্রকল্প\"\n  },\n  \n  ml: {\n    // Header & Navigation\n    welcome_back: \"തിരിച്ചുവരവിൽ സ്വാഗതം,\",\n    track_investments: \"സൗദി അറേബ്യയിലെ നിങ്ങളുടെ റിയൽ എസ്റ്റേറ്റ് നിക്ഷേപങ്ങൾ ട്രാക്ക് ചെയ്യുക\",\n    total_portfolio_value: \"മൊത്തം പോർട്ട്ഫോളിയോ മൂല്യം\",\n    \n    // Navigation\n    home: \"ഹോം\",\n    properties: \"സ്വത്തുകൾ\",\n    portfolio: \"പോർട്ട്ഫോളിയോ\",\n    profile: \"പ്രൊഫൈൽ\",\n    chat: \"ചാറ്റ്\",\n    ai_advisor: \"AI ഉപദേശകൻ\",\n    \n    // Dashboard\n    total_value: \"മൊത്തം മൂല്യം\",\n    total_return: \"മൊത്തം റിട്ടേൺ\",\n    since_inception: \"തുടക്കം മുതൽ\",\n    browse_properties: \"സ്വത്തുകൾ ബ്രൗസ് ചെയ്യുക\",\n    view_portfolio: \"പോർട്ട്ഫോളിയോ കാണുക\",\n    \n    // Investments\n    active_investments: \"സജീവ നിക്ഷേപങ്ങൾ\",\n    current_property_investments: \"നിങ്ങളുടെ നിലവിലെ സ്വത്ത് നിക്ഷേപങ്ങൾ\",\n    performance_summary: \"പ്രകടന സംഗ്രഹം\",\n    investment_performance_overview: \"നിങ്ങളുടെ നിക്ഷേപ പ്രകടന അവലോകനം\",\n    \n    // Property Details\n    invested: \"നിക്ഷേപിച്ചത്\",\n    current_value: \"നിലവിലെ മൂല്യം\",\n    return: \"റിട്ടേൺ\",\n    total_invested: \"മൊത്തം നിക്ഷേപിച്ചത്\",\n    roi: \"ROI\",\n    \n    // Performance Labels\n    excellent: \"മികച്ചത്\",\n    good: \"നല്ലത്\",\n    average: \"ശരാശരി\",\n    \n    // Locations\n    riyadh: \"റിയാദ്\",\n    jeddah: \"ജിദ്ദ\",\n    dammam: \"ദമാം\",\n    \n    // Property Types\n    luxury_apartment_complex: \"ലക്ഷറി അപ്പാർട്ട്മെന്റ് കോംപ്ലക്സ്\",\n    retail_shopping_complex: \"റീട്ടെയിൽ ഷോപ്പിംഗ് കോംപ്ലക്സ്\",\n    commercial_office_building: \"വാണിജ്യ ഓഫീസ് കെട്ടിടം\",\n    luxury_villa_property: \"ലക്ഷറി വില്ല സ്വത്ത്\",\n    \n    // Available Properties\n    available_properties: \"ലഭ്യമായ സ്വത്തുകൾ\",\n    new_investment_opportunities: \"പുതിയ നിക്ഷേപ അവസരങ്ങൾ\",\n    min_investment: \"കുറഞ്ഞ നിക്ഷേപം\",\n    expected_return: \"പ്രതീക്ഷിച്ച റിട്ടേൺ\",\n    duration: \"കാലാവധി\",\n    invest_now: \"ഇപ്പോൾ നിക്ഷേപിക്കുക\",\n    learn_more: \"കൂടുതൽ അറിയുക\",\n    \n    // Chat & AI Features\n    live_chat: \"ലൈവ് ചാറ്റ്\",\n    ai_assistant: \"AI സഹായി\",\n    ask_ai: \"AI യോട് ചോദിക്കുക\",\n    chat_with_advisor: \"ഉപദേശകനുമായി ചാറ്റ് ചെയ്യുക\",\n    ai_insights: \"AI ഉൾക്കാഴ്ച\",\n    market_analysis: \"മാർക്കറ്റ് വിശകലനം\",\n    investment_recommendations: \"നിക്ഷേപ ശുപാർശകൾ\",\n    send_message: \"സന്ദേശം അയയ്ക്കുക\",\n    type_message: \"നിങ്ങളുടെ സന്ദേശം ടൈപ്പ് ചെയ്യുക...\",\n    \n    // Saudi-specific\n    saudi_market: \"സൗദി റിയൽ എസ്റ്റേറ്റ് മാർക്കറ്റ്\",\n    vision_2030: \"വിഷൻ 2030 അനുയോജ്യം\",\n    neom_projects: \"നിയോം പ്രോജക്ടുകൾ\",\n    red_sea_developments: \"ചെങ്കടൽ വികസനങ്ങൾ\",\n    shariah_compliant: \"ശരീഅത്ത് അനുസൃതം\",\n    saudi_regulations: \"സൗദി റിയൽ എസ്റ്റേറ്റ് നിയമങ്ങൾ\",\n    \n    // Language Names\n    english: \"English\",\n    arabic: \"العربية\",\n    urdu: \"اردو\",\n    hindi: \"हिंदी\",\n    punjabi: \"ਪੰਜਾਬੀ\",\n    bengali: \"বাংলা\",\n    malayalam: \"മലയാളം\",\n    \n    // Website specific\n    landing_title: \"സൗദി അറേബ്യയുടെ ഭാവിയിൽ നിക്ഷേപിക്കുക\",\n    landing_subtitle: \"വിഷൻ 2030 റിയൽ എസ്റ്റേറ്റ് പ്രോജക്ടുകളിലൂടെ സമ്പത്ത് സൃഷ്ടിക്കുന്ന ആയിരക്കണക്കിന് നിക്ഷേപകരോട് ചേരുക\",\n    get_started: \"ആരംഭിക്കുക\",\n    learn_more_cta: \"കൂടുതൽ അറിയുക\",\n    register_now: \"ഇപ്പോൾ രജിസ്റ്റർ ചെയ്യുക\",\n    login: \"ലോഗിൻ\",\n    about_us: \"ഞങ്ങളെ കുറിച്ച്\",\n    business_model: \"ബിസിനസ് മോഡൽ\",\n    download_app: \"ആപ്പ് ഡൗൺലോഡ് ചെയ്യുക\",\n    how_it_works: \"ഇത് എങ്ങനെ പ്രവർത്തിക്കുന്നു\",\n    why_zaron: \"എന്തുകൊണ്ട് സാരോൺ\",\n    contact_us: \"ഞങ്ങളെ ബന്ധപ്പെടുക\",\n    \n    // Key Crowdfunding Translations (Malayalam)\n    hero_title: \"സൗദി അറേബ്യയുടെ ഭാവിയിൽ നിക്ഷേപിക്കുക\",\n    start_investing_now: \"ഇപ്പോൾ നിക്ഷേപം ആരംഭിക്കുക\",\n    explore_opportunities: \"അവസരങ്ങൾ കാണുക\",\n    why_invest_title: \"റിയൽ എസ്റ്റേറ്റ് ക്രൗഡ്ഫണ്ടിംഗ് എന്തുകൊണ്ട്?\",\n    trusted_by_thousands: \"ആയിരക്കണക്കിന് നിക്ഷേപകരുടെ വിശ്വാസം\",\n    security_compliance: \"സുരക്ഷയും അനുവർത്തനവും\",\n    fractional_ownership: \"ഭാഗിക ഉടമസ്ഥത\",\n    superior_returns: \"മികച്ച റിട്ടേൺ\",\n    annual_returns: \"വാർഷിക റിട്ടേൺ\",\n    \n    // Additional Translation Keys\n    sama_regulated_title: \"SAMA നിയന്ത്രിത\",\n    avg_returns_label: \"ശരാശരി റിട്ടേൺ\",\n    properties_funded: \"ധനസഹായമുള്ള വസ്തുക്കൾ\",\n    shariah_certified: \"ശരീഅത്ത് സാക്ഷ്യപ്പെടുത്തിയത്\",\n    rating_display: \"4.9/5 റേറ്റിംഗ്\",\n    sama_licensed: \"SAMA ലൈസൻസുള്ള\",\n    \n    // Property Tags\n    shariah_compliant_tag: \"ശരീഅത്ത് അനുസൃത\",\n    high_yield: \"ഉയർന്ന ലാഭം\",\n    prime_location: \"പ്രധാന സ്ഥാനം\",\n    commercial: \"വാണിജ്യിക\",\n    stable_returns: \"സ്ഥിരമായ റിട്ടേൺ\",\n    tourism: \"ടൂറിസം\",\n    luxury: \"ആഡംബര\",\n    mega_project: \"മെഗാ പ്രോജക്റ്റ്\"\n  }\n}\n\n// Note: useTranslation hook is in /hooks/use-translation.ts","size_bytes":61911},"client/src/components/ai-insights.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { \n  TrendingUp, \n  Brain, \n  Target, \n  AlertTriangle,\n  Sparkles,\n  ArrowUpRight,\n  BarChart3,\n  Lightbulb,\n  X\n} from \"lucide-react\";\nimport { useTranslation } from \"@/hooks/use-translation\";\nimport { aiInsights, saudiMarketStats } from \"@/lib/saudi-data\";\n\nexport function AIInsights() {\n  const { t } = useTranslation();\n  const [selectedInsight, setSelectedInsight] = useState<any>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const getInsightIcon = (type: string) => {\n    switch (type) {\n      case 'market_analysis': return <BarChart3 className=\"h-4 w-4\" />;\n      case 'investment_recommendation': return <Target className=\"h-4 w-4\" />;\n      case 'risk_assessment': return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'trend_prediction': return <TrendingUp className=\"h-4 w-4\" />;\n      default: return <Lightbulb className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case 'high': return 'text-green-600 bg-green-50 border-green-200';\n      case 'medium': return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n      case 'low': return 'text-blue-600 bg-blue-50 border-blue-200';\n      default: return 'text-gray-600 bg-gray-50 border-gray-200';\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\" data-testid=\"ai-insights-container\">\n      {/* AI Market Overview */}\n      <Card className=\"mobile-card mobile-fade-in-up\">\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <Brain className=\"h-5 w-5 text-primary\" />\n            {t('ai_insights')}\n            <Badge variant=\"secondary\" className=\"ml-auto\">\n              <Sparkles className=\"h-3 w-3 mr-1\" />\n              Real-time\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Saudi Market Stats */}\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div className=\"text-center p-3 bg-gradient-to-br from-green-50 to-green-100 rounded-lg border border-green-200\">\n              <p className=\"text-xs text-green-700 font-medium mb-1\">Market Growth</p>\n              <p className=\"text-lg font-bold text-green-800\">+{saudiMarketStats.yearlyGrowth}%</p>\n            </div>\n            <div className=\"text-center p-3 bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg border border-blue-200\">\n              <p className=\"text-xs text-blue-700 font-medium mb-1\">Vision 2030</p>\n              <p className=\"text-lg font-bold text-blue-800\">{saudiMarketStats.vision2030Projects}</p>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div className=\"text-center p-3 bg-gradient-to-br from-purple-50 to-purple-100 rounded-lg border border-purple-200\">\n              <p className=\"text-xs text-purple-700 font-medium mb-1\">Shariah Compliant</p>\n              <p className=\"text-lg font-bold text-purple-800\">{saudiMarketStats.shariahCompliantRate}%</p>\n            </div>\n            <div className=\"text-center p-3 bg-gradient-to-br from-orange-50 to-orange-100 rounded-lg border border-orange-200\">\n              <p className=\"text-xs text-orange-700 font-medium mb-1\">Foreign Investment</p>\n              <p className=\"text-lg font-bold text-orange-800\">+{saudiMarketStats.foreignInvestmentGrowth}%</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* AI Insights List */}\n      {aiInsights.map((insight, index) => (\n        <Card \n          key={insight.id} \n          className={`mobile-card mobile-fade-in-up animate-delay-${(index + 1) * 100}`}\n          data-testid={`ai-insight-${insight.id}`}\n        >\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-start gap-3 mb-3\">\n              <div className=\"w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                {getInsightIcon(insight.type)}\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  <h3 className=\"font-semibold text-sm\" data-testid={`insight-title-${insight.id}`}>\n                    {insight.title}\n                  </h3>\n                  <Badge className={`text-xs ${getImpactColor(insight.impact)}`}>\n                    {insight.impact.toUpperCase()}\n                  </Badge>\n                </div>\n                <p className=\"text-xs text-muted-foreground mb-2\">\n                  {insight.timestamp.toLocaleDateString()} • AI Confidence: {insight.confidence}%\n                </p>\n              </div>\n            </div>\n\n            <p className=\"text-sm text-foreground mb-3\" data-testid={`insight-content-${insight.id}`}>\n              {insight.content}\n            </p>\n\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-xs\">\n                <span className=\"text-muted-foreground\">AI Confidence</span>\n                <span className=\"font-medium\">{insight.confidence}%</span>\n              </div>\n              <Progress \n                value={insight.confidence} \n                className=\"h-2\" \n                data-testid={`confidence-progress-${insight.id}`}\n              />\n            </div>\n\n            <Dialog open={isDialogOpen && selectedInsight?.id === insight.id} onOpenChange={(open) => {\n              setIsDialogOpen(open);\n              if (!open) setSelectedInsight(null);\n            }}>\n              <DialogTrigger asChild>\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  className=\"w-full mt-3 text-primary hover:bg-primary/10\"\n                  data-testid={`button-insight-details-${insight.id}`}\n                  onClick={() => {\n                    setSelectedInsight(insight);\n                    setIsDialogOpen(true);\n                  }}\n                >\n                  View Detailed Analysis\n                  <ArrowUpRight className=\"h-3 w-3 ml-1\" />\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"sm:max-w-md\" aria-describedby={`insight-dialog-description-${insight.id}`}>\n                <DialogHeader>\n                  <DialogTitle className=\"flex items-center gap-2\">\n                    {getInsightIcon(insight.type)}\n                    {insight.title}\n                    <Badge className={`text-xs ${getImpactColor(insight.impact)}`}>\n                      {insight.impact.toUpperCase()}\n                    </Badge>\n                  </DialogTitle>\n                  <DialogDescription id={`insight-dialog-description-${insight.id}`}>\n                    AI Analysis • {insight.timestamp.toLocaleDateString()} • {insight.confidence}% Confidence\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Analysis Summary</h4>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {insight.content}\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Detailed Insights</h4>\n                    <div className=\"space-y-2\">\n                      <p className=\"text-sm\">\n                        • Market trends indicate a strong growth potential in {insight.type === 'market_analysis' ? 'residential properties' : 'commercial sectors'}\n                      </p>\n                      <p className=\"text-sm\">\n                        • Risk assessment shows {insight.impact === 'high' ? 'favorable' : 'moderate'} investment conditions\n                      </p>\n                      <p className=\"text-sm\">\n                        • Vision 2030 alignment creates additional opportunity multipliers\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">AI Confidence Level</h4>\n                    <Progress value={insight.confidence} className=\"h-3\" />\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Based on {Math.floor(Math.random() * 500 + 100)} data points and market indicators\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-semibold text-sm mb-2\">Recommendations</h4>\n                    <div className=\"space-y-1\">\n                      <p className=\"text-sm\">• Consider diversifying into {insight.type === 'market_analysis' ? 'NEOM' : 'Red Sea'} projects</p>\n                      <p className=\"text-sm\">• Monitor market conditions over the next 30-60 days</p>\n                      <p className=\"text-sm\">• Maintain Shariah-compliant investment strategy</p>\n                    </div>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </CardContent>\n        </Card>\n      ))}\n\n      {/* Quick AI Actions */}\n      <Card className=\"mobile-card mobile-fade-in-up\">\n        <CardContent className=\"p-4\">\n          <h3 className=\"font-semibold text-sm mb-3 flex items-center gap-2\">\n            <Target className=\"h-4 w-4 text-primary\" />\n            {t('ask_ai')}\n          </h3>\n          <div className=\"grid grid-cols-1 gap-2\">\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"justify-start text-xs\"\n              data-testid=\"button-ai-market-analysis\"\n            >\n              <BarChart3 className=\"h-3 w-3 mr-2\" />\n              {t('market_analysis')}\n            </Button>\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              className=\"justify-start text-xs\"\n              data-testid=\"button-ai-recommendations\"\n            >\n              <Lightbulb className=\"h-3 w-3 mr-2\" />\n              {t('investment_recommendations')}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":10607},"client/src/components/mobile-chat.tsx":{"content":"import { useState, useRef, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Send, Bot, User, MessageSquare, Zap } from \"lucide-react\";\nimport { useTranslation } from \"@/hooks/use-translation\";\nimport { chatMessages as initialMessages } from \"@/lib/saudi-data\";\nimport type { ChatMessage } from \"@/lib/saudi-data\";\n\nexport function MobileChat() {\n  const { t } = useTranslation();\n  const [messages, setMessages] = useState<ChatMessage[]>(initialMessages);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n\n    const userMessage: ChatMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: newMessage,\n      timestamp: new Date(),\n      language: 'en',\n      userName: 'You'\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setNewMessage(\"\");\n    setIsTyping(true);\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponses = [\n        \"Based on current market analysis, I recommend diversifying your portfolio across NEOM and Red Sea projects for optimal returns.\",\n        \"The Saudi real estate market is showing strong growth indicators. Would you like me to analyze specific property opportunities?\",\n        \"I can arrange a virtual property tour or connect you with a specialist advisor. What interests you most?\",\n        \"Your investment profile suggests you'd benefit from Vision 2030 aligned projects. Shall we explore these opportunities?\"\n      ];\n\n      const aiMessage: ChatMessage = {\n        id: (Date.now() + 1).toString(),\n        type: 'ai',\n        content: aiResponses[Math.floor(Math.random() * aiResponses.length)],\n        timestamp: new Date(),\n        language: 'en',\n        avatar: '🤖',\n        userName: 'Zaron AI'\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n      setIsTyping(false);\n    }, 2000);\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <Card className=\"mobile-card h-[600px] flex flex-col\" data-testid=\"mobile-chat-container\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center gap-2 text-lg\">\n          <MessageSquare className=\"h-5 w-5 text-primary\" />\n          {t('live_chat')}\n          <Badge variant=\"secondary\" className=\"ml-auto\">\n            <Zap className=\"h-3 w-3 mr-1\" />\n            {t('ai_assistant')}\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"flex-1 flex flex-col p-0\">\n        <ScrollArea className=\"flex-1 px-4\">\n          <div className=\"space-y-4 pb-4\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex gap-3 ${message.type === 'user' ? 'flex-row-reverse' : 'flex-row'}`}\n                data-testid={`chat-message-${message.id}`}\n              >\n                <Avatar className=\"h-8 w-8 flex-shrink-0\">\n                  <AvatarFallback className={`text-xs ${\n                    message.type === 'ai' ? 'bg-primary text-primary-foreground' : \n                    message.type === 'advisor' ? 'bg-green-100 text-green-700' : \n                    'bg-blue-100 text-blue-700'\n                  }`}>\n                    {message.type === 'ai' ? <Bot className=\"h-4 w-4\" /> :\n                     message.type === 'advisor' ? '👩‍💼' : <User className=\"h-4 w-4\" />}\n                  </AvatarFallback>\n                </Avatar>\n                \n                <div className={`flex-1 max-w-[85%] ${message.type === 'user' ? 'text-right' : ''}`}>\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <span className=\"text-xs font-medium text-muted-foreground\">\n                      {message.userName}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n                    </span>\n                  </div>\n                  \n                  <div className={`rounded-lg p-3 text-sm ${\n                    message.type === 'user' \n                      ? 'bg-primary text-primary-foreground ml-auto' \n                      : message.type === 'ai'\n                      ? 'bg-muted/50 border border-primary/20'\n                      : 'bg-green-50 border border-green-200'\n                  }`}>\n                    {message.content}\n                  </div>\n                </div>\n              </div>\n            ))}\n            \n            {isTyping && (\n              <div className=\"flex gap-3\" data-testid=\"typing-indicator\">\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                    <Bot className=\"h-4 w-4\" />\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"bg-muted/50 rounded-lg p-3 border border-primary/20\">\n                  <div className=\"flex space-x-1\">\n                    <div className=\"w-2 h-2 bg-primary/60 rounded-full animate-bounce\"></div>\n                    <div className=\"w-2 h-2 bg-primary/60 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                    <div className=\"w-2 h-2 bg-primary/60 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                  </div>\n                </div>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n        </ScrollArea>\n        \n        <div className=\"p-4 border-t bg-background/95 backdrop-blur-sm\">\n          <div className=\"flex gap-2\">\n            <Input\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder={t('type_message')}\n              className=\"flex-1\"\n              data-testid=\"input-chat-message\"\n            />\n            <Button \n              onClick={handleSendMessage}\n              size=\"icon\"\n              disabled={!newMessage.trim()}\n              data-testid=\"button-send-message\"\n            >\n              <Send className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":6935},"client/src/lib/saudi-data.ts":{"content":"// Saudi Arabia-focused real estate data with AI features and chat functionality\n\nexport interface SaudiProperty {\n  id: string;\n  name: string;\n  nameAr: string;\n  nameHi: string;\n  location: string;\n  locationAr: string;\n  locationHi: string;\n  city: 'riyadh' | 'jeddah' | 'dammam' | 'neom' | 'red_sea';\n  type: string;\n  price: number;\n  minInvestment: number;\n  expectedReturn: number;\n  duration: string;\n  performance: 'excellent' | 'good' | 'average';\n  vision2030Aligned: boolean;\n  shariahCompliant: boolean;\n  aiScore: number;\n  marketTrend: 'rising' | 'stable' | 'declining';\n  image: string;\n  description: string;\n  descriptionAr: string;\n  descriptionHi: string;\n  status: 'new' | 'selling' | 'sold_out';\n  totalUnits: number;\n  soldUnits: number;\n}\n\nexport interface ChatMessage {\n  id: string;\n  type: 'user' | 'ai' | 'advisor';\n  content: string;\n  timestamp: Date;\n  language: 'en' | 'ar' | 'hi';\n  avatar?: string;\n  userName?: string;\n  isTyping?: boolean;\n}\n\nexport interface AIInsight {\n  id: string;\n  title: string;\n  titleAr: string;\n  titleHi: string;\n  content: string;\n  contentAr: string;\n  contentHi: string;\n  type: 'market_analysis' | 'investment_recommendation' | 'risk_assessment' | 'trend_prediction';\n  confidence: number;\n  timestamp: Date;\n  impact: 'high' | 'medium' | 'low';\n}\n\nexport const saudiProperties: SaudiProperty[] = [\n  {\n    id: '1',\n    name: 'NEOM The Line Residential Phase 1',\n    nameAr: 'نيوم ذا لاين السكني المرحلة الأولى',\n    nameHi: 'NEOM द लाइन आवासीय चरण 1',\n    location: 'NEOM, Tabuk Province',\n    locationAr: 'نيوم، منطقة تبوك',\n    locationHi: 'NEOM, तबूक प्रांत',\n    city: 'neom',\n    type: 'Futuristic Smart City Development',\n    price: 15000000,\n    minInvestment: 500000,\n    expectedReturn: 25,\n    duration: '10 years',\n    performance: 'excellent',\n    vision2030Aligned: true,\n    shariahCompliant: true,\n    aiScore: 94,\n    marketTrend: 'rising',\n    image: '/api/placeholder/400/300',\n    description: 'Revolutionary linear city development in NEOM with advanced AI integration and sustainable living.',\n    descriptionAr: 'تطوير مدينة خطية ثورية في نيوم مع تكامل الذكاء الاصطناعي المتقدم والمعيشة المستدامة.',\n    descriptionHi: 'उन्नत AI एकीकरण और टिकाऊ जीवन के साथ NEOM में क्रांतिकारी रैखिक शहर विकास।',\n    status: 'new',\n    totalUnits: 500,\n    soldUnits: 126\n  },\n  {\n    id: '2',\n    name: 'Red Sea Global Marina Resort',\n    nameAr: 'منتجع مارينا البحر الأحمر العالمي',\n    nameHi: 'रेड सी ग्लोबल मरीना रिज़ॉर्ट',\n    location: 'Red Sea Project, Western Coast',\n    locationAr: 'مشروع البحر الأحمر، الساحل الغربي',\n    locationHi: 'रेड सी प्रोजेक्ट, पश्चिमी तट',\n    city: 'red_sea',\n    type: 'Luxury Resort & Marina',\n    price: 8500000,\n    minInvestment: 250000,\n    expectedReturn: 18,\n    duration: '8 years',\n    performance: 'excellent',\n    vision2030Aligned: true,\n    shariahCompliant: true,\n    aiScore: 91,\n    marketTrend: 'rising',\n    image: '/api/placeholder/400/300',\n    description: 'Premium beachfront resort with world-class marina facilities and sustainable tourism focus.',\n    descriptionAr: 'منتجع فاخر على الواجهة البحرية مع مرافق مارينا عالمية المستوى وتركيز على السياحة المستدامة.',\n    descriptionHi: 'विश्व स्तरीय मरीना सुविधाओं और टिकाऊ पर्यटन फोकस के साथ प्रीमियम बीचफ्रंट रिज़ॉर्ट।',\n    status: 'selling',\n    totalUnits: 300,\n    soldUnits: 185\n  },\n  {\n    id: '3',\n    name: 'Riyadh Downtown Financial District',\n    nameAr: 'المنطقة المالية وسط الرياض',\n    nameHi: 'रियाद डाउनटाउन वित्तीय जिला',\n    location: 'King Abdullah Financial District, Riyadh',\n    locationAr: 'حي الملك عبدالله المالي، الرياض',\n    locationHi: 'किंग अब्दुल्लाह वित्तीय जिला, रियाद',\n    city: 'riyadh',\n    type: 'Commercial Office Complex',\n    price: 12000000,\n    minInvestment: 400000,\n    expectedReturn: 22,\n    duration: '7 years',\n    performance: 'excellent',\n    vision2030Aligned: true,\n    shariahCompliant: true,\n    aiScore: 89,\n    marketTrend: 'rising',\n    image: '/api/placeholder/400/300',\n    description: 'State-of-the-art office towers in the heart of Saudi Arabia\\'s financial capital.',\n    descriptionAr: 'أبراج مكاتب متطورة في قلب العاصمة المالية للمملكة العربية السعودية.',\n    descriptionHi: 'सऊदी अरब की वित्तीय राजधानी के केंद्र में अत्याधुनिक कार्यालय टावर।',\n    status: 'selling',\n    totalUnits: 150,\n    soldUnits: 89\n  },\n  {\n    id: '4',\n    name: 'Jeddah Corniche Luxury Residences',\n    nameAr: 'مساكن كورنيش جدة الفاخرة',\n    nameHi: 'जेद्दाह कॉर्निश लक्जरी निवास',\n    location: 'Corniche Road, Jeddah',\n    locationAr: 'طريق الكورنيش، جدة',\n    locationHi: 'कॉर्निश रोड, जेद्दाह',\n    city: 'jeddah',\n    type: 'Waterfront Luxury Apartments',\n    price: 6800000,\n    minInvestment: 200000,\n    expectedReturn: 16,\n    duration: '6 years',\n    performance: 'good',\n    vision2030Aligned: true,\n    shariahCompliant: true,\n    aiScore: 85,\n    marketTrend: 'stable',\n    image: '/api/placeholder/400/300',\n    description: 'Premium seafront apartments with panoramic Red Sea views and modern amenities.',\n    descriptionAr: 'شقق فاخرة على الواجهة البحرية مع إطلالات بانورامية على البحر الأحمر ووسائل الراحة الحديثة.',\n    descriptionHi: 'पैनोरामिक रेड सी दृश्यों और आधुनिक सुविधाओं के साथ प्रीमियम समुद्री तट अपार्टमेंट।',\n    status: 'selling',\n    totalUnits: 200,\n    soldUnits: 78\n  },\n  {\n    id: '5',\n    name: 'Eastern Province Industrial Hub',\n    nameAr: 'المركز الصناعي للمنطقة الشرقية',\n    nameHi: 'पूर्वी प्रांत औद्योगिक हब',\n    location: 'Dammam Industrial City',\n    locationAr: 'مدينة الدمام الصناعية',\n    locationHi: 'दम्माम औद्योगिक शहर',\n    city: 'dammam',\n    type: 'Industrial & Logistics Complex',\n    price: 9500000,\n    minInvestment: 300000,\n    expectedReturn: 20,\n    duration: '9 years',\n    performance: 'excellent',\n    vision2030Aligned: true,\n    shariahCompliant: true,\n    aiScore: 87,\n    marketTrend: 'rising',\n    image: '/api/placeholder/400/300',\n    description: 'Strategic industrial development supporting Saudi Arabia\\'s manufacturing and export goals.',\n    descriptionAr: 'تطوير صناعي استراتيجي يدعم أهداف التصنيع والتصدير في المملكة العربية السعودية.',\n    descriptionHi: 'सऊदी अरब के निर्माण और निर्यात लक्ष्यों का समर्थन करने वाला रणनीतिक औद्योगिक विकास।',\n    status: 'new',\n    totalUnits: 100,\n    soldUnits: 23\n  }\n];\n\nexport const chatMessages: ChatMessage[] = [\n  {\n    id: '1',\n    type: 'ai',\n    content: 'Welcome to Zaron! I\\'m your AI investment advisor. How can I help you explore Saudi Arabia\\'s real estate opportunities today?',\n    timestamp: new Date(Date.now() - 120000),\n    language: 'en',\n    avatar: '🤖',\n    userName: 'Zaron AI'\n  },\n  {\n    id: '2',\n    type: 'user',\n    content: 'I\\'m interested in Vision 2030 aligned projects. What would you recommend?',\n    timestamp: new Date(Date.now() - 90000),\n    language: 'en',\n    userName: 'Ahmed Al-Rashid'\n  },\n  {\n    id: '3',\n    type: 'ai',\n    content: 'Excellent choice! I recommend NEOM The Line (AI Score: 94) and Red Sea Global Marina (AI Score: 91). Both are Vision 2030 flagship projects with 25% and 18% expected returns respectively. Would you like detailed analysis?',\n    timestamp: new Date(Date.now() - 60000),\n    language: 'en',\n    avatar: '🤖',\n    userName: 'Zaron AI'\n  },\n  {\n    id: '4',\n    type: 'advisor',\n    content: 'I\\'m Fatima, your personal investment advisor. I can arrange a virtual tour of these properties and discuss financing options that align with your portfolio goals.',\n    timestamp: new Date(Date.now() - 30000),\n    language: 'en',\n    avatar: '👩‍💼',\n    userName: 'Fatima Al-Zahra'\n  }\n];\n\nexport const aiInsights: AIInsight[] = [\n  {\n    id: '1',\n    title: 'NEOM Market Surge Predicted',\n    titleAr: 'توقع ارتفاع سوق نيوم',\n    titleHi: 'NEOM बाजार वृद्धि की भविष्यवाणी',\n    content: 'AI analysis indicates 35% growth potential in NEOM properties over the next 18 months due to infrastructure completion and international partnerships.',\n    contentAr: 'يشير تحليل الذكاء الاصطناعي إلى إمكانية نمو بنسبة 35% في عقارات نيوم خلال الـ 18 شهرًا القادمة بسبب اكتمال البنية التحتية والشراكات الدولية.',\n    contentHi: 'AI विश्लेषण बुनियादी ढांचे की पूर्णता और अंतर्राष्ट्रीय साझेदारी के कारण अगले 18 महीनों में NEOM संपत्तियों में 35% वृद्धि की संभावना का संकेत देता है।',\n    type: 'trend_prediction',\n    confidence: 94,\n    timestamp: new Date(Date.now() - 3600000),\n    impact: 'high'\n  },\n  {\n    id: '2',\n    title: 'Red Sea Tourism Boom Expected',\n    titleAr: 'توقع ازدهار سياحة البحر الأحمر',\n    titleHi: 'रेड सी पर्यटन बूम की उम्मीद',\n    content: 'Machine learning models predict 40% increase in tourism revenue by 2026, making Red Sea properties highly attractive for investment.',\n    contentAr: 'تتنبأ نماذج التعلم الآلي بزيادة بنسبة 40% في إيرادات السياحة بحلول عام 2026، مما يجعل عقارات البحر الأحمر جذابة للغاية للاستثمار.',\n    contentHi: 'मशीन लर्निंग मॉडल 2026 तक पर्यटन राजस्व में 40% वृद्धि की भविष्यवाणी करते हैं, जिससे रेड सी संपत्तियां निवेश के लिए अत्यधिक आकर्षक हो जाती हैं।',\n    type: 'market_analysis',\n    confidence: 91,\n    timestamp: new Date(Date.now() - 7200000),\n    impact: 'high'\n  },\n  {\n    id: '3',\n    title: 'Optimal Portfolio Diversification',\n    titleAr: 'التنويع الأمثل للمحفظة',\n    titleHi: 'इष्टतम पोर्टफोलियो विविधीकरण',\n    content: 'Based on your risk profile, I recommend 40% NEOM, 30% Red Sea, and 30% Riyadh Financial District for maximum returns with balanced risk.',\n    contentAr: 'بناءً على ملف المخاطر الخاص بك، أوصي بـ 40% نيوم و30% البحر الأحمر و30% المنطقة المالية بالرياض للحصول على أقصى عوائد مع مخاطر متوازنة.',\n    contentHi: 'आपकी जोखिम प्रोफ़ाइल के आधार पर, मैं संतुलित जोखिम के साथ अधिकतम रिटर्न के लिए 40% NEOM, 30% रेड सी, और 30% रियाद वित्तीय जिले की सिफारिश करता हूं।',\n    type: 'investment_recommendation',\n    confidence: 89,\n    timestamp: new Date(Date.now() - 10800000),\n    impact: 'medium'\n  }\n];\n\nexport const saudiCities = [\n  { id: 'riyadh', name: 'Riyadh', nameAr: 'الرياض', nameHi: 'रियाद', growth: '+12%' },\n  { id: 'jeddah', name: 'Jeddah', nameAr: 'جدة', nameHi: 'जेद्दाह', growth: '+8%' },\n  { id: 'dammam', name: 'Dammam', nameAr: 'الدمام', nameHi: 'दम्माम', growth: '+15%' },\n  { id: 'neom', name: 'NEOM', nameAr: 'نيوم', nameHi: 'NEOM', growth: '+45%' },\n  { id: 'red_sea', name: 'Red Sea', nameAr: 'البحر الأحمر', nameHi: 'रेड सी', growth: '+38%' }\n];\n\nexport const saudiMarketStats = {\n  totalMarketValue: 2850000000000, // SAR 2.85 Trillion\n  yearlyGrowth: 18.5,\n  vision2030Projects: 156,\n  shariahCompliantRate: 98.7,\n  foreignInvestmentGrowth: 34.2,\n  digitalTransformationScore: 87\n};","size_bytes":13511},"client/src/pages/mobile/ai-advisor.tsx":{"content":"import { useState, useEffect, useRef } from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { \n  Brain, \n  Sparkles, \n  Target, \n  TrendingUp, \n  BarChart3,\n  Send,\n  Mic,\n  Bot,\n  User,\n  Zap,\n  Crown,\n  Star,\n  Globe,\n  Shield,\n  DollarSign,\n  Calendar,\n  ChevronRight,\n  MessageSquare,\n  ThumbsUp,\n  ThumbsDown,\n  Copy,\n  Share2,\n  Lightbulb,\n  TrendingDown,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Eye\n} from \"lucide-react\"\n\ninterface Message {\n  id: string\n  type: \"user\" | \"ai\"\n  content: string\n  timestamp: Date\n  category?: string\n  confidence?: number\n  sources?: string[]\n}\n\ninterface AIRecommendation {\n  id: string\n  type: \"buy\" | \"hold\" | \"sell\" | \"watch\"\n  property: string\n  propertyAr: string\n  propertyHi: string\n  reason: string\n  confidence: number\n  expectedROI: number\n  riskLevel: \"low\" | \"medium\" | \"high\"\n  timeframe: string\n  urgency: \"low\" | \"medium\" | \"high\"\n}\n\ninterface MarketInsight {\n  id: string\n  title: string\n  titleAr: string\n  titleHi: string\n  insight: string\n  insightAr: string\n  insightHi: string\n  impact: \"positive\" | \"negative\" | \"neutral\"\n  confidence: number\n  category: string\n  timestamp: Date\n}\n\nconst mockRecommendations: AIRecommendation[] = [\n  {\n    id: \"1\",\n    type: \"buy\",\n    property: \"NEOM The Line Phase 2\",\n    propertyAr: \"نيوم ذا لاين المرحلة الثانية\",\n    propertyHi: \"नियोम द लाइन फेज 2\",\n    reason: \"AI analysis shows 87% probability of 25%+ returns based on infrastructure progress and international partnerships\",\n    confidence: 87,\n    expectedROI: 25.3,\n    riskLevel: \"medium\",\n    timeframe: \"18-24 months\",\n    urgency: \"high\"\n  },\n  {\n    id: \"2\",\n    type: \"watch\",\n    property: \"Red Sea Marina Extension\",\n    propertyAr: \"توسعة مارينا البحر الأحمر\",\n    propertyHi: \"रेड सी मरीना एक्सटेंशन\",\n    reason: \"Monitoring environmental clearances and tourism sector recovery metrics before investment recommendation\",\n    confidence: 72,\n    expectedROI: 18.7,\n    riskLevel: \"low\",\n    timeframe: \"6-12 months\",\n    urgency: \"medium\"\n  },\n  {\n    id: \"3\",\n    type: \"buy\",\n    property: \"Qiddiya Sports City\",\n    propertyAr: \"مدينة القدية الرياضية\",\n    propertyHi: \"किद्दिया स्पोर्ट्स सिटी\",\n    reason: \"2030 World Cup hosting and entertainment sector growth align with Vision 2030 objectives\",\n    confidence: 91,\n    expectedROI: 22.1,\n    riskLevel: \"medium\",\n    timeframe: \"24-36 months\",\n    urgency: \"high\"\n  }\n]\n\nconst mockInsights: MarketInsight[] = [\n  {\n    id: \"1\",\n    title: \"NEOM Infrastructure Milestone\",\n    titleAr: \"إنجاز البنية التحتية لنيوم\",\n    titleHi: \"नियोम इंफ्रास्ट्रक्चर माइलस्टोन\",\n    insight: \"First residential units in The Line project show 40% faster construction than projected timeline\",\n    insightAr: \"الوحدات السكنية الأولى في مشروع ذا لاين تظهر بناءً أسرع بنسبة 40% من الجدول الزمني المتوقع\",\n    insightHi: \"द लाइन प्रोजेक्ट में पहली आवासीय इकाइयां अनुमानित समयसीमा से 40% तेज निर्माण दिखाती हैं\",\n    impact: \"positive\",\n    confidence: 94,\n    category: \"Infrastructure\",\n    timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000) // 2 hours ago\n  },\n  {\n    id: \"2\",\n    title: \"Foreign Investment Surge\",\n    titleAr: \"طفرة الاستثمار الأجنبي\",\n    titleHi: \"विदेशी निवेश में उछाल\",\n    insight: \"Q4 foreign direct investment in Saudi real estate increased by 156% compared to previous year\",\n    insightAr: \"الاستثمار الأجنبي المباشر في العقارات السعودية في الربع الرابع زاد بنسبة 156% مقارنة بالعام السابق\",\n    insightHi: \"सऊदी रियल एस्टेट में Q4 प्रत्यक्ष विदेशी निवेश पिछले वर्ष की तुलना में 156% बढ़ा\",\n    impact: \"positive\",\n    confidence: 89,\n    category: \"Investment\",\n    timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000) // 4 hours ago\n  },\n  {\n    id: \"3\",\n    title: \"Tourism Sector Recovery\",\n    titleAr: \"تعافي قطاع السياحة\",\n    titleHi: \"पर्यटन क्षेत्र की रिकवरी\",\n    insight: \"Saudi tourism reached 130% of pre-2019 levels, boosting hospitality real estate demand\",\n    insightAr: \"وصلت السياحة السعودية إلى 130% من مستويات ما قبل 2019، مما عزز الطلب على العقارات الضيافة\",\n    insightHi: \"सऊदी पर्यटन 2019 से पहले के स्तर के 130% तक पहुंच गया, जिससे आतिथ्य रियल एस्टेट की मांग बढ़ी\",\n    impact: \"positive\",\n    confidence: 82,\n    category: \"Tourism\",\n    timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000) // 6 hours ago\n  }\n]\n\nconst quickPrompts = [\n  \"Analyze my portfolio risk\",\n  \"Best Vision 2030 investments?\",\n  \"NEOM vs Red Sea comparison\",\n  \"Market outlook for 2025\",\n  \"Shariah-compliant opportunities\",\n  \"High-yield recommendations\"\n]\n\nexport default function MobileAIAdvisor() {\n  const { t, language } = useTranslation()\n  const { toast } = useToast()\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  \n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: \"1\",\n      type: \"ai\",\n      content: \"Welcome! I'm your AI Investment Advisor. I analyze Vision 2030 projects, market trends, and Shariah-compliant opportunities. How can I help you today?\",\n      timestamp: new Date(),\n      confidence: 100\n    }\n  ])\n  const [inputMessage, setInputMessage] = useState(\"\")\n  const [isTyping, setIsTyping] = useState(false)\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"all\")\n\n  const categories = [\"all\", \"portfolio\", \"market\", \"recommendations\", \"risks\", \"opportunities\"]\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }, [messages])\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim()) return\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      type: \"user\",\n      content: inputMessage.trim(),\n      timestamp: new Date()\n    }\n\n    setMessages(prev => [...prev, userMessage])\n    setInputMessage(\"\")\n    setIsTyping(true)\n\n    // Simulate AI response\n    setTimeout(() => {\n      const aiResponse = generateAIResponse(inputMessage)\n      setMessages(prev => [...prev, aiResponse])\n      setIsTyping(false)\n    }, 1500 + Math.random() * 1000) // 1.5-2.5 seconds\n  }\n\n  const generateAIResponse = (userInput: string): Message => {\n    const input = userInput.toLowerCase()\n    \n    let response = \"\"\n    let category = \"general\"\n    let confidence = Math.floor(85 + Math.random() * 15) // 85-100%\n\n    if (input.includes(\"portfolio\") || input.includes(\"risk\")) {\n      response = \"Based on your current portfolio analysis, you have a well-diversified mix of Vision 2030 projects. Your NEOM investments show strong growth potential (87% confidence), while your Red Sea holdings provide stability. I recommend rebalancing towards Qiddiya Entertainment City for optimal risk-return ratio.\"\n      category = \"portfolio\"\n    } else if (input.includes(\"neom\")) {\n      response = \"NEOM presents exceptional opportunities with The Line project showing 40% faster construction progress. Current AI projections indicate 25-30% ROI potential over 18-24 months. Infrastructure milestones are being met ahead of schedule, making this a strong BUY recommendation with medium risk profile.\"\n      category = \"investment\"\n    } else if (input.includes(\"market\") || input.includes(\"outlook\")) {\n      response = \"Saudi real estate market shows robust fundamentals: Foreign investment up 156% YoY, tourism at 130% of pre-2019 levels, and Vision 2030 projects 67% complete. Q1 2025 forecasts suggest 18-22% growth in premium residential and 15-20% in commercial sectors.\"\n      category = \"market\"\n    } else if (input.includes(\"shariah\") || input.includes(\"halal\")) {\n      response = \"All recommended properties are Shariah-compliant with certified Islamic financing structures. NEOM, Red Sea, and Qiddiya projects operate under Islamic banking principles with no interest-based transactions. Expected returns are from asset appreciation and rental yields only.\"\n      category = \"shariah\"\n    } else if (input.includes(\"red sea\")) {\n      response = \"Red Sea Global offers luxury hospitality investments with strong environmental credentials. Current phase shows 22% ROI potential with low risk profile. Coral reef restoration and renewable energy initiatives attract premium international tourists, supporting long-term value appreciation.\"\n      category = \"investment\"\n    } else {\n      response = \"I can help you with portfolio analysis, market insights, investment recommendations, and risk assessments. What specific aspect of Saudi real estate investments would you like to explore? I have real-time data on all Vision 2030 projects.\"\n      category = \"general\"\n    }\n\n    return {\n      id: Date.now().toString(),\n      type: \"ai\",\n      content: response,\n      timestamp: new Date(),\n      category,\n      confidence,\n      sources: [\"Vision 2030 Database\", \"Real Estate Analytics\", \"Market Intelligence\"]\n    }\n  }\n\n  const handleQuickPrompt = (prompt: string) => {\n    setInputMessage(prompt)\n  }\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString(language === 'ar' ? 'ar-SA' : language === 'hi' ? 'hi-IN' : 'en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  const getInsightTitle = (insight: MarketInsight) => {\n    if (language === 'ar') return insight.titleAr\n    if (language === 'hi') return insight.titleHi\n    return insight.title\n  }\n\n  const getInsightContent = (insight: MarketInsight) => {\n    if (language === 'ar') return insight.insightAr\n    if (language === 'hi') return insight.insightHi\n    return insight.insight\n  }\n\n  const getPropertyName = (rec: AIRecommendation) => {\n    if (language === 'ar') return rec.propertyAr\n    if (language === 'hi') return rec.propertyHi\n    return rec.property\n  }\n\n  const getRecommendationIcon = (type: string) => {\n    switch (type) {\n      case \"buy\": return <TrendingUp className=\"w-4 h-4 text-green-600\" />\n      case \"sell\": return <TrendingDown className=\"w-4 h-4 text-red-600\" />\n      case \"hold\": return <Shield className=\"w-4 h-4 text-blue-600\" />\n      case \"watch\": return <Eye className=\"w-4 h-4 text-orange-600\" />\n      default: return <BarChart3 className=\"w-4 h-4 text-gray-600\" />\n    }\n  }\n\n  const getRecommendationColor = (type: string) => {\n    switch (type) {\n      case \"buy\": return \"from-green-500 to-emerald-500\"\n      case \"sell\": return \"from-red-500 to-rose-500\"\n      case \"hold\": return \"from-blue-500 to-cyan-500\"\n      case \"watch\": return \"from-orange-500 to-amber-500\"\n      default: return \"from-gray-500 to-slate-500\"\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background/95 to-primary/5 relative overflow-hidden\">\n      {/* Background Effects */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute top-16 left-6 w-72 h-72 bg-gradient-to-br from-purple-500/10 to-transparent rounded-full blur-3xl animate-pulse opacity-60\" />\n        <div className=\"absolute bottom-32 right-8 w-80 h-80 bg-gradient-to-tl from-pink-500/10 to-transparent rounded-full blur-3xl animate-pulse opacity-40\" />\n      </div>\n\n      <div className=\"relative z-10 flex flex-col h-screen\">\n        {/* Header */}\n        <motion.div \n          className=\"p-6 pb-4\"\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <Card className=\"bg-gradient-to-br from-purple-500 via-violet-600 to-pink-500 text-white border-0 shadow-2xl overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-white/20 via-white/10 to-transparent\" />\n            <div className=\"absolute inset-0\">\n              <div className=\"absolute top-4 right-4 w-24 h-24 bg-white/10 rounded-full blur-2xl animate-pulse\" />\n              <div className=\"absolute bottom-4 left-4 w-16 h-16 bg-white/10 rounded-full blur-xl animate-pulse\" />\n            </div>\n            \n            <CardContent className=\"p-6 relative z-10\">\n              <div className=\"flex items-center gap-4 mb-4\">\n                <div className=\"w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center backdrop-blur-xl border border-white/30 shadow-lg\">\n                  <Brain className=\"w-8 h-8 text-white\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h1 className=\"text-2xl font-bold\">{t(\"ai_advisor\")}</h1>\n                  <p className=\"text-white/80\">Powered by GPT-5 & Vision 2030 Data</p>\n                </div>\n                <div className=\"text-right\">\n                  <Badge className=\"bg-white/20 text-white border-white/30 backdrop-blur-xl\">\n                    <Sparkles className=\"w-3 h-3 mr-1\" />\n                    Live\n                  </Badge>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-3 gap-3\">\n                <div className=\"text-center p-3 bg-white/15 rounded-xl backdrop-blur-xl border border-white/20\">\n                  <p className=\"text-xs text-white/70 mb-1\">AI Accuracy</p>\n                  <p className=\"text-lg font-bold\">94%</p>\n                </div>\n                <div className=\"text-center p-3 bg-white/15 rounded-xl backdrop-blur-xl border border-white/20\">\n                  <p className=\"text-xs text-white/70 mb-1\">Predictions</p>\n                  <p className=\"text-lg font-bold\">1,247</p>\n                </div>\n                <div className=\"text-center p-3 bg-white/15 rounded-xl backdrop-blur-xl border border-white/20\">\n                  <p className=\"text-xs text-white/70 mb-1\">Success Rate</p>\n                  <p className=\"text-lg font-bold\">89%</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Quick Insights */}\n        <motion.div \n          className=\"px-6 pb-4\"\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.6, delay: 0.1 }}\n        >\n          <h3 className=\"text-lg font-semibold mb-3 flex items-center gap-2\">\n            <Lightbulb className=\"w-5 h-5 text-primary\" />\n            Latest Market Insights\n          </h3>\n          <div className=\"space-y-3 max-h-48 overflow-y-auto\">\n            {mockInsights.map((insight, index) => (\n              <motion.div\n                key={insight.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5, delay: 0.2 + index * 0.1 }}\n              >\n                <Card className=\"bg-card/50 backdrop-blur-sm border-border/50 hover:shadow-lg transition-all duration-300\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-start gap-3\">\n                      <div className={`w-10 h-10 rounded-xl flex items-center justify-center ${\n                        insight.impact === 'positive' ? 'bg-green-100' : \n                        insight.impact === 'negative' ? 'bg-red-100' : 'bg-blue-100'\n                      }`}>\n                        {insight.impact === 'positive' ? \n                          <TrendingUp className=\"w-5 h-5 text-green-600\" /> :\n                          insight.impact === 'negative' ?\n                          <TrendingDown className=\"w-5 h-5 text-red-600\" /> :\n                          <BarChart3 className=\"w-5 h-5 text-blue-600\" />\n                        }\n                      </div>\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-semibold text-sm mb-1\">{getInsightTitle(insight)}</h4>\n                        <p className=\"text-xs text-muted-foreground leading-relaxed\">\n                          {getInsightContent(insight)}\n                        </p>\n                        <div className=\"flex items-center justify-between mt-2\">\n                          <Badge variant=\"secondary\" className=\"text-xs\">\n                            {insight.confidence}% confidence\n                          </Badge>\n                          <span className=\"text-xs text-muted-foreground\">\n                            {formatTime(insight.timestamp)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* AI Recommendations */}\n        <motion.div \n          className=\"px-6 pb-4\"\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <h3 className=\"text-lg font-semibold mb-3 flex items-center gap-2\">\n            <Target className=\"w-5 h-5 text-primary\" />\n            AI Recommendations\n          </h3>\n          <div className=\"space-y-3 max-h-64 overflow-y-auto\">\n            {mockRecommendations.map((rec, index) => (\n              <motion.div\n                key={rec.id}\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5, delay: 0.3 + index * 0.1 }}\n              >\n                <Card className=\"bg-card/50 backdrop-blur-sm border-border/50 hover:shadow-lg transition-all duration-300\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-start gap-3\">\n                      <div className={`w-10 h-10 bg-gradient-to-r ${getRecommendationColor(rec.type)} rounded-xl flex items-center justify-center shadow-lg`}>\n                        {getRecommendationIcon(rec.type)}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-start justify-between mb-2\">\n                          <h4 className=\"font-semibold text-sm\">{getPropertyName(rec)}</h4>\n                          <Badge \n                            className={`text-xs uppercase font-bold ${\n                              rec.type === 'buy' ? 'bg-green-100 text-green-700 border-green-300' :\n                              rec.type === 'sell' ? 'bg-red-100 text-red-700 border-red-300' :\n                              rec.type === 'hold' ? 'bg-blue-100 text-blue-700 border-blue-300' :\n                              'bg-orange-100 text-orange-700 border-orange-300'\n                            }`}\n                          >\n                            {rec.type}\n                          </Badge>\n                        </div>\n                        <p className=\"text-xs text-muted-foreground mb-3 leading-relaxed\">\n                          {rec.reason}\n                        </p>\n                        <div className=\"grid grid-cols-2 gap-3\">\n                          <div>\n                            <p className=\"text-xs text-muted-foreground\">Expected ROI</p>\n                            <p className=\"text-sm font-semibold text-green-600\">+{rec.expectedROI}%</p>\n                          </div>\n                          <div>\n                            <p className=\"text-xs text-muted-foreground\">Confidence</p>\n                            <p className=\"text-sm font-semibold\">{rec.confidence}%</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Chat Interface */}\n        <motion.div \n          className=\"flex-1 flex flex-col px-6 pb-4\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.3 }}\n        >\n          <h3 className=\"text-lg font-semibold mb-3 flex items-center gap-2\">\n            <MessageSquare className=\"w-5 h-5 text-primary\" />\n            Chat with AI\n          </h3>\n          \n          {/* Quick Prompts */}\n          <div className=\"mb-4\">\n            <div className=\"flex gap-2 overflow-x-auto pb-2\">\n              {quickPrompts.map((prompt) => (\n                <Button\n                  key={prompt}\n                  size=\"sm\"\n                  variant=\"outline\"\n                  onClick={() => handleQuickPrompt(prompt)}\n                  className=\"min-w-fit whitespace-nowrap bg-card/50 backdrop-blur-sm text-xs\"\n                  data-testid={`button-quick-prompt-${prompt.toLowerCase().replace(/ /g, '-')}`}\n                >\n                  {prompt}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto mb-4 space-y-4 bg-muted/20 rounded-2xl p-4 backdrop-blur-sm\">\n            <AnimatePresence>\n              {messages.map((message) => (\n                <motion.div\n                  key={message.id}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  transition={{ duration: 0.3 }}\n                  className={`flex gap-3 ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                >\n                  {message.type === 'ai' && (\n                    <Avatar className=\"w-8 h-8 border-2 border-primary/20\">\n                      <AvatarFallback className=\"bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs\">\n                        <Bot className=\"w-4 h-4\" />\n                      </AvatarFallback>\n                    </Avatar>\n                  )}\n                  \n                  <div className={`max-w-[85%] ${message.type === 'user' ? 'order-2' : ''}`}>\n                    <div className={`rounded-2xl p-4 ${\n                      message.type === 'user' \n                        ? 'bg-primary text-white ml-auto' \n                        : 'bg-card border border-border/50 shadow-sm'\n                    }`}>\n                      <p className=\"text-sm leading-relaxed\">{message.content}</p>\n                      {message.type === 'ai' && (\n                        <div className=\"flex items-center justify-between mt-3 pt-3 border-t border-border/30\">\n                          <div className=\"flex items-center gap-2\">\n                            {message.confidence && (\n                              <Badge variant=\"secondary\" className=\"text-xs\">\n                                {message.confidence}% confidence\n                              </Badge>\n                            )}\n                            {message.category && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                {message.category}\n                              </Badge>\n                            )}\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            <Button size=\"icon\" variant=\"ghost\" className=\"w-6 h-6\">\n                              <ThumbsUp className=\"w-3 h-3\" />\n                            </Button>\n                            <Button size=\"icon\" variant=\"ghost\" className=\"w-6 h-6\">\n                              <ThumbsDown className=\"w-3 h-3\" />\n                            </Button>\n                            <Button size=\"icon\" variant=\"ghost\" className=\"w-6 h-6\">\n                              <Copy className=\"w-3 h-3\" />\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    <p className=\"text-xs text-muted-foreground mt-1 px-2\">\n                      {formatTime(message.timestamp)}\n                    </p>\n                  </div>\n\n                  {message.type === 'user' && (\n                    <Avatar className=\"w-8 h-8 order-3\">\n                      <AvatarFallback className=\"bg-primary text-white text-xs\">\n                        <User className=\"w-4 h-4\" />\n                      </AvatarFallback>\n                    </Avatar>\n                  )}\n                </motion.div>\n              ))}\n            </AnimatePresence>\n            \n            {isTyping && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"flex gap-3\"\n              >\n                <Avatar className=\"w-8 h-8 border-2 border-primary/20\">\n                  <AvatarFallback className=\"bg-gradient-to-r from-purple-500 to-pink-500 text-white text-xs\">\n                    <Bot className=\"w-4 h-4\" />\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"bg-card border border-border/50 rounded-2xl p-4 shadow-sm\">\n                  <div className=\"flex gap-1\">\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-pulse\" />\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-pulse\" style={{ animationDelay: '0.2s' }} />\n                    <div className=\"w-2 h-2 bg-primary rounded-full animate-pulse\" style={{ animationDelay: '0.4s' }} />\n                  </div>\n                </div>\n              </motion.div>\n            )}\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input */}\n          <div className=\"flex gap-3\">\n            <div className=\"flex-1 relative\">\n              <Input\n                value={inputMessage}\n                onChange={(e) => setInputMessage(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n                placeholder=\"Ask about investments, risks, or market trends...\"\n                className=\"pr-12 h-12 bg-card/50 backdrop-blur-sm border-border/50\"\n                data-testid=\"input-ai-chat\"\n              />\n              <Button\n                size=\"icon\"\n                variant=\"ghost\"\n                className=\"absolute right-1 top-1 h-10 w-10 hover:bg-primary/10\"\n                data-testid=\"button-voice-input\"\n              >\n                <Mic className=\"w-4 h-4\" />\n              </Button>\n            </div>\n            <Button\n              onClick={handleSendMessage}\n              disabled={!inputMessage.trim() || isTyping}\n              className=\"h-12 px-6 bg-gradient-to-r from-primary to-primary/90\"\n              data-testid=\"button-send-message\"\n            >\n              <Send className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  )\n}","size_bytes":27756},"client/src/pages/mobile/chat.tsx":{"content":"import { MobileChat } from \"@/components/mobile-chat\";\nimport { useTranslation } from \"@/hooks/use-translation\";\nimport { MessageSquare, Users, Zap } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\nexport default function MobileChatPage() {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"space-y-6 pb-20 mobile-enhanced\">\n      {/* Chat Header */}\n      <Card className=\"mobile-card mobile-scale-in border-0 shadow-lg\">\n        <CardHeader className=\"pb-3\">\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <div className=\"w-12 h-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-full flex items-center justify-center\">\n              <MessageSquare className=\"h-6 w-6 text-blue-600\" />\n            </div>\n            <div className=\"flex-1\">\n              <h1 className=\"text-xl font-bold\">{t('live_chat')}</h1>\n              <p className=\"text-sm text-muted-foreground\">Connect with investment experts</p>\n            </div>\n            <Badge className=\"bg-green-100 text-green-700 border-green-200\">\n              <Users className=\"h-3 w-3 mr-1\" />\n              5 Online\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-0\">\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div className=\"text-center p-3 bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg border border-blue-200\">\n              <p className=\"text-xs text-blue-700 font-medium mb-1\">Expert Advisors</p>\n              <p className=\"text-lg font-bold text-blue-800\">12</p>\n            </div>\n            <div className=\"text-center p-3 bg-gradient-to-br from-green-50 to-green-100 rounded-lg border border-green-200\">\n              <p className=\"text-xs text-green-700 font-medium mb-1\">Response Time</p>\n              <p className=\"text-lg font-bold text-green-800\">&lt; 2min</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Chat Interface */}\n      <MobileChat />\n\n      {/* AI Features Banner */}\n      <Card className=\"mobile-card mobile-fade-in-up border-0 shadow-lg\">\n        <CardContent className=\"p-4\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-10 h-10 bg-gradient-to-br from-primary/10 to-primary/20 rounded-full flex items-center justify-center\">\n              <Zap className=\"h-5 w-5 text-primary\" />\n            </div>\n            <div className=\"flex-1\">\n              <h3 className=\"font-semibold text-sm\">AI-Powered Chat</h3>\n              <p className=\"text-xs text-muted-foreground\">Smart responses & market insights</p>\n            </div>\n            <Badge variant=\"secondary\" className=\"text-xs\">\n              Beta\n            </Badge>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":2900},"client/src/hooks/usePullToRefresh.ts":{"content":"import { useEffect, useRef, useState } from 'react';\n\ninterface UsePullToRefreshOptions {\n  onRefresh: () => Promise<void> | void;\n  threshold?: number;\n  resistance?: number;\n  enabled?: boolean;\n}\n\nexport function usePullToRefresh({ \n  onRefresh, \n  threshold = 80, \n  resistance = 2.5,\n  enabled = true \n}: UsePullToRefreshOptions) {\n  const [pullDistance, setPullDistance] = useState(0);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [isPulling, setIsPulling] = useState(false);\n  \n  const containerRef = useRef<HTMLDivElement>(null);\n  const startY = useRef<number>(0);\n  const currentY = useRef<number>(0);\n  const isDragging = useRef<boolean>(false);\n\n  useEffect(() => {\n    if (!enabled || !containerRef.current) return;\n\n    const container = containerRef.current;\n    let rafId: number;\n\n    const handleTouchStart = (e: TouchEvent) => {\n      if (container.scrollTop > 0) return;\n      \n      startY.current = e.touches[0].clientY;\n      isDragging.current = true;\n    };\n\n    const handleTouchMove = (e: TouchEvent) => {\n      if (!isDragging.current || container.scrollTop > 0) return;\n\n      currentY.current = e.touches[0].clientY;\n      const deltaY = currentY.current - startY.current;\n\n      if (deltaY > 0) {\n        e.preventDefault();\n        setIsPulling(true);\n        \n        // Apply resistance for rubber band effect\n        const newDistance = Math.min(deltaY / resistance, threshold * 1.5);\n        \n        rafId = requestAnimationFrame(() => {\n          setPullDistance(newDistance);\n        });\n      }\n    };\n\n    const handleTouchEnd = async () => {\n      if (!isDragging.current) return;\n\n      isDragging.current = false;\n      setIsPulling(false);\n\n      if (pullDistance >= threshold && !isRefreshing) {\n        setIsRefreshing(true);\n        \n        try {\n          await onRefresh();\n        } catch (error) {\n          console.error('Refresh failed:', error);\n        } finally {\n          setTimeout(() => {\n            setIsRefreshing(false);\n            setPullDistance(0);\n          }, 500);\n        }\n      } else {\n        // Animate back to 0\n        const startDistance = pullDistance;\n        const startTime = performance.now();\n        const duration = 200;\n        \n        const animate = (currentTime: number) => {\n          const elapsed = currentTime - startTime;\n          const progress = Math.min(elapsed / duration, 1);\n          \n          // Ease out animation\n          const easeOut = 1 - Math.pow(1 - progress, 3);\n          const newDistance = startDistance * (1 - easeOut);\n          \n          setPullDistance(newDistance);\n          \n          if (progress < 1) {\n            requestAnimationFrame(animate);\n          }\n        };\n        \n        requestAnimationFrame(animate);\n      }\n    };\n\n    // Add passive listeners for better performance\n    container.addEventListener('touchstart', handleTouchStart, { passive: false });\n    container.addEventListener('touchmove', handleTouchMove, { passive: false });\n    container.addEventListener('touchend', handleTouchEnd, { passive: true });\n\n    return () => {\n      container.removeEventListener('touchstart', handleTouchStart);\n      container.removeEventListener('touchmove', handleTouchMove);\n      container.removeEventListener('touchend', handleTouchEnd);\n      if (rafId) cancelAnimationFrame(rafId);\n    };\n  }, [enabled, threshold, resistance, pullDistance, isRefreshing, onRefresh]);\n\n  const pullToRefreshProps = {\n    ref: containerRef,\n    style: {\n      transform: `translateY(${pullDistance}px)`,\n      transition: isDragging.current ? 'none' : 'transform 0.2s ease-out',\n      overscrollBehavior: 'none' as const,\n    },\n  };\n\n  const indicatorProps = {\n    style: {\n      opacity: isPulling ? Math.min(pullDistance / threshold, 1) : 0,\n      transform: `translateY(${Math.max(pullDistance - 20, 0)}px) scale(${Math.min(pullDistance / threshold, 1)})`,\n      transition: isDragging.current ? 'none' : 'all 0.2s ease-out',\n    },\n  };\n\n  return {\n    pullToRefreshProps,\n    indicatorProps,\n    isPulling,\n    isRefreshing,\n    pullDistance,\n    isOverThreshold: pullDistance >= threshold,\n  };\n}","size_bytes":4156},"client/src/components/ui/bottom-sheet.tsx":{"content":"import { useState, useEffect } from \"react\"\nimport { X } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\n\ninterface BottomSheetProps {\n  isOpen: boolean\n  onClose: () => void\n  children: React.ReactNode\n  title?: string\n  height?: \"half\" | \"full\" | \"auto\"\n}\n\nexport function BottomSheet({\n  isOpen,\n  onClose,\n  children,\n  title,\n  height = \"auto\"\n}: BottomSheetProps) {\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (isOpen) {\n      setMounted(true)\n      // Prevent body scroll when sheet is open\n      document.body.style.overflow = 'hidden'\n    } else {\n      // Re-enable body scroll\n      document.body.style.overflow = ''\n      // Delay unmounting to allow exit animation\n      const timer = setTimeout(() => setMounted(false), 300)\n      return () => clearTimeout(timer)\n    }\n\n    return () => {\n      document.body.style.overflow = ''\n    }\n  }, [isOpen])\n\n  if (!mounted) return null\n\n  const heightClasses = {\n    half: \"max-h-[50vh]\",\n    full: \"max-h-[90vh]\",\n    auto: \"max-h-[80vh]\"\n  }\n\n  return (\n    <>\n      {/* Backdrop with glassmorphism */}\n      <div\n        className={`fixed inset-0 z-50 glass-overlay backdrop-blur-md transition-opacity duration-300 ${\n          isOpen ? \"opacity-100\" : \"opacity-0\"\n        }`}\n        onClick={onClose}\n        data-testid=\"bottom-sheet-backdrop\"\n      />\n      \n      {/* Bottom Sheet */}\n      <div\n        className={`fixed bottom-0 left-0 right-0 z-50 glass-card border-t shadow-2xl transform transition-transform duration-400 ease-out ${\n          isOpen ? \"bottom-sheet-enter\" : \"bottom-sheet-exit\"\n        } ${heightClasses[height]}`}\n        data-testid=\"bottom-sheet-content\"\n      >\n        {/* Drag handle */}\n        <div className=\"flex justify-center pt-2 pb-1\">\n          <div className=\"w-12 h-1 bg-muted-foreground/30 rounded-full\"></div>\n        </div>\n        \n        {/* Header */}\n        {title && (\n          <div className=\"flex items-center justify-between p-4 border-b glass-overlay\">\n            <h2 className=\"text-lg font-semibold\" data-testid=\"bottom-sheet-title\">\n              {title}\n            </h2>\n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              onClick={onClose}\n              className=\"haptic-feedback\"\n              data-testid=\"button-close-bottom-sheet\"\n              aria-label=\"Close\"\n            >\n              <X className=\"h-5 w-5\" />\n            </Button>\n          </div>\n        )}\n        \n        {/* Content */}\n        <div className=\"flex-1 overflow-y-auto p-4\">\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}","size_bytes":2638},"client/src/components/auth-dialog.tsx":{"content":"import { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { Eye, EyeOff, Lock, Mail, User, Phone } from \"lucide-react\"\n\ninterface AuthDialogProps {\n  children: React.ReactNode\n  defaultTab?: \"login\" | \"register\"\n}\n\nexport function AuthDialog({ children, defaultTab = \"login\" }: AuthDialogProps) {\n  const { t } = useTranslation()\n  const [open, setOpen] = useState(false)\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [activeTab, setActiveTab] = useState(defaultTab)\n\n  const handleSubmit = (e: React.FormEvent, type: \"login\" | \"register\") => {\n    e.preventDefault()\n    alert(`${type === \"login\" ? \"Login\" : \"Registration\"} functionality coming soon! This will integrate with the backend authentication system.`)\n    setOpen(false)\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {children}\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle className=\"text-center text-2xl font-bold bg-gradient-to-r from-emerald-600 to-blue-600 bg-clip-text text-transparent\">\n            {t(\"welcome_to_zaron\")}\n          </DialogTitle>\n          <DialogDescription className=\"text-center\">\n            {t(\"join_thousands_investors\")}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as \"login\" | \"register\")} className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"login\" data-testid=\"tab-login\">{t(\"login\")}</TabsTrigger>\n            <TabsTrigger value=\"register\" data-testid=\"tab-register\">{t(\"register\")}</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"login\" className=\"space-y-4\">\n            <form onSubmit={(e) => handleSubmit(e, \"login\")} className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"login-email\">{t(\"email\")}</Label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input \n                    id=\"login-email\"\n                    type=\"email\"\n                    placeholder=\"investor@example.com\"\n                    className=\"pl-10\"\n                    required\n                    data-testid=\"input-login-email\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"login-password\">{t(\"password\")}</Label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input \n                    id=\"login-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder={t(\"enter_password\")}\n                    className=\"pl-10 pr-10\"\n                    required\n                    data-testid=\"input-login-password\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 hover:bg-transparent\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    data-testid=\"button-toggle-password\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Checkbox id=\"remember\" data-testid=\"checkbox-remember\" />\n                  <Label htmlFor=\"remember\" className=\"text-sm\">{t(\"remember_me\")}</Label>\n                </div>\n                <Button variant=\"ghost\" className=\"p-0 h-auto text-sm\" data-testid=\"link-forgot-password\">\n                  {t(\"forgot_password\")}\n                </Button>\n              </div>\n\n              <Button type=\"submit\" className=\"w-full bg-gradient-to-r from-emerald-600 to-blue-600\" data-testid=\"button-login-submit\">\n                {t(\"login\")}\n              </Button>\n            </form>\n          </TabsContent>\n\n          <TabsContent value=\"register\" className=\"space-y-4\">\n            <form onSubmit={(e) => handleSubmit(e, \"register\")} className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"first-name\">{t(\"first_name\")}</Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                    <Input \n                      id=\"first-name\"\n                      placeholder={t(\"first_name\")}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-first-name\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"last-name\">{t(\"last_name\")}</Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                    <Input \n                      id=\"last-name\"\n                      placeholder={t(\"last_name\")}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-last-name\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"register-email\">{t(\"email\")}</Label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input \n                    id=\"register-email\"\n                    type=\"email\"\n                    placeholder=\"investor@example.com\"\n                    className=\"pl-10\"\n                    required\n                    data-testid=\"input-register-email\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">{t(\"phone_number\")}</Label>\n                <div className=\"relative\">\n                  <Phone className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input \n                    id=\"phone\"\n                    type=\"tel\"\n                    placeholder=\"+966 50 123 4567\"\n                    className=\"pl-10\"\n                    required\n                    data-testid=\"input-phone\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"register-password\">{t(\"password\")}</Label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input \n                    id=\"register-password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder={t(\"create_password\")}\n                    className=\"pl-10 pr-10\"\n                    required\n                    data-testid=\"input-register-password\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 hover:bg-transparent\"\n                    onClick={() => setShowPassword(!showPassword)}\n                    data-testid=\"button-toggle-register-password\"\n                  >\n                    {showPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"confirm-password\">{t(\"confirm_password\")}</Label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                  <Input \n                    id=\"confirm-password\"\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    placeholder={t(\"confirm_password\")}\n                    className=\"pl-10 pr-10\"\n                    required\n                    data-testid=\"input-confirm-password\"\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 hover:bg-transparent\"\n                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                    data-testid=\"button-toggle-confirm-password\"\n                  >\n                    {showConfirmPassword ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n                  </Button>\n                </div>\n              </div>\n\n              <div className=\"space-y-3\">\n                <div className=\"flex items-start space-x-2\">\n                  <Checkbox id=\"terms\" required data-testid=\"checkbox-terms\" className=\"mt-0.5\" />\n                  <Label htmlFor=\"terms\" className=\"text-sm leading-5\">\n                    {t(\"agree_to\")} <Button variant=\"ghost\" className=\"p-0 h-auto text-sm underline\" data-testid=\"link-terms\">{t(\"terms_conditions\")}</Button> {t(\"and\")} <Button variant=\"ghost\" className=\"p-0 h-auto text-sm underline\" data-testid=\"link-privacy\">{t(\"privacy_policy\")}</Button>\n                  </Label>\n                </div>\n                <div className=\"flex items-start space-x-2\">\n                  <Checkbox id=\"shariah\" data-testid=\"checkbox-shariah\" className=\"mt-0.5\" />\n                  <Label htmlFor=\"shariah\" className=\"text-sm leading-5\">\n                    {t(\"confirm_shariah_compliant\")}\n                  </Label>\n                </div>\n              </div>\n\n              <Button type=\"submit\" className=\"w-full bg-gradient-to-r from-emerald-600 to-blue-600\" data-testid=\"button-register-submit\">\n                {t(\"create_account\")}\n              </Button>\n            </form>\n          </TabsContent>\n        </Tabs>\n\n        <div className=\"text-center text-sm text-muted-foreground\">\n          <div className=\"flex items-center gap-2 justify-center\">\n            <span className=\"bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 px-2 py-1 rounded text-xs\">\n              {t(\"shariah_compliant\")}\n            </span>\n            <span className=\"bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 px-2 py-1 rounded text-xs\">\n              {t(\"sama_regulated\")}\n            </span>\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}","size_bytes":11401},"client/src/components/website-layout.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport { \n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { useLanguage } from \"@/components/language-provider\"\nimport { AuthDialog } from \"@/components/auth-dialog\"\nimport { Languages, Globe, Flag } from \"lucide-react\"\nimport { Link, useLocation } from \"wouter\"\n\nconst languages = [\n  { code: \"en\", name: \"English\" },\n  { code: \"ar\", name: \"العربية\" },\n  { code: \"ur\", name: \"اردو\" },\n  { code: \"hi\", name: \"हिंदी\" },\n  { code: \"pa\", name: \"ਪੰਜਾਬੀ\" },\n  { code: \"bn\", name: \"বাংলা\" },\n  { code: \"ml\", name: \"മലയാളം\" },\n] as const\n\nexport default function WebsiteLayout({ children }: { children: React.ReactNode }) {\n  const { t } = useTranslation()\n  const { language, setLanguage } = useLanguage()\n  const [location] = useLocation()\n\n  const navigation = [\n    { name: \"Invest\", href: \"/website/invest\" },\n    { name: t(\"about_us\"), href: \"/website/about\" },\n  ]\n\n  const isActive = (href: string, exact = false) => {\n    if (exact) {\n      return location === href\n    }\n    return location.startsWith(href)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Header */}\n      <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"flex h-16 items-center justify-between\">\n            {/* Logo */}\n            <Link href=\"/website/invest\" data-testid=\"link-home\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-emerald-600 rounded-lg flex items-center justify-center\">\n                  <Globe className=\"h-5 w-5 text-white\" />\n                </div>\n                <span className=\"text-2xl font-bold bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                  Zaron\n                </span>\n              </div>\n            </Link>\n\n            {/* Navigation */}\n            <nav className=\"hidden md:flex items-center space-x-8\">\n              {navigation.map((item) => (\n                <Link \n                  key={item.href} \n                  href={item.href} \n                  className={`text-sm font-medium transition-colors hover:text-primary ${\n                    isActive(item.href) \n                      ? \"text-primary\" \n                      : \"text-muted-foreground\"\n                  }`}\n                  data-testid={`link-${item.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                  aria-current={isActive(item.href) ? \"page\" : undefined}\n                >\n                  {item.name}\n                </Link>\n              ))}\n            </nav>\n\n            {/* Actions */}\n            <div className=\"flex items-center space-x-4\">\n              {/* Language Switcher */}\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"ghost\" size=\"sm\" data-testid=\"button-language-switcher\">\n                    <Languages className=\"h-4 w-4\" />\n                    <span className=\"ml-2 hidden sm:inline\">\n                      {languages.find(l => l.code === language)?.name}\n                    </span>\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  {languages.map((lang) => (\n                    <DropdownMenuItem\n                      key={lang.code}\n                      onClick={() => setLanguage(lang.code as any)}\n                      className={language === lang.code ? \"bg-accent\" : \"\"}\n                      data-testid={`option-language-${lang.code}`}\n                    >\n                      <Flag className=\"mr-2 h-4 w-4\" />\n                      {lang.name}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n\n              {/* Auth Buttons */}\n              <div className=\"flex items-center space-x-2\">\n                <AuthDialog defaultTab=\"login\">\n                  <Button variant=\"ghost\" data-testid=\"button-login\">\n                    {t(\"login\")}\n                  </Button>\n                </AuthDialog>\n                <AuthDialog defaultTab=\"register\">\n                  <Button data-testid=\"button-register\">\n                    {t(\"register_now\")}\n                  </Button>\n                </AuthDialog>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"flex-1\">\n        {children}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"border-t bg-muted/50\">\n        <div className=\"container mx-auto px-6 py-12\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            {/* Company Info */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-6 w-6 bg-gradient-to-r from-blue-600 to-emerald-600 rounded flex items-center justify-center\">\n                  <Globe className=\"h-4 w-4 text-white\" />\n                </div>\n                <span className=\"text-lg font-bold\">Zaron</span>\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                The premier platform for real estate investment in Saudi Arabia's growing market.\n              </p>\n              <div className=\"flex space-x-4\">\n                <span className=\"text-xs bg-green-100 dark:bg-green-900 text-green-700 dark:text-green-300 px-2 py-1 rounded\">\n                  {t(\"shariah_compliant\")}\n                </span>\n                <span className=\"text-xs bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300 px-2 py-1 rounded\">\n                  {t(\"vision_2030\")}\n                </span>\n              </div>\n            </div>\n\n            {/* Quick Links */}\n            <div>\n              <h3 className=\"font-semibold mb-4\">Quick Links</h3>\n              <ul className=\"space-y-2 text-sm\">\n                <li><Link href=\"/website/invest\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-invest\">Start Investing</Link></li>\n                <li><Link href=\"/website/about\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-about\">{t(\"about_us\")}</Link></li>\n                <li><Link href=\"/website/business\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-business\">{t(\"business_model\")}</Link></li>\n                <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-properties\">Properties</a></li>\n              </ul>\n            </div>\n\n            {/* Support */}\n            <div>\n              <h3 className=\"font-semibold mb-4\">Support</h3>\n              <ul className=\"space-y-2 text-sm\">\n                <li><Link href=\"/website/contact\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-contact\">{t(\"contact_us\")}</Link></li>\n                <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-help\">Help Center</a></li>\n                <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-faq\">FAQ</a></li>\n                <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary\" data-testid=\"footer-link-terms\">Terms & Conditions</a></li>\n              </ul>\n            </div>\n\n            {/* Download App */}\n            <div>\n              <h3 className=\"font-semibold mb-4\">{t(\"download_app\")}</h3>\n              <p className=\"text-sm text-muted-foreground mb-4\">\n                Get the Zaron mobile app for the best investment experience.\n              </p>\n              <div className=\"space-y-2\">\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full\" data-testid=\"button-download-ios\">\n                  Download for iOS\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full\" data-testid=\"button-download-android\">\n                  Download for Android\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"border-t mt-8 pt-8 text-center text-sm text-muted-foreground\">\n            <p>© 2024 Zaron. All rights reserved. Licensed and regulated in Saudi Arabia.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}","size_bytes":8670},"client/src/pages/website/about.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { \n  Building2, \n  Users, \n  Target, \n  Award,\n  Globe,\n  TrendingUp,\n  Shield,\n  Heart,\n  Lightbulb,\n  CheckCircle,\n  ArrowRight,\n  Flag\n} from \"lucide-react\"\n\nconst values = [\n  {\n    icon: Shield,\n    title: \"Trust & Transparency\",\n    description: \"We believe in complete transparency in all our dealings, providing clear information about every investment opportunity.\"\n  },\n  {\n    icon: Heart,\n    title: \"Shariah Compliance\",\n    description: \"All our investments are carefully vetted to ensure they meet the highest standards of Islamic finance principles.\"\n  },\n  {\n    icon: Lightbulb,\n    title: \"Innovation\",\n    description: \"We leverage cutting-edge technology to make real estate investment accessible, efficient, and rewarding.\"\n  },\n  {\n    icon: Users,\n    title: \"Community First\",\n    description: \"We're committed to building a community of informed investors who grow together and support each other.\"\n  }\n]\n\nconst stats = [\n  { label: \"Active Investors\", value: \"10,000+\", icon: Users },\n  { label: \"Total Investments\", value: \"2.5B SAR\", icon: TrendingUp },\n  { label: \"Completed Projects\", value: \"150+\", icon: Building2 },\n  { label: \"Average Returns\", value: \"14.5%\", icon: Target }\n]\n\nconst team = [\n  {\n    name: \"Ahmed Al-Rashid\",\n    role: \"CEO & Co-Founder\",\n    bio: \"15+ years in real estate development and fintech. Former VP at SAMA.\",\n    image: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=300&h=300&fit=crop&crop=face\"\n  },\n  {\n    name: \"Sarah Al-Mansouri\",\n    role: \"CTO & Co-Founder\", \n    bio: \"Tech leader with experience at Careem and STC. MIT Computer Science graduate.\",\n    image: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=300&h=300&fit=crop&crop=face\"\n  },\n  {\n    name: \"Dr. Omar Bin Laden\",\n    role: \"Head of Islamic Finance\",\n    bio: \"Islamic finance scholar and Shariah board member. PhD from King Saud University.\",\n    image: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=300&h=300&fit=crop&crop=face\"\n  },\n  {\n    name: \"Fatima Al-Zahra\",\n    role: \"Head of Operations\",\n    bio: \"Operations expert with 12+ years at McKinsey and Saudi Aramco. Harvard MBA.\",\n    image: \"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=300&h=300&fit=crop&crop=face\"\n  }\n]\n\nexport default function AboutPage() {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden bg-gradient-to-br from-blue-50 via-white to-emerald-50 dark:from-blue-950/50 dark:via-background dark:to-emerald-950/50 py-20\">\n        <div className=\"absolute inset-0 bg-grid-pattern opacity-5\"></div>\n        <div className=\"container mx-auto px-6 relative\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <div className=\"mb-6\">\n              <Badge className=\"bg-gradient-to-r from-blue-500 to-emerald-500 text-white border-0 mb-4\">\n                <Flag className=\"w-4 h-4 mr-2\" />\n                Proudly Saudi\n              </Badge>\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-blue-600 via-emerald-600 to-blue-800 bg-clip-text text-transparent\">\n              {t(\"about_us\")}\n            </h1>\n            <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              We're on a mission to democratize real estate investment in Saudi Arabia, making it accessible, \n              transparent, and profitable for everyone.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-gradient-to-r from-blue-600 to-emerald-600 hover:from-blue-700 hover:to-emerald-700\" data-testid=\"button-our-story\">\n                <Heart className=\"w-5 h-5 mr-2\" />\n                Our Story\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" data-testid=\"button-meet-team\">\n                Meet Our Team\n                <ArrowRight className=\"w-5 h-5 ml-2\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Statement */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-8\">Our Mission</h2>\n            <p className=\"text-lg text-muted-foreground mb-12 leading-relaxed\">\n              At Zaron, we believe that everyone should have the opportunity to participate in Saudi Arabia's \n              incredible economic transformation. Through our platform, we're making premium real estate \n              investment accessible to retail investors while maintaining the highest standards of \n              transparency and Shariah compliance.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              <Card className=\"text-center p-6 hover-elevate\" data-testid=\"card-vision\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Target className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-3\">Vision 2030 Aligned</h3>\n                <p className=\"text-muted-foreground\">\n                  Supporting Saudi Arabia's transformation through strategic real estate investments.\n                </p>\n              </Card>\n              <Card className=\"text-center p-6 hover-elevate\" data-testid=\"card-accessibility\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Users className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-3\">Democratized Access</h3>\n                <p className=\"text-muted-foreground\">\n                  Making premium real estate investment accessible to everyone, not just the wealthy.\n                </p>\n              </Card>\n              <Card className=\"text-center p-6 hover-elevate\" data-testid=\"card-compliance\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Shield className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-3\">Shariah Compliant</h3>\n                <p className=\"text-muted-foreground\">\n                  Every investment is carefully vetted to ensure full compliance with Islamic principles.\n                </p>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Our Impact</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Since our launch, we've helped thousands of investors build wealth through real estate.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n            {stats.map((stat, index) => (\n              <Card key={index} className=\"text-center p-6 hover-elevate\" data-testid={`card-stat-${index}`}>\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <stat.icon className=\"w-6 h-6 text-white\" />\n                </div>\n                <div className=\"text-3xl font-bold mb-2 bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                  {stat.value}\n                </div>\n                <p className=\"text-sm text-muted-foreground\">{stat.label}</p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Values Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Our Values</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              The principles that guide everything we do at Zaron.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            {values.map((value, index) => (\n              <Card key={index} className=\"p-8 hover-elevate\" data-testid={`card-value-${index}`}>\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <value.icon className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-bold mb-3\">{value.title}</h3>\n                    <p className=\"text-muted-foreground leading-relaxed\">{value.description}</p>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Team Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Meet Our Team</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Experienced professionals dedicated to transforming real estate investment in Saudi Arabia.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {team.map((member, index) => (\n              <Card key={index} className=\"text-center overflow-hidden hover-elevate group\" data-testid={`card-team-${index}`}>\n                <div className=\"relative\">\n                  <img \n                    src={member.image} \n                    alt={member.name}\n                    className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-300\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                </div>\n                <CardHeader>\n                  <CardTitle className=\"text-lg\">{member.name}</CardTitle>\n                  <CardDescription className=\"text-blue-600 font-medium\">{member.role}</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground\">{member.bio}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Our Story</h2>\n              <p className=\"text-lg text-muted-foreground\">\n                How we started and where we're going.\n              </p>\n            </div>\n            <div className=\"space-y-12\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 items-center\">\n                <div>\n                  <h3 className=\"text-2xl font-bold mb-4\">The Beginning</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Founded in 2022 by a team of real estate and fintech experts, Zaron was born from a simple \n                    observation: Saudi Arabia's booming real estate market was only accessible to the wealthy elite.\n                  </p>\n                  <p className=\"text-muted-foreground\">\n                    We saw an opportunity to democratize this access and align it with Vision 2030's goals of \n                    economic diversification and increased retail investment participation.\n                  </p>\n                </div>\n                <Card className=\"p-6 bg-gradient-to-br from-blue-50 to-emerald-50 dark:from-blue-950/50 dark:to-emerald-950/50 border-0\">\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl font-bold text-blue-600 mb-2\">2022</div>\n                    <p className=\"text-muted-foreground\">Zaron Founded</p>\n                  </div>\n                </Card>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 items-center\">\n                <Card className=\"p-6 bg-gradient-to-br from-emerald-50 to-blue-50 dark:from-emerald-950/50 dark:to-blue-950/50 border-0 md:order-first\">\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl font-bold text-emerald-600 mb-2\">2024</div>\n                    <p className=\"text-muted-foreground\">Platform Launch</p>\n                  </div>\n                </Card>\n                <div>\n                  <h3 className=\"text-2xl font-bold mb-4\">Platform Launch</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    After two years of development and regulatory approval, we launched our platform with \n                    our first set of curated investment opportunities.\n                  </p>\n                  <p className=\"text-muted-foreground\">\n                    Within months, we had onboarded thousands of investors and facilitated millions in \n                    real estate investments, all while maintaining our commitment to Shariah compliance.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 items-center\">\n                <div>\n                  <h3 className=\"text-2xl font-bold mb-4\">The Future</h3>\n                  <p className=\"text-muted-foreground mb-4\">\n                    We're just getting started. Our roadmap includes expanding to international markets, \n                    adding new asset classes, and continuing to innovate in the Islamic fintech space.\n                  </p>\n                  <div className=\"flex items-center space-x-2\">\n                    <CheckCircle className=\"w-5 h-5 text-green-600\" />\n                    <span className=\"text-sm text-muted-foreground\">Licensed & Regulated in Saudi Arabia</span>\n                  </div>\n                </div>\n                <Card className=\"p-6 bg-gradient-to-br from-blue-50 to-emerald-50 dark:from-blue-950/50 dark:to-emerald-950/50 border-0\">\n                  <div className=\"text-center\">\n                    <div className=\"text-4xl font-bold text-gradient mb-2\">2025+</div>\n                    <p className=\"text-muted-foreground\">Global Expansion</p>\n                  </div>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-emerald-600 text-white\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Join Our Mission</h2>\n          <p className=\"text-xl opacity-90 mb-8 max-w-2xl mx-auto\">\n            Be part of Saudi Arabia's real estate transformation. Start your investment journey with us today.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" variant=\"secondary\" className=\"bg-white text-blue-600 hover:bg-gray-100\" data-testid=\"button-start-investing\">\n              Start Investing\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\" data-testid=\"button-contact-us\">\n              {t(\"contact_us\")}\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":16419},"client/src/pages/website/business.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { \n  Building2, \n  TrendingUp, \n  Users, \n  DollarSign,\n  Shield,\n  PieChart,\n  Banknote,\n  Target,\n  CheckCircle,\n  ArrowRight,\n  Calculator,\n  Clock,\n  Award,\n  Globe\n} from \"lucide-react\"\n\nconst revenueStreams = [\n  {\n    icon: Building2,\n    title: \"Property Management Fees\",\n    description: \"1-3% annual management fee on all properties in our portfolio\",\n    percentage: \"40%\"\n  },\n  {\n    icon: TrendingUp,\n    title: \"Performance Fees\",\n    description: \"20% performance fee on returns above benchmark rates\",\n    percentage: \"35%\"\n  },\n  {\n    icon: Users,\n    title: \"Platform Transaction Fees\",\n    description: \"Small transaction fees for buying/selling property shares\",\n    percentage: \"15%\"\n  },\n  {\n    icon: DollarSign,\n    title: \"Premium Services\",\n    description: \"Advisory services, market analysis, and portfolio optimization\",\n    percentage: \"10%\"\n  }\n]\n\nconst investmentProcess = [\n  {\n    step: \"01\",\n    title: \"Property Sourcing\",\n    description: \"Our team identifies high-quality real estate opportunities across Saudi Arabia\",\n    details: [\n      \"Due diligence on developers and projects\",\n      \"Market analysis and feasibility studies\", \n      \"Shariah compliance verification\",\n      \"Legal structure setup\"\n    ]\n  },\n  {\n    step: \"02\",\n    title: \"Investor Participation\", \n    description: \"Retail investors can participate in fractional ownership through our platform\",\n    details: [\n      \"Minimum investment from 1,000 SAR\",\n      \"Transparent pricing and fee structure\",\n      \"Real-time investment tracking\",\n      \"Flexible exit options\"\n    ]\n  },\n  {\n    step: \"03\",\n    title: \"Active Management\",\n    description: \"We actively manage properties to maximize returns for all investors\",\n    details: [\n      \"Professional property management\",\n      \"Regular performance reporting\",\n      \"Market optimization strategies\",\n      \"Risk monitoring and mitigation\"\n    ]\n  },\n  {\n    step: \"04\",\n    title: \"Returns Distribution\",\n    description: \"Profits are distributed to investors based on their ownership percentage\",\n    details: [\n      \"Monthly rental income distribution\",\n      \"Annual capital appreciation sharing\",\n      \"Transparent accounting and reporting\",\n      \"Automated return calculations\"\n    ]\n  }\n]\n\nconst marketOpportunity = [\n  {\n    metric: \"2.5 Trillion SAR\",\n    label: \"Saudi Real Estate Market Size\",\n    description: \"Total addressable market by 2030\"\n  },\n  {\n    metric: \"65%\",\n    label: \"Home Ownership Target\",\n    description: \"Vision 2030 goal vs current 47%\"\n  },\n  {\n    metric: \"10+ Million\",\n    label: \"Population Growth\",\n    description: \"Expected new residents by 2030\"\n  },\n  {\n    metric: \"500+ Billion SAR\",\n    label: \"NEOM Investment\",\n    description: \"Mega-projects creating opportunities\"\n  }\n]\n\nconst competitiveAdvantages = [\n  {\n    icon: Shield,\n    title: \"Shariah Compliance\",\n    description: \"Only platform with certified Islamic finance board oversight\"\n  },\n  {\n    icon: Globe,\n    title: \"Vision 2030 Focus\",\n    description: \"Strategic alignment with Saudi Arabia's transformation goals\"\n  },\n  {\n    icon: Calculator,\n    title: \"Technology-First\",\n    description: \"Advanced analytics and AI-powered investment recommendations\"\n  },\n  {\n    icon: Award,\n    title: \"Regulatory Compliance\",\n    description: \"Fully licensed and regulated by Saudi financial authorities\"\n  }\n]\n\nexport default function BusinessModelPage() {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden bg-gradient-to-br from-blue-50 via-white to-emerald-50 dark:from-blue-950/50 dark:via-background dark:to-emerald-950/50 py-20\">\n        <div className=\"absolute inset-0 bg-grid-pattern opacity-5\"></div>\n        <div className=\"container mx-auto px-6 relative\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <div className=\"mb-6\">\n              <Badge className=\"bg-gradient-to-r from-blue-500 to-emerald-500 text-white border-0 mb-4\">\n                <PieChart className=\"w-4 h-4 mr-2\" />\n                Our Business Model\n              </Badge>\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-blue-600 via-emerald-600 to-blue-800 bg-clip-text text-transparent\">\n              {t(\"business_model\")}\n            </h1>\n            <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Discover how Zaron is transforming real estate investment through innovative technology, \n              strategic partnerships, and unwavering commitment to Shariah compliance.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"bg-gradient-to-r from-blue-600 to-emerald-600\" data-testid=\"button-view-opportunities\">\n                <PieChart className=\"w-5 h-5 mr-2\" />\n                View Opportunities\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" data-testid=\"button-download-whitepaper\">\n                Download Whitepaper\n                <ArrowRight className=\"w-5 h-5 ml-2\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Market Opportunity */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Market Opportunity</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Saudi Arabia's real estate market presents unprecedented opportunities driven by Vision 2030 initiatives.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {marketOpportunity.map((item, index) => (\n              <Card key={index} className=\"text-center p-6 hover-elevate\" data-testid={`card-market-${index}`}>\n                <div className=\"text-3xl font-bold mb-2 bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n                  {item.metric}\n                </div>\n                <h3 className=\"font-semibold mb-2\">{item.label}</h3>\n                <p className=\"text-sm text-muted-foreground\">{item.description}</p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Business Model Overview */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">How We Generate Revenue</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Our diversified revenue model ensures sustainable growth while aligning our interests with investor success.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-6xl mx-auto\">\n            {revenueStreams.map((stream, index) => (\n              <Card key={index} className=\"p-8 hover-elevate\" data-testid={`card-revenue-${index}`}>\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <stream.icon className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h3 className=\"text-xl font-bold\">{stream.title}</h3>\n                      <Badge variant=\"secondary\" className=\"text-blue-600 font-bold\">\n                        {stream.percentage}\n                      </Badge>\n                    </div>\n                    <p className=\"text-muted-foreground\">{stream.description}</p>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Investment Process */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Our Investment Process</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              A comprehensive approach that ensures quality investments and maximizes returns for all stakeholders.\n            </p>\n          </div>\n          <div className=\"space-y-8 max-w-4xl mx-auto\">\n            {investmentProcess.map((process, index) => (\n              <Card key={index} className=\"p-8 hover-elevate\" data-testid={`card-process-${index}`}>\n                <div className=\"flex flex-col lg:flex-row items-start space-y-4 lg:space-y-0 lg:space-x-6\">\n                  <div className=\"flex items-center space-x-4 lg:w-1/3\">\n                    <div className=\"w-12 h-12 bg-gradient-to-r from-blue-600 to-emerald-600 rounded-full flex items-center justify-center text-white font-bold\">\n                      {process.step}\n                    </div>\n                    <div>\n                      <h3 className=\"text-xl font-bold\">{process.title}</h3>\n                      <p className=\"text-muted-foreground text-sm\">{process.description}</p>\n                    </div>\n                  </div>\n                  <div className=\"lg:w-2/3\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                      {process.details.map((detail, detailIndex) => (\n                        <div key={detailIndex} className=\"flex items-center space-x-2\">\n                          <CheckCircle className=\"w-4 h-4 text-green-600 flex-shrink-0\" />\n                          <span className=\"text-sm text-muted-foreground\">{detail}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Competitive Advantages */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Our Competitive Advantages</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              What sets Zaron apart in the real estate investment landscape.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 max-w-4xl mx-auto\">\n            {competitiveAdvantages.map((advantage, index) => (\n              <Card key={index} className=\"p-6 text-center hover-elevate\" data-testid={`card-advantage-${index}`}>\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <advantage.icon className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-3\">{advantage.title}</h3>\n                <p className=\"text-muted-foreground\">{advantage.description}</p>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Financial Model */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Financial Projections</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Our growth trajectory and financial outlook for the next five years.\n            </p>\n          </div>\n          <Tabs defaultValue=\"growth\" className=\"max-w-4xl mx-auto\">\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"growth\" data-testid=\"tab-growth\">Growth Metrics</TabsTrigger>\n              <TabsTrigger value=\"revenue\" data-testid=\"tab-revenue\">Revenue Model</TabsTrigger>\n              <TabsTrigger value=\"expansion\" data-testid=\"tab-expansion\">Expansion Plan</TabsTrigger>\n            </TabsList>\n            \n            <TabsContent value=\"growth\" className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <Card className=\"text-center p-6\">\n                  <h3 className=\"text-2xl font-bold text-blue-600 mb-2\">100,000+</h3>\n                  <p className=\"text-muted-foreground\">Active Investors by 2026</p>\n                </Card>\n                <Card className=\"text-center p-6\">\n                  <h3 className=\"text-2xl font-bold text-emerald-600 mb-2\">10B SAR</h3>\n                  <p className=\"text-muted-foreground\">Assets Under Management</p>\n                </Card>\n                <Card className=\"text-center p-6\">\n                  <h3 className=\"text-2xl font-bold text-purple-600 mb-2\">500+</h3>\n                  <p className=\"text-muted-foreground\">Properties in Portfolio</p>\n                </Card>\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"revenue\" className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <Card className=\"p-6\">\n                  <h3 className=\"text-xl font-bold mb-4\">Year 1-2: Foundation</h3>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li>• Focus on platform growth and user acquisition</li>\n                    <li>• Build strong property portfolio</li>\n                    <li>• Establish market presence in major cities</li>\n                  </ul>\n                </Card>\n                <Card className=\"p-6\">\n                  <h3 className=\"text-xl font-bold mb-4\">Year 3-5: Scale</h3>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li>• Expand to secondary markets</li>\n                    <li>• Launch premium investment products</li>\n                    <li>• International expansion planning</li>\n                  </ul>\n                </Card>\n              </div>\n            </TabsContent>\n            \n            <TabsContent value=\"expansion\" className=\"space-y-8\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <Card className=\"p-6\">\n                  <h3 className=\"text-xl font-bold mb-4\">Geographic Expansion</h3>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li>• Phase 1: All major Saudi cities</li>\n                    <li>• Phase 2: GCC countries</li>\n                    <li>• Phase 3: MENA region</li>\n                  </ul>\n                </Card>\n                <Card className=\"p-6\">\n                  <h3 className=\"text-xl font-bold mb-4\">Product Expansion</h3>\n                  <ul className=\"space-y-2 text-muted-foreground\">\n                    <li>• Commercial real estate</li>\n                    <li>• REITs and structured products</li>\n                    <li>• Property development funding</li>\n                  </ul>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </section>\n\n      {/* Risk Management */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-8\">Risk Management</h2>\n            <p className=\"text-lg text-muted-foreground mb-12\">\n              We employ comprehensive risk management strategies to protect investor capital and ensure sustainable returns.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <Card className=\"p-6 text-left\">\n                <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n                  <Shield className=\"w-5 h-5 mr-2 text-blue-600\" />\n                  Investment Risk Mitigation\n                </h3>\n                <ul className=\"space-y-2 text-muted-foreground\">\n                  <li>• Diversified portfolio across regions and property types</li>\n                  <li>• Thorough due diligence on all investments</li>\n                  <li>• Professional property management partners</li>\n                  <li>• Regular market analysis and portfolio rebalancing</li>\n                </ul>\n              </Card>\n              <Card className=\"p-6 text-left\">\n                <h3 className=\"text-xl font-bold mb-4 flex items-center\">\n                  <Award className=\"w-5 h-5 mr-2 text-emerald-600\" />\n                  Regulatory Compliance\n                </h3>\n                <ul className=\"space-y-2 text-muted-foreground\">\n                  <li>• Full compliance with SAMA regulations</li>\n                  <li>• Shariah board oversight and certification</li>\n                  <li>• Regular audits and reporting</li>\n                  <li>• Investor protection measures</li>\n                </ul>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-emerald-600 text-white\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Partner with Zaron</h2>\n          <p className=\"text-xl opacity-90 mb-8 max-w-2xl mx-auto\">\n            Join us in reshaping the future of real estate investment in Saudi Arabia and beyond.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" variant=\"secondary\" className=\"bg-white text-blue-600 hover:bg-gray-100\" data-testid=\"button-start-investing\">\n              Start Investing\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\" data-testid=\"button-partner-with-us\">\n              Partner With Us\n            </Button>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":18536},"client/src/pages/website/contact.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { z } from \"zod\"\nimport { \n  MapPin, \n  Phone, \n  Mail, \n  Clock,\n  MessageSquare,\n  Headphones,\n  Users,\n  Building2,\n  Send,\n  CheckCircle\n} from \"lucide-react\"\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().min(10, \"Please enter a valid phone number\"),\n  subject: z.string().min(1, \"Please select a subject\"),\n  inquiry_type: z.string().min(1, \"Please select an inquiry type\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\")\n})\n\ntype ContactFormData = z.infer<typeof contactFormSchema>\n\nconst contactMethods = [\n  {\n    icon: Phone,\n    title: \"Phone Support\",\n    description: \"Speak with our investment experts\",\n    value: \"+966 11 123 4567\",\n    action: \"Call Now\",\n    available: \"Sunday - Thursday, 9 AM - 6 PM\"\n  },\n  {\n    icon: Mail,\n    title: \"Email Support\", \n    description: \"Get detailed responses to your questions\",\n    value: \"support@zaron.sa\",\n    action: \"Send Email\",\n    available: \"24/7 - Response within 2 hours\"\n  },\n  {\n    icon: MessageSquare,\n    title: \"Live Chat\",\n    description: \"Instant help from our support team\",\n    value: \"Available on website\",\n    action: \"Start Chat\",\n    available: \"Sunday - Thursday, 9 AM - 10 PM\"\n  },\n  {\n    icon: Building2,\n    title: \"Office Visit\",\n    description: \"Meet our team in person\",\n    value: \"King Fahd District, Riyadh\",\n    action: \"Get Directions\",\n    available: \"By appointment only\"\n  }\n]\n\nconst officeLocations = [\n  {\n    city: \"Riyadh\",\n    address: \"King Fahd District, Riyadh 12234, Saudi Arabia\",\n    phone: \"+966 11 123 4567\",\n    hours: \"Sunday - Thursday: 9:00 AM - 6:00 PM\"\n  },\n  {\n    city: \"Jeddah\",\n    address: \"Al Corniche District, Jeddah 21589, Saudi Arabia\", \n    phone: \"+966 12 456 7890\",\n    hours: \"Sunday - Thursday: 9:00 AM - 6:00 PM\"\n  },\n  {\n    city: \"Dammam\",\n    address: \"King Abdulaziz District, Dammam 32245, Saudi Arabia\",\n    phone: \"+966 13 789 0123\", \n    hours: \"Sunday - Thursday: 9:00 AM - 6:00 PM\"\n  }\n]\n\nconst faqs = [\n  {\n    question: \"What is the minimum investment amount?\",\n    answer: \"You can start investing with as little as 1,000 SAR in any of our properties.\"\n  },\n  {\n    question: \"Are all investments Shariah compliant?\",\n    answer: \"Yes, all our investments are vetted and certified by our Shariah board to ensure full compliance.\"\n  },\n  {\n    question: \"How often are returns distributed?\",\n    answer: \"Rental income is typically distributed monthly, while capital appreciation is realized upon property sale or exit.\"\n  },\n  {\n    question: \"Can I sell my shares anytime?\",\n    answer: \"Yes, our platform provides liquidity options through our secondary market for most investments.\"\n  }\n]\n\nexport default function ContactPage() {\n  const { t } = useTranslation()\n\n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      subject: \"\",\n      inquiry_type: \"\",\n      message: \"\"\n    }\n  })\n\n  const onSubmit = (data: ContactFormData) => {\n    console.log(\"Contact form submitted:\", data)\n    // Handle form submission here\n    alert(\"Thank you for your message! We'll get back to you within 24 hours.\")\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden bg-gradient-to-br from-blue-50 via-white to-emerald-50 dark:from-blue-950/50 dark:via-background dark:to-emerald-950/50 py-20\">\n        <div className=\"absolute inset-0 bg-grid-pattern opacity-5\"></div>\n        <div className=\"container mx-auto px-6 relative\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <div className=\"mb-6\">\n              <Badge className=\"bg-gradient-to-r from-blue-500 to-emerald-500 text-white border-0 mb-4\">\n                <Headphones className=\"w-4 h-4 mr-2\" />\n                We're Here to Help\n              </Badge>\n            </div>\n            <h1 className=\"text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-blue-600 via-emerald-600 to-blue-800 bg-clip-text text-transparent\">\n              {t(\"contact_us\")}\n            </h1>\n            <p className=\"text-xl text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Have questions about real estate investment? Our expert team is ready to guide you through \n              your investment journey and help you make informed decisions.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Methods */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Get in Touch</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Choose your preferred way to reach us. We're committed to providing prompt and helpful responses.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {contactMethods.map((method, index) => (\n              <Card key={index} className=\"text-center p-6 hover-elevate group cursor-pointer\" data-testid={`card-contact-${index}`}>\n                <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <method.icon className=\"w-8 h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl font-bold mb-2\">{method.title}</h3>\n                <p className=\"text-muted-foreground text-sm mb-3\">{method.description}</p>\n                <p className=\"font-semibold text-blue-600 mb-2\">{method.value}</p>\n                <p className=\"text-xs text-muted-foreground mb-4\">{method.available}</p>\n                <Button size=\"sm\" variant=\"outline\" className=\"w-full\" data-testid={`button-${method.action.toLowerCase().replace(/\\s+/g, '-')}`}>\n                  {method.action}\n                </Button>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Send Us a Message</h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Fill out the form below and we'll get back to you within 24 hours.\n              </p>\n            </div>\n            <Card className=\"p-8\">\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"name\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Full Name *</FormLabel>\n                          <FormControl>\n                            <Input placeholder=\"Enter your full name\" {...field} data-testid=\"input-name\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"email\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Email Address *</FormLabel>\n                          <FormControl>\n                            <Input type=\"email\" placeholder=\"Enter your email\" {...field} data-testid=\"input-email\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <FormField\n                      control={form.control}\n                      name=\"phone\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Phone Number *</FormLabel>\n                          <FormControl>\n                            <Input type=\"tel\" placeholder=\"+966 5X XXX XXXX\" {...field} data-testid=\"input-phone\" />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <FormField\n                      control={form.control}\n                      name=\"inquiry_type\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Inquiry Type *</FormLabel>\n                          <Select onValueChange={field.onChange} defaultValue={field.value}>\n                            <FormControl>\n                              <SelectTrigger data-testid=\"select-inquiry-type\">\n                                <SelectValue placeholder=\"Select inquiry type\" />\n                              </SelectTrigger>\n                            </FormControl>\n                            <SelectContent>\n                              <SelectItem value=\"investment\">Investment Questions</SelectItem>\n                              <SelectItem value=\"account\">Account Support</SelectItem>\n                              <SelectItem value=\"technical\">Technical Issues</SelectItem>\n                              <SelectItem value=\"partnership\">Partnership Inquiry</SelectItem>\n                              <SelectItem value=\"media\">Media/Press</SelectItem>\n                              <SelectItem value=\"other\">Other</SelectItem>\n                            </SelectContent>\n                          </Select>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                  </div>\n\n                  <FormField\n                    control={form.control}\n                    name=\"subject\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Subject *</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"Brief description of your inquiry\" {...field} data-testid=\"input-subject\" />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"message\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Message *</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Please provide details about your inquiry...\"\n                            className=\"min-h-[120px]\"\n                            {...field}\n                            data-testid=\"textarea-message\"\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                    <CheckCircle className=\"w-4 h-4 text-green-600\" />\n                    <span>We'll respond within 24 hours during business days</span>\n                  </div>\n\n                  <Button \n                    type=\"submit\" \n                    size=\"lg\" \n                    className=\"w-full bg-gradient-to-r from-blue-600 to-emerald-600 hover:from-blue-700 hover:to-emerald-700\"\n                    data-testid=\"button-submit-contact\"\n                  >\n                    <Send className=\"w-5 h-5 mr-2\" />\n                    Send Message\n                  </Button>\n                </form>\n              </Form>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Office Locations */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Our Offices</h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Visit us at any of our locations across Saudi Arabia.\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {officeLocations.map((office, index) => (\n              <Card key={index} className=\"p-6 hover-elevate\" data-testid={`card-office-${index}`}>\n                <CardHeader className=\"pb-4\">\n                  <CardTitle className=\"flex items-center\">\n                    <MapPin className=\"w-5 h-5 mr-2 text-blue-600\" />\n                    {office.city}\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <p className=\"text-sm text-muted-foreground mb-1\">Address</p>\n                    <p className=\"text-sm\">{office.address}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground mb-1\">Phone</p>\n                    <p className=\"text-sm font-medium text-blue-600\">{office.phone}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-muted-foreground mb-1\">Hours</p>\n                    <p className=\"text-sm\">{office.hours}</p>\n                  </div>\n                  <Button variant=\"outline\" size=\"sm\" className=\"w-full\" data-testid={`button-directions-${office.city.toLowerCase()}`}>\n                    <MapPin className=\"w-4 h-4 mr-2\" />\n                    Get Directions\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-3xl md:text-4xl font-bold mb-4\">Frequently Asked Questions</h2>\n              <p className=\"text-lg text-muted-foreground\">\n                Quick answers to common questions about Zaron and real estate investment.\n              </p>\n            </div>\n            <div className=\"space-y-6\">\n              {faqs.map((faq, index) => (\n                <Card key={index} className=\"p-6 hover-elevate\" data-testid={`card-faq-${index}`}>\n                  <h3 className=\"text-lg font-semibold mb-3\">{faq.question}</h3>\n                  <p className=\"text-muted-foreground\">{faq.answer}</p>\n                </Card>\n              ))}\n            </div>\n            <div className=\"text-center mt-12\">\n              <p className=\"text-muted-foreground mb-4\">\n                Don't see your question answered?\n              </p>\n              <Button variant=\"outline\" data-testid=\"button-view-all-faqs\">\n                View All FAQs\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Emergency Contact */}\n      <section className=\"py-12 bg-gradient-to-r from-blue-600 to-emerald-600 text-white\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"text-center\">\n            <h3 className=\"text-2xl font-bold mb-4\">Need Urgent Support?</h3>\n            <p className=\"mb-6\">\n              For urgent account or investment issues, contact our 24/7 emergency support line.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" variant=\"secondary\" className=\"bg-white text-blue-600 hover:bg-gray-100\" data-testid=\"button-emergency-call\">\n                <Phone className=\"w-5 h-5 mr-2\" />\n                Emergency: +966 11 999 8888\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\" data-testid=\"button-live-chat\">\n                <Headphones className=\"w-5 h-5 mr-2\" />\n                Live Chat Support\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":17371},"client/src/pages/website/home.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { Building, TrendingUp, Shield, Globe, Users, Award } from \"lucide-react\"\nimport { motion } from \"framer-motion\"\n\nexport default function WebsiteHome() {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-emerald-50 dark:from-blue-950 dark:via-gray-900 dark:to-emerald-950\">\n      {/* Hero Section */}\n      <section className=\"relative pt-20 pb-32 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600/20 to-emerald-600/20 backdrop-blur-3xl\"></div>\n        <div className=\"relative container mx-auto px-6 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            className=\"max-w-4xl mx-auto\"\n          >\n            <h1 className=\"text-5xl md:text-7xl font-bold bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent mb-6\">\n              {t(\"landing_title\")}\n            </h1>\n            <p className=\"text-xl md:text-2xl text-muted-foreground mb-8 leading-relaxed\">\n              {t(\"landing_subtitle\")}\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"text-lg px-8 py-3\" data-testid=\"button-get-started\">\n                {t(\"get_started\")}\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"text-lg px-8 py-3\" data-testid=\"button-learn-more\">\n                {t(\"learn_more_cta\")}\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-background/50 backdrop-blur-sm\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"text-center mb-16\"\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">{t(\"why_zaron\")}</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              The premier platform for real estate investment in Saudi Arabia's growing market\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                icon: <Building className=\"h-8 w-8\" />,\n                title: t(\"vision_2030\"),\n                description: \"Invest in Saudi Arabia's ambitious Vision 2030 mega-projects including NEOM, Red Sea, and Qiddiya\"\n              },\n              {\n                icon: <Shield className=\"h-8 w-8\" />,\n                title: t(\"shariah_compliant\"),\n                description: \"All investments are fully Shariah-compliant and approved by our Islamic finance board\"\n              },\n              {\n                icon: <TrendingUp className=\"h-8 w-8\" />,\n                title: \"High Returns\",\n                description: \"Target returns of 12-18% annually through carefully selected prime real estate opportunities\"\n              },\n              {\n                icon: <Globe className=\"h-8 w-8\" />,\n                title: \"Global Access\",\n                description: \"Invest from anywhere in the world with our multi-language platform and global payment support\"\n              },\n              {\n                icon: <Users className=\"h-8 w-8\" />,\n                title: \"Community Driven\",\n                description: \"Join thousands of investors building wealth together through collective real estate investment\"\n              },\n              {\n                icon: <Award className=\"h-8 w-8\" />,\n                title: \"Award Winning\",\n                description: \"Recognized as the leading fintech platform for real estate investment in the Middle East\"\n              }\n            ].map((feature, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"h-full hover-elevate transition-all duration-300 border-0 bg-white/60 dark:bg-gray-800/60 backdrop-blur-sm\">\n                  <CardHeader>\n                    <div className=\"h-12 w-12 bg-gradient-to-r from-blue-500 to-emerald-500 rounded-lg flex items-center justify-center text-white mb-4\">\n                      {feature.icon}\n                    </div>\n                    <CardTitle className=\"text-xl\">{feature.title}</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-muted-foreground\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600/10 to-emerald-600/10\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\">\n            {[\n              { value: \"2.5B+\", label: \"Total Investments\" },\n              { value: \"50K+\", label: \"Active Investors\" },\n              { value: \"500+\", label: \"Properties\" },\n              { value: \"15.2%\", label: \"Average Return\" }\n            ].map((stat, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                data-testid={`stat-${stat.label.toLowerCase().replace(/\\s+/g, '-')}`}\n              >\n                <div className=\"text-4xl md:text-5xl font-bold bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent mb-2\">\n                  {stat.value}\n                </div>\n                <div className=\"text-muted-foreground font-medium\">{stat.label}</div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20\">\n        <div className=\"container mx-auto px-6 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"max-w-2xl mx-auto\"\n          >\n            <h2 className=\"text-4xl font-bold mb-4\">Ready to Start Investing?</h2>\n            <p className=\"text-xl text-muted-foreground mb-8\">\n              Join thousands of investors already building wealth through Saudi Arabia's real estate market\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button size=\"lg\" className=\"text-lg px-8 py-3\" data-testid=\"button-register-now\">\n                {t(\"register_now\")}\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" className=\"text-lg px-8 py-3\" data-testid=\"button-download-app\">\n                {t(\"download_app\")}\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":7636},"client/src/pages/website/invest.tsx":{"content":"import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { useTranslation } from \"@/hooks/use-translation\"\nimport { AuthDialog } from \"@/components/auth-dialog\"\nimport { motion } from \"framer-motion\"\nimport { \n  Building2, \n  TrendingUp, \n  Shield, \n  Star, \n  MapPin, \n  Calendar,\n  Users,\n  DollarSign,\n  CheckCircle,\n  ArrowRight,\n  Lock,\n  Eye,\n  Globe,\n  Banknote,\n  PieChart,\n  BarChart3,\n  Crown,\n  Zap,\n  Award,\n  FileCheck\n} from \"lucide-react\"\n\nconst featuredProperties = [\n  {\n    id: 1,\n    title: \"NEOM Residential Complex\",\n    location: \"NEOM, Tabuk Province\",\n    price: \"500,000\",\n    expectedReturn: \"12%\",\n    fundingProgress: 85,\n    remainingDays: 15,\n    investors: 234,\n    image: \"https://images.unsplash.com/photo-1545324418-cc1a3fa10c00?w=400\",\n    tags: [\"Vision 2030\", \"Shariah Compliant\", \"High Yield\"]\n  },\n  {\n    id: 2,\n    title: \"Riyadh Downtown Tower\",\n    location: \"King Fahd District, Riyadh\",\n    price: \"750,000\",\n    expectedReturn: \"10%\",\n    fundingProgress: 65,\n    remainingDays: 22,\n    investors: 189,\n    image: \"https://images.unsplash.com/photo-1486406146926-c627a92ad1ab?w=400\",\n    tags: [\"Prime Location\", \"Commercial\", \"Stable Returns\"]\n  },\n  {\n    id: 3,\n    title: \"Red Sea Resort Development\",\n    location: \"Red Sea Project\",\n    price: \"1,200,000\",\n    expectedReturn: \"15%\",\n    fundingProgress: 45,\n    remainingDays: 35,\n    investors: 156,\n    image: \"https://images.unsplash.com/photo-1566073771259-6a8506099945?w=400\",\n    tags: [\"Tourism\", \"Luxury\", \"Mega Project\"]\n  }\n]\n\n// Investment benefits will be localized within the component\n\nexport default function InvestPage() {\n  const { t } = useTranslation()\n  \n  // Localized featured properties with translated tags\n  const localizedFeaturedProperties = featuredProperties.map(property => ({\n    ...property,\n    tags: property.id === 1 ? [t(\"vision_2030\"), t(\"shariah_compliant_tag\"), t(\"high_yield\")] :\n          property.id === 2 ? [t(\"prime_location\"), t(\"commercial\"), t(\"stable_returns\")] :\n          [t(\"tourism\"), t(\"luxury\"), t(\"mega_project\")]\n  }))\n  \n  // Localized investment benefits\n  const localizedInvestmentBenefits = [\n    {\n      icon: TrendingUp,\n      title: t(\"superior_returns\"),\n      description: t(\"superior_desc\")\n    },\n    {\n      icon: Shield,\n      title: t(\"shariah_compliance\"),\n      description: t(\"shariah_desc\")\n    },\n    {\n      icon: Building2,\n      title: t(\"premium_properties\"),\n      description: t(\"premium_desc\")\n    },\n    {\n      icon: Users,\n      title: t(\"fractional_ownership\"),\n      description: t(\"fractional_desc\")\n    }\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Hero Section with Beautiful Saudi-inspired Design */}\n      <section className=\"relative min-h-[90vh] overflow-hidden bg-gradient-to-br from-emerald-900 via-blue-900 to-emerald-800\">\n        {/* Background Image with Overlay */}\n        <div className=\"absolute inset-0\">\n          <div \n            className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\"\n            style={{\n              backgroundImage: `url('https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=1920&h=1080&fit=crop')`\n            }}\n          />\n          {/* Dark overlay for text readability */}\n          <div className=\"absolute inset-0 bg-gradient-to-br from-emerald-900/80 via-blue-900/85 to-emerald-800/80\" />\n          {/* Golden accent overlay */}\n          <div className=\"absolute inset-0 bg-gradient-to-t from-amber-500/10 via-transparent to-transparent\" />\n        </div>\n\n        {/* Animated Background Elements */}\n        <div className=\"absolute inset-0 overflow-hidden\">\n          <motion.div\n            className=\"absolute -top-40 -right-40 w-80 h-80 bg-emerald-400/20 rounded-full blur-3xl\"\n            animate={{\n              scale: [1, 1.2, 1],\n              opacity: [0.3, 0.5, 0.3],\n            }}\n            transition={{\n              duration: 8,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n          <motion.div\n            className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-blue-400/20 rounded-full blur-3xl\"\n            animate={{\n              scale: [1.2, 1, 1.2],\n              opacity: [0.2, 0.4, 0.2],\n            }}\n            transition={{\n              duration: 10,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        </div>\n\n        <div className=\"relative container mx-auto px-6 pt-32 pb-20\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            {/* Hero Badges */}\n            <motion.div \n              className=\"mb-8 flex justify-center gap-4 flex-wrap\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n            >\n              <Badge className=\"bg-emerald-500/20 text-emerald-100 border border-emerald-500/30 backdrop-blur-sm px-4 py-2 text-sm\">\n                <Crown className=\"w-4 h-4 mr-2\" />\n                {t(\"shariah_compliant\")}\n              </Badge>\n              <Badge className=\"bg-blue-500/20 text-blue-100 border border-blue-500/30 backdrop-blur-sm px-4 py-2 text-sm\">\n                <Building2 className=\"w-4 h-4 mr-2\" />\n                {t(\"vision_2030\")}\n              </Badge>\n              <Badge className=\"bg-amber-500/20 text-amber-100 border border-amber-500/30 backdrop-blur-sm px-4 py-2 text-sm\">\n                <Award className=\"w-4 h-4 mr-2\" />\n                {t(\"sama_regulated_title\")}\n              </Badge>\n            </motion.div>\n\n            {/* Main Hero Heading */}\n            <motion.h1 \n              className=\"text-6xl md:text-7xl lg:text-8xl font-bold mb-6 text-white leading-tight\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n            >\n              <span className=\"bg-gradient-to-r from-emerald-300 via-white to-blue-300 bg-clip-text text-transparent\">\n                {t(\"hero_title\")}\n              </span>\n            </motion.h1>\n\n            {/* Hero Subtitle */}\n            <motion.p \n              className=\"text-xl md:text-2xl text-emerald-100/90 mb-8 max-w-3xl mx-auto leading-relaxed\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.4 }}\n            >\n              {t(\"hero_subtitle\")}\n            </motion.p>\n\n            {/* Hero Stats */}\n            <motion.div \n              className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-10 max-w-2xl mx-auto\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.6 }}\n            >\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-1\">{t(\"invested_amount\")}</div>\n                <div className=\"text-emerald-200/80 text-sm\">{t(\"total_invested\")}</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-1\">{t(\"avg_returns\")}</div>\n                <div className=\"text-emerald-200/80 text-sm\">{t(\"avg_returns_label\")}</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-3xl font-bold text-white mb-1\">{t(\"total_properties\")}</div>\n                <div className=\"text-emerald-200/80 text-sm\">{t(\"properties_funded\")}</div>\n              </div>\n            </motion.div>\n\n            {/* Hero CTAs */}\n            <motion.div \n              className=\"flex flex-col sm:flex-row gap-4 justify-center\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8, delay: 0.8 }}\n            >\n              <AuthDialog defaultTab=\"register\">\n                <Button \n                  size=\"lg\" \n                  className=\"bg-gradient-to-r from-emerald-500 to-emerald-600 text-white border-0 shadow-2xl\"\n                  data-testid=\"button-start-investing\"\n                >\n                  <Zap className=\"w-5 h-5 mr-2\" />\n                  {t(\"start_investing_now\")}\n                </Button>\n              </AuthDialog>\n              \n              <Button \n                size=\"lg\" \n                variant=\"outline\" \n                className=\"border-2 border-white/30 text-white backdrop-blur-sm\"\n                onClick={() => {\n                  const propertiesSection = document.getElementById('properties-section');\n                  propertiesSection?.scrollIntoView({ behavior: 'smooth' });\n                }}\n                data-testid=\"button-explore-opportunities\"\n              >\n                <Eye className=\"w-5 h-5 mr-2\" />\n                {t(\"explore_opportunities\")}\n                <ArrowRight className=\"w-5 h-5 ml-2\" />\n              </Button>\n            </motion.div>\n\n            {/* Trust Indicators */}\n            <motion.div \n              className=\"mt-12 flex items-center justify-center gap-8 text-emerald-200/60 text-sm\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 1, delay: 1 }}\n            >\n              <div className=\"flex items-center gap-2\">\n                <Shield className=\"w-4 h-4\" />\n                {t(\"shariah_certified\")}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Star className=\"w-4 h-4\" />\n                {t(\"rating_display\")}\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Globe className=\"w-4 h-4\" />\n                {t(\"sama_licensed\")}\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Invest Section */}\n      <section className=\"py-20 bg-gradient-to-br from-background via-emerald-50/30 to-blue-50/30 dark:from-background dark:via-emerald-950/30 dark:to-blue-950/30\">\n        <div className=\"container mx-auto px-6\">\n          <div className=\"max-w-6xl mx-auto\">\n            <motion.div \n              className=\"text-center mb-16\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <Badge className=\"bg-emerald-100 text-emerald-700 dark:bg-emerald-900 dark:text-emerald-300 mb-4\">\n                <BarChart3 className=\"w-4 h-4 mr-2\" />\n                Why Choose Real Estate Crowdfunding\n              </Badge>\n              <h2 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-emerald-600 to-blue-600 bg-clip-text text-transparent\">\n                Transform Your Investment Portfolio\n              </h2>\n              <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n                Access exclusive Saudi real estate opportunities with fractional ownership, \n                professional management, and Shariah-compliant returns.\n              </p>\n            </motion.div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {[\n                {\n                  icon: PieChart,\n                  title: \"Fractional Ownership\",\n                  description: \"Start with as little as SAR 1,000 and own a piece of premium real estate in Saudi Arabia's most promising projects.\",\n                  highlight: \"Min. SAR 1,000\"\n                },\n                {\n                  icon: TrendingUp,\n                  title: \"Superior Returns\",\n                  description: \"Historical returns of 12-18% annually from carefully selected real estate projects aligned with Vision 2030.\",\n                  highlight: \"12-18% Returns\"\n                },\n                {\n                  icon: Shield,\n                  title: \"Shariah Compliant\",\n                  description: \"All investments are certified halal by our Shariah board, ensuring your investments align with Islamic principles.\",\n                  highlight: \"100% Halal\"\n                },\n                {\n                  icon: Building2,\n                  title: \"Premium Properties\",\n                  description: \"Curated selection of high-quality developments in Riyadh, NEOM, and other strategic locations.\",\n                  highlight: \"Prime Locations\"\n                },\n                {\n                  icon: Users,\n                  title: \"Professional Management\",\n                  description: \"Expert property management and transparent reporting so you can invest passively and confidently.\",\n                  highlight: \"Hands-Free\"\n                },\n                {\n                  icon: Globe,\n                  title: \"Vision 2030 Aligned\",\n                  description: \"Invest in the Kingdom's transformation with projects that are driving Saudi Arabia's economic diversification.\",\n                  highlight: \"Future-Ready\"\n                }\n              ].map((benefit, index) => (\n                <motion.div\n                  key={benefit.title}\n                  initial={{ opacity: 0, y: 20 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                >\n                  <Card className=\"h-full hover-elevate group border-0 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm\">\n                    <CardContent className=\"p-8\">\n                      <div className=\"mb-6\">\n                        <div className=\"w-14 h-14 bg-gradient-to-br from-emerald-500 to-blue-500 rounded-2xl flex items-center justify-center mb-4 group-hover:scale-110 transition-transform duration-300\">\n                          <benefit.icon className=\"w-7 h-7 text-white\" />\n                        </div>\n                        <Badge variant=\"secondary\" className=\"bg-emerald-100 text-emerald-700 dark:bg-emerald-900 dark:text-emerald-300\">\n                          {benefit.highlight}\n                        </Badge>\n                      </div>\n                      <h3 className=\"text-xl font-bold mb-3 text-foreground\">{benefit.title}</h3>\n                      <p className=\"text-muted-foreground leading-relaxed\">{benefit.description}</p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n\n            <motion.div \n              className=\"text-center mt-16\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <AuthDialog defaultTab=\"register\">\n                <Button size=\"lg\" className=\"bg-gradient-to-r from-emerald-600 to-blue-600\" data-testid=\"button-why-invest-cta\">\n                  <CheckCircle className=\"w-5 h-5 mr-2\" />\n                  Start Your Investment Journey\n                </Button>\n              </AuthDialog>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Featured Properties - Teaser Mode */}\n      <section id=\"properties-section\" className=\"py-20 bg-gradient-to-br from-gray-50 to-emerald-50/50 dark:from-gray-900 dark:to-emerald-950/50\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300 mb-4\">\n              <Building2 className=\"w-4 h-4 mr-2\" />\n              Live Investment Opportunities\n            </Badge>\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n              Exclusive Saudi Projects\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Premium real estate opportunities in Saudi Arabia's most promising developments. \n              Register to unlock detailed investment information and secure your allocation.\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {localizedFeaturedProperties.map((property, index) => (\n              <motion.div\n                key={property.id}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n              >\n                <Card className=\"overflow-hidden hover-elevate group cursor-pointer border-0 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm\" data-testid={`card-property-${property.id}`}>\n                  <div className=\"relative\">\n                    <img \n                      src={property.image} \n                      alt={property.title}\n                      className=\"w-full h-56 object-cover group-hover:scale-105 transition-transform duration-500\"\n                    />\n                    {/* Overlay with gradient */}\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent\" />\n                    \n                    {/* Tags */}\n                    <div className=\"absolute top-4 left-4 flex flex-wrap gap-2\">\n                      {property.tags.slice(0, 2).map((tag, index) => (\n                        <Badge key={index} className=\"bg-emerald-500/90 text-white border-0 backdrop-blur-sm\">\n                          {tag}\n                        </Badge>\n                      ))}\n                    </div>\n\n                    {/* Status Badge */}\n                    <div className=\"absolute top-4 right-4\">\n                      <Badge className=\"bg-blue-500/90 text-white border-0 backdrop-blur-sm\">\n                        <Zap className=\"w-3 h-3 mr-1\" />\n                        Live\n                      </Badge>\n                    </div>\n\n                    {/* Location */}\n                    <div className=\"absolute bottom-4 left-4 right-4\">\n                      <h3 className=\"text-xl font-bold text-white mb-1\">{property.title}</h3>\n                      <div className=\"flex items-center text-emerald-200\">\n                        <MapPin className=\"w-4 h-4 mr-1\" />\n                        <span className=\"text-sm\">{property.location}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <CardContent className=\"p-6\">\n                    {/* Public Information - Always Visible */}\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <div className=\"flex items-center gap-2\">\n                          <Users className=\"w-4 h-4 text-muted-foreground\" />\n                          <span className=\"text-sm text-muted-foreground\">{property.investors}+ investors</span>\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <Calendar className=\"w-4 h-4 text-muted-foreground\" />\n                          <span className=\"text-sm text-muted-foreground\">{property.remainingDays} days left</span>\n                        </div>\n                      </div>\n\n                      {/* Basic Progress Bar */}\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span className=\"text-muted-foreground\">Funding Progress</span>\n                          <span className=\"font-medium\">{property.fundingProgress}%</span>\n                        </div>\n                        <Progress value={property.fundingProgress} className=\"h-2\" />\n                      </div>\n\n                      {/* Gated Information with Blur Effect */}\n                      <div className=\"relative\">\n                        <div className=\"filter blur-sm pointer-events-none\">\n                          <div className=\"grid grid-cols-2 gap-4 py-4\">\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Min. Investment</p>\n                              <p className=\"text-lg font-bold\">SAR {property.price}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-muted-foreground\">Expected Return</p>\n                              <p className=\"text-lg font-bold text-emerald-600\">{property.expectedReturn}</p>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {/* Lock Overlay */}\n                        <div className=\"absolute inset-0 flex items-center justify-center bg-background/80 backdrop-blur-sm rounded-lg\">\n                          <div className=\"text-center\">\n                            <div className=\"w-12 h-12 bg-gradient-to-br from-emerald-500 to-blue-500 rounded-full flex items-center justify-center mx-auto mb-3\">\n                              <Lock className=\"w-6 h-6 text-white\" />\n                            </div>\n                            <p className=\"text-sm font-medium text-foreground mb-1\">Investment Details</p>\n                            <p className=\"text-xs text-muted-foreground\">Register to unlock</p>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Action Buttons */}\n                      <div className=\"grid grid-cols-2 gap-3 pt-2\">\n                        <AuthDialog defaultTab=\"login\">\n                          <Button variant=\"outline\" size=\"sm\" className=\"w-full\" data-testid={`button-view-details-${property.id}`}>\n                            <Eye className=\"w-4 h-4 mr-2\" />\n                            View Details\n                          </Button>\n                        </AuthDialog>\n                        <AuthDialog defaultTab=\"register\">\n                          <Button size=\"sm\" className=\"w-full bg-gradient-to-r from-emerald-600 to-blue-600\" data-testid={`button-invest-${property.id}`}>\n                            <DollarSign className=\"w-4 h-4 mr-2\" />\n                            Invest Now\n                          </Button>\n                        </AuthDialog>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n\n          <motion.div \n            className=\"text-center mt-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <AuthDialog defaultTab=\"register\">\n              <Button size=\"lg\" className=\"bg-gradient-to-r from-emerald-600 to-blue-600\" data-testid=\"button-browse-all-properties\">\n                <Building2 className=\"w-5 h-5 mr-2\" />\n                Browse All Properties\n              </Button>\n            </AuthDialog>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Trust Building - Testimonials */}\n      <section className=\"py-20 bg-gradient-to-br from-emerald-50/50 to-blue-50/50 dark:from-emerald-950/30 dark:to-blue-950/30\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-4xl font-bold mb-6 bg-gradient-to-r from-emerald-600 to-blue-600 bg-clip-text text-transparent\">\n              Trusted by Thousands of Investors\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Join our community of successful real estate investors across Saudi Arabia\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-16\">\n            {[\n              {\n                name: \"Ahmed Al-Rashid\",\n                title: \"Private Equity Investor\",\n                location: \"Riyadh\",\n                testimonial: \"Zaron has transformed my investment strategy. The platform's transparency and Shariah-compliant options align perfectly with my values. I've achieved 18% returns consistently.\",\n                returns: \"18% Annual Returns\",\n                avatar: \"AR\"\n              },\n              {\n                name: \"Fatima Al-Zahra\",\n                title: \"Business Owner\",\n                location: \"Jeddah\", \n                testimonial: \"As a busy entrepreneur, Zaron's passive investment model is perfect. Professional property management and regular returns without the hassle of direct ownership.\",\n                returns: \"16% Annual Returns\",\n                avatar: \"FZ\"\n              },\n              {\n                name: \"Omar Al-Mansouri\",\n                title: \"Tech Executive\",\n                location: \"Khobar\",\n                testimonial: \"The Vision 2030 aligned properties on Zaron have been exceptional investments. Clear reporting, professional management, and impressive growth potential.\",\n                returns: \"22% Annual Returns\", \n                avatar: \"OM\"\n              }\n            ].map((testimonial, index) => (\n              <motion.div\n                key={index}\n                className=\"bg-card/80 backdrop-blur-sm p-8 rounded-xl border hover-elevate\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: index * 0.2 }}\n                viewport={{ once: true }}\n                data-testid={`testimonial-${index}`}\n              >\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-emerald-500 to-blue-500 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4\">\n                    {testimonial.avatar}\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold text-lg\">{testimonial.name}</h4>\n                    <p className=\"text-muted-foreground\">{testimonial.title}</p>\n                    <p className=\"text-sm text-emerald-600 dark:text-emerald-400\">{testimonial.location}</p>\n                  </div>\n                </div>\n                <blockquote className=\"text-muted-foreground mb-4 italic\">\n                  \"{testimonial.testimonial}\"\n                </blockquote>\n                <div className=\"bg-gradient-to-r from-emerald-500/10 to-blue-500/10 p-3 rounded-lg\">\n                  <p className=\"text-sm font-semibold text-emerald-600 dark:text-emerald-400\">\n                    <TrendingUp className=\"w-4 h-4 inline mr-2\" />\n                    {testimonial.returns}\n                  </p>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Trust Statistics */}\n          <motion.div \n            className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"bg-card/50 backdrop-blur-sm p-6 rounded-xl border\">\n              <div className=\"text-3xl font-bold text-emerald-600 dark:text-emerald-400 mb-2\">4.9/5</div>\n              <p className=\"text-muted-foreground\">Investor Rating</p>\n            </div>\n            <div className=\"bg-card/50 backdrop-blur-sm p-6 rounded-xl border\">\n              <div className=\"text-3xl font-bold text-emerald-600 dark:text-emerald-400 mb-2\">99.2%</div>\n              <p className=\"text-muted-foreground\">Success Rate</p>\n            </div>\n            <div className=\"bg-card/50 backdrop-blur-sm p-6 rounded-xl border\">\n              <div className=\"text-3xl font-bold text-emerald-600 dark:text-emerald-400 mb-2\">72h</div>\n              <p className=\"text-muted-foreground\">Avg. Payout</p>\n            </div>\n            <div className=\"bg-card/50 backdrop-blur-sm p-6 rounded-xl border\">\n              <div className=\"text-3xl font-bold text-emerald-600 dark:text-emerald-400 mb-2\">24/7</div>\n              <p className=\"text-muted-foreground\">Support</p>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Security & Compliance */}\n      <section className=\"py-16 bg-background border-y\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div \n            className=\"text-center mb-12\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-3xl font-bold mb-4\">Security & Compliance</h2>\n            <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n              Your investments are protected by industry-leading security measures and regulatory compliance\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\n            {[\n              {\n                icon: Shield,\n                title: \"SAMA Regulated\",\n                description: \"Licensed by Saudi Arabian Monetary Authority\"\n              },\n              {\n                icon: CheckCircle,\n                title: \"Shariah Compliant\",\n                description: \"All investments certified by Shariah board\"\n              },\n              {\n                icon: Lock,\n                title: \"Bank-Grade Security\",\n                description: \"256-bit SSL encryption and secure data storage\"\n              },\n              {\n                icon: FileCheck,\n                title: \"Legal Protection\",\n                description: \"Full legal documentation and investor protection\"\n              }\n            ].map((feature, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center p-6 bg-card/50 backdrop-blur-sm rounded-xl border hover-elevate\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.8, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                data-testid={`security-feature-${index}`}\n              >\n                <feature.icon className=\"w-12 h-12 mx-auto mb-4 text-emerald-600 dark:text-emerald-400\" />\n                <h4 className=\"font-semibold mb-2\">{feature.title}</h4>\n                <p className=\"text-sm text-muted-foreground\">{feature.description}</p>\n              </motion.div>\n            ))}\n          </div>\n\n          {/* Partner Logos */}\n          <motion.div \n            className=\"text-center\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h3 className=\"text-xl font-semibold mb-8 text-muted-foreground\">Trusted Partners</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 items-center opacity-60\">\n              {[\n                { name: \"Al Rajhi Bank\", logo: \"ARB\" },\n                { name: \"Saudi Investment Bank\", logo: \"SIB\" }, \n                { name: \"Riyad Capital\", logo: \"RC\" },\n                { name: \"Jadwa Investment\", logo: \"JI\" }\n              ].map((partner, index) => (\n                <div \n                  key={index}\n                  className=\"bg-gradient-to-br from-gray-100 to-gray-200 dark:from-gray-700 dark:to-gray-800 p-6 rounded-lg flex items-center justify-center h-20 font-bold text-gray-600 dark:text-gray-300\"\n                  data-testid={`partner-${index}`}\n                >\n                  {partner.logo}\n                </div>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* How It Works Section */}\n      <section className=\"py-20 bg-gradient-to-br from-emerald-50 to-blue-50 dark:from-emerald-950/30 dark:to-blue-950/30\">\n        <div className=\"container mx-auto px-6\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <Badge className=\"bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300 mb-4\">\n              <CheckCircle className=\"w-4 h-4 mr-2\" />\n              Simple & Secure Process\n            </Badge>\n            <h2 className=\"text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-600 to-emerald-600 bg-clip-text text-transparent\">\n              Start Investing in 3 Steps\n            </h2>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Our streamlined process makes real estate investment accessible to everyone\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto\">\n            {[\n              {\n                step: \"01\",\n                title: \"Register & Verify\",\n                description: \"Create your account and complete KYC verification in under 5 minutes. All information is securely encrypted and Shariah compliant.\",\n                icon: Users,\n                color: \"from-emerald-500 to-emerald-600\"\n              },\n              {\n                step: \"02\", \n                title: \"Browse & Select\",\n                description: \"Explore our curated portfolio of premium Saudi real estate projects. View detailed analytics, returns, and investment terms.\",\n                icon: Building2,\n                color: \"from-blue-500 to-blue-600\"\n              },\n              {\n                step: \"03\",\n                title: \"Invest & Earn\",\n                description: \"Make your investment starting from SAR 1,000. Track performance and receive returns directly to your account.\",\n                icon: TrendingUp,\n                color: \"from-amber-500 to-amber-600\"\n              }\n            ].map((step, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.2 }}\n                viewport={{ once: true }}\n                className=\"relative\"\n              >\n                <Card className=\"text-center p-8 hover-elevate border-0 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm h-full\" data-testid={`card-step-${index + 1}`}>\n                  <div className=\"relative mb-6\">\n                    <div className={`w-20 h-20 bg-gradient-to-br ${step.color} rounded-2xl flex items-center justify-center mx-auto shadow-lg`}>\n                      <step.icon className=\"w-10 h-10 text-white\" />\n                    </div>\n                    <div className=\"absolute -top-3 -right-3 w-10 h-10 bg-gradient-to-r from-emerald-600 to-blue-600 rounded-full flex items-center justify-center text-white text-lg font-bold shadow-lg\">\n                      {step.step}\n                    </div>\n                  </div>\n                  <h3 className=\"text-2xl font-bold mb-4 text-foreground\">{step.title}</h3>\n                  <p className=\"text-muted-foreground leading-relaxed\">{step.description}</p>\n                </Card>\n                \n                {/* Connection Line */}\n                {index < 2 && (\n                  <div className=\"hidden md:block absolute top-20 -right-4 w-8 h-1 bg-gradient-to-r from-emerald-300 to-blue-300 rounded-full z-10\"></div>\n                )}\n              </motion.div>\n            ))}\n          </div>\n\n          <motion.div \n            className=\"text-center mt-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <AuthDialog defaultTab=\"register\">\n              <Button size=\"lg\" className=\"bg-gradient-to-r from-emerald-600 to-blue-600\" data-testid=\"button-get-started-process\">\n                <Zap className=\"w-5 h-5 mr-2\" />\n                Get Started Now\n              </Button>\n            </AuthDialog>\n          </motion.div>\n        </div>\n      </section>\n    </div>\n  )\n}","size_bytes":37063}},"version":1}